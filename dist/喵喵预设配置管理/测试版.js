/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ var __webpack_modules__ = ({

/***/ "./src/喵喵预设配置管理/index.ts":
/*!*******************************!*\
  !*** ./src/喵喵预设配置管理/index.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./事件绑定 */ \"./src/喵喵预设配置管理/事件绑定.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./初始化和配置 */ \"./src/喵喵预设配置管理/初始化和配置.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./加载和卸载时执行函数 */ \"./src/喵喵预设配置管理/加载和卸载时执行函数.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./导入导出功能 */ \"./src/喵喵预设配置管理/导入导出功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./批量操作功能 */ \"./src/喵喵预设配置管理/批量操作功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./条目分组功能 */ \"./src/喵喵预设配置管理/条目分组功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./正则绑定功能 */ \"./src/喵喵预设配置管理/正则绑定功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./界面创建和管理 */ \"./src/喵喵预设配置管理/界面创建和管理.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./角色绑定功能 */ \"./src/喵喵预设配置管理/角色绑定功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./辅助弹窗功能 */ \"./src/喵喵预设配置管理/辅助弹窗功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./配置存储和读取 */ \"./src/喵喵预设配置管理/配置存储和读取.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./配置操作功能 */ \"./src/喵喵预设配置管理/配置操作功能.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMv5Za15Za16aKE6K6+6YWN572u566h55CGL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBZ0I7QUFDRTtBQUNJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQztBQUNEO0FBQ0E7QUFDQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF2ZXJuX2hlbHBlcl90ZW1wbGF0ZS8uL3NyYy/llrXllrXpooTorr7phY3nva7nrqHnkIYvaW5kZXgudHM/Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi/kuovku7bnu5HlrponO1xuaW1wb3J0ICcuL+WIneWni+WMluWSjOmFjee9ric7XG5pbXBvcnQgJy4v5Yqg6L295ZKM5Y246L295pe25omn6KGM5Ye95pWwJztcbmltcG9ydCAnLi/lr7zlhaXlr7zlh7rlip/og70nO1xuaW1wb3J0ICcuL+aJuemHj+aTjeS9nOWKn+iDvSc7XG5pbXBvcnQgJy4v5p2h55uu5YiG57uE5Yqf6IO9JztcbmltcG9ydCAnLi/mraPliJnnu5Hlrprlip/og70nO1xuaW1wb3J0ICcuL+eVjOmdouWIm+W7uuWSjOeuoeeQhic7XG5pbXBvcnQgJy4v6KeS6Imy57uR5a6a5Yqf6IO9JztcbmltcG9ydCAnLi/ovoXliqnlvLnnqpflip/og70nO1xuaW1wb3J0ICcuL+mFjee9ruWtmOWCqOWSjOivu+WPlic7XG5pbXBvcnQgJy4v6YWN572u5pON5L2c5Yqf6IO9JztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/喵喵预设配置管理/index.ts\n\n}");

/***/ }),

/***/ "./src/喵喵预设配置管理/事件绑定.ts":
/*!******************************!*\
  !*** ./src/喵喵预设配置管理/事件绑定.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bindConfigListEvents: () => (/* binding */ bindConfigListEvents)\n/* harmony export */ });\n// 配置列表的按钮事件绑定\nfunction bindConfigListEvents() {\n    const listElement = $('#preset-manager-list');\n    console.log('绑定配置列表事件，找到按钮数量:', listElement.find('button').length);\n    listElement.off('click', 'button').on('click', 'button', async function (e) {\n        const button = $(this);\n        const action = button.attr('name');\n        console.log('按钮点击事件触发，action:', action, 'configId:', button.data('id'));\n        if (action === 'more-actions') {\n            e.stopPropagation();\n            const submenu = button.siblings('.pm-submenu');\n            $('.pm-submenu').not(submenu).hide(); // Hide other open menus\n            submenu.toggle();\n            return;\n        }\n        if (action === 'close-submenu') {\n            button.closest('.pm-submenu').hide();\n            return;\n        }\n        const configId = button.data('id');\n        // 动态导入避免循环引用\n        switch (action) {\n            case 'rename-config': {\n                const { renameConfig } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./配置操作功能 */ \"./src/喵喵预设配置管理/配置操作功能.ts\"));\n                await renameConfig(configId);\n                break;\n            }\n            case 'update-config': {\n                const { updateConfig } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./配置操作功能 */ \"./src/喵喵预设配置管理/配置操作功能.ts\"));\n                await updateConfig(configId);\n                break;\n            }\n            case 'load-config': {\n                const { loadConfig } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./配置操作功能 */ \"./src/喵喵预设配置管理/配置操作功能.ts\"));\n                await loadConfig(configId);\n                break;\n            }\n            case 'export-config': {\n                const { exportConfig } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./导入导出功能 */ \"./src/喵喵预设配置管理/导入导出功能.ts\"));\n                await exportConfig(configId);\n                break;\n            }\n            case 'delete-config': {\n                const { deleteConfig } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./配置操作功能 */ \"./src/喵喵预设配置管理/配置操作功能.ts\"));\n                await deleteConfig(configId);\n                break;\n            }\n            case 'bind-regex': {\n                const { showRegexBindingPopup } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./正则绑定功能 */ \"./src/喵喵预设配置管理/正则绑定功能.ts\"));\n                await showRegexBindingPopup(configId);\n                break;\n            }\n            case 'view-config': {\n                const { showViewConfigPopup } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./辅助弹窗功能 */ \"./src/喵喵预设配置管理/辅助弹窗功能.ts\"));\n                await showViewConfigPopup(configId);\n                break;\n            }\n        }\n        button.closest('.pm-submenu').hide();\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMv5Za15Za16aKE6K6+6YWN572u566h55CGL+S6i+S7tue7keWumi50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNQLFNBQVMsb0JBQW9CO0lBQ2xDLE1BQU0sV0FBVyxHQUFHLENBQUMsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0lBQzlDLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUUsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUVuRSxXQUFXLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxLQUFLLFdBQVcsQ0FBQztRQUN4RSxNQUFNLE1BQU0sR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdkIsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNuQyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBRXhFLElBQUksTUFBTSxLQUFLLGNBQWMsRUFBRSxDQUFDO1lBQzlCLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQztZQUNwQixNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQy9DLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyx3QkFBd0I7WUFDOUQsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQ2pCLE9BQU87UUFDVCxDQUFDO1FBRUQsSUFBSSxNQUFNLEtBQUssZUFBZSxFQUFFLENBQUM7WUFDL0IsTUFBTSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNyQyxPQUFPO1FBQ1QsQ0FBQztRQUVELE1BQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFbkMsYUFBYTtRQUNiLFFBQVEsTUFBTSxFQUFFLENBQUM7WUFDZixLQUFLLGVBQWUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JCLE1BQU0sRUFBRSxZQUFZLEVBQUUsR0FBRyxNQUFNLGdJQUFrQixDQUFDO2dCQUNsRCxNQUFNLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDN0IsTUFBTTtZQUNSLENBQUM7WUFDRCxLQUFLLGVBQWUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JCLE1BQU0sRUFBRSxZQUFZLEVBQUUsR0FBRyxNQUFNLGdJQUFrQixDQUFDO2dCQUNsRCxNQUFNLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDN0IsTUFBTTtZQUNSLENBQUM7WUFDRCxLQUFLLGFBQWEsQ0FBQyxDQUFDLENBQUM7Z0JBQ25CLE1BQU0sRUFBRSxVQUFVLEVBQUUsR0FBRyxNQUFNLGdJQUFrQixDQUFDO2dCQUNoRCxNQUFNLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDM0IsTUFBTTtZQUNSLENBQUM7WUFDRCxLQUFLLGVBQWUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JCLE1BQU0sRUFBRSxZQUFZLEVBQUUsR0FBRyxNQUFNLGdJQUFrQixDQUFDO2dCQUNsRCxNQUFNLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDN0IsTUFBTTtZQUNSLENBQUM7WUFDRCxLQUFLLGVBQWUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JCLE1BQU0sRUFBRSxZQUFZLEVBQUUsR0FBRyxNQUFNLGdJQUFrQixDQUFDO2dCQUNsRCxNQUFNLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDN0IsTUFBTTtZQUNSLENBQUM7WUFDRCxLQUFLLFlBQVksQ0FBQyxDQUFDLENBQUM7Z0JBQ2xCLE1BQU0sRUFBRSxxQkFBcUIsRUFBRSxHQUFHLE1BQU0sZ0lBQWtCLENBQUM7Z0JBQzNELE1BQU0scUJBQXFCLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQ3RDLE1BQU07WUFDUixDQUFDO1lBQ0QsS0FBSyxhQUFhLENBQUMsQ0FBQyxDQUFDO2dCQUNuQixNQUFNLEVBQUUsbUJBQW1CLEVBQUUsR0FBRyxNQUFNLGdJQUFrQixDQUFDO2dCQUN6RCxNQUFNLG1CQUFtQixDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUNwQyxNQUFNO1lBQ1IsQ0FBQztRQUNILENBQUM7UUFFRCxNQUFNLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3ZDLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RhdmVybl9oZWxwZXJfdGVtcGxhdGUvLi9zcmMv5Za15Za16aKE6K6+6YWN572u566h55CGL+S6i+S7tue7keWumi50cz8iXSwic291cmNlc0NvbnRlbnQiOlsiLy8g6YWN572u5YiX6KGo55qE5oyJ6ZKu5LqL5Lu257uR5a6aXG5leHBvcnQgZnVuY3Rpb24gYmluZENvbmZpZ0xpc3RFdmVudHMoKTogdm9pZCB7XG4gIGNvbnN0IGxpc3RFbGVtZW50ID0gJCgnI3ByZXNldC1tYW5hZ2VyLWxpc3QnKTtcbiAgY29uc29sZS5sb2coJ+e7keWumumFjee9ruWIl+ihqOS6i+S7tu+8jOaJvuWIsOaMiemSruaVsOmHjzonLCBsaXN0RWxlbWVudC5maW5kKCdidXR0b24nKS5sZW5ndGgpO1xuXG4gIGxpc3RFbGVtZW50Lm9mZignY2xpY2snLCAnYnV0dG9uJykub24oJ2NsaWNrJywgJ2J1dHRvbicsIGFzeW5jIGZ1bmN0aW9uIChlKSB7XG4gICAgY29uc3QgYnV0dG9uID0gJCh0aGlzKTtcbiAgICBjb25zdCBhY3Rpb24gPSBidXR0b24uYXR0cignbmFtZScpO1xuICAgIGNvbnNvbGUubG9nKCfmjInpkq7ngrnlh7vkuovku7bop6blj5HvvIxhY3Rpb246JywgYWN0aW9uLCAnY29uZmlnSWQ6JywgYnV0dG9uLmRhdGEoJ2lkJykpO1xuXG4gICAgaWYgKGFjdGlvbiA9PT0gJ21vcmUtYWN0aW9ucycpIHtcbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICBjb25zdCBzdWJtZW51ID0gYnV0dG9uLnNpYmxpbmdzKCcucG0tc3VibWVudScpO1xuICAgICAgJCgnLnBtLXN1Ym1lbnUnKS5ub3Qoc3VibWVudSkuaGlkZSgpOyAvLyBIaWRlIG90aGVyIG9wZW4gbWVudXNcbiAgICAgIHN1Ym1lbnUudG9nZ2xlKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGFjdGlvbiA9PT0gJ2Nsb3NlLXN1Ym1lbnUnKSB7XG4gICAgICBidXR0b24uY2xvc2VzdCgnLnBtLXN1Ym1lbnUnKS5oaWRlKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgY29uZmlnSWQgPSBidXR0b24uZGF0YSgnaWQnKTtcblxuICAgIC8vIOWKqOaAgeWvvOWFpemBv+WFjeW+queOr+W8leeUqFxuICAgIHN3aXRjaCAoYWN0aW9uKSB7XG4gICAgICBjYXNlICdyZW5hbWUtY29uZmlnJzoge1xuICAgICAgICBjb25zdCB7IHJlbmFtZUNvbmZpZyB9ID0gYXdhaXQgaW1wb3J0KCcuL+mFjee9ruaTjeS9nOWKn+iDvScpO1xuICAgICAgICBhd2FpdCByZW5hbWVDb25maWcoY29uZmlnSWQpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgJ3VwZGF0ZS1jb25maWcnOiB7XG4gICAgICAgIGNvbnN0IHsgdXBkYXRlQ29uZmlnIH0gPSBhd2FpdCBpbXBvcnQoJy4v6YWN572u5pON5L2c5Yqf6IO9Jyk7XG4gICAgICAgIGF3YWl0IHVwZGF0ZUNvbmZpZyhjb25maWdJZCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAnbG9hZC1jb25maWcnOiB7XG4gICAgICAgIGNvbnN0IHsgbG9hZENvbmZpZyB9ID0gYXdhaXQgaW1wb3J0KCcuL+mFjee9ruaTjeS9nOWKn+iDvScpO1xuICAgICAgICBhd2FpdCBsb2FkQ29uZmlnKGNvbmZpZ0lkKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdleHBvcnQtY29uZmlnJzoge1xuICAgICAgICBjb25zdCB7IGV4cG9ydENvbmZpZyB9ID0gYXdhaXQgaW1wb3J0KCcuL+WvvOWFpeWvvOWHuuWKn+iDvScpO1xuICAgICAgICBhd2FpdCBleHBvcnRDb25maWcoY29uZmlnSWQpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgJ2RlbGV0ZS1jb25maWcnOiB7XG4gICAgICAgIGNvbnN0IHsgZGVsZXRlQ29uZmlnIH0gPSBhd2FpdCBpbXBvcnQoJy4v6YWN572u5pON5L2c5Yqf6IO9Jyk7XG4gICAgICAgIGF3YWl0IGRlbGV0ZUNvbmZpZyhjb25maWdJZCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY2FzZSAnYmluZC1yZWdleCc6IHtcbiAgICAgICAgY29uc3QgeyBzaG93UmVnZXhCaW5kaW5nUG9wdXAgfSA9IGF3YWl0IGltcG9ydCgnLi/mraPliJnnu5Hlrprlip/og70nKTtcbiAgICAgICAgYXdhaXQgc2hvd1JlZ2V4QmluZGluZ1BvcHVwKGNvbmZpZ0lkKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICd2aWV3LWNvbmZpZyc6IHtcbiAgICAgICAgY29uc3QgeyBzaG93Vmlld0NvbmZpZ1BvcHVwIH0gPSBhd2FpdCBpbXBvcnQoJy4v6L6F5Yqp5by556qX5Yqf6IO9Jyk7XG4gICAgICAgIGF3YWl0IHNob3dWaWV3Q29uZmlnUG9wdXAoY29uZmlnSWQpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBidXR0b24uY2xvc2VzdCgnLnBtLXN1Ym1lbnUnKS5oaWRlKCk7XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/喵喵预设配置管理/事件绑定.ts\n\n}");

/***/ }),

/***/ "./src/喵喵预设配置管理/初始化和配置.ts":
/*!********************************!*\
  !*** ./src/喵喵预设配置管理/初始化和配置.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONFIG_LOREBOOK_NAME: () => (/* binding */ CONFIG_LOREBOOK_NAME),\n/* harmony export */   TIPS: () => (/* binding */ TIPS),\n/* harmony export */   TOGGLE_BUTTON_NAME: () => (/* binding */ TOGGLE_BUTTON_NAME),\n/* harmony export */   UI_ID: () => (/* binding */ UI_ID),\n/* harmony export */   V2_MIGRATION_KEY: () => (/* binding */ V2_MIGRATION_KEY),\n/* harmony export */   ensureConfigLorebookExists: () => (/* binding */ ensureConfigLorebookExists),\n/* harmony export */   generateUUID: () => (/* binding */ generateUUID),\n/* harmony export */   generateUniqueId: () => (/* binding */ generateUniqueId),\n/* harmony export */   initializePresetManager: () => (/* binding */ initializePresetManager),\n/* harmony export */   lastProcessedCharAvatar: () => (/* binding */ lastProcessedCharAvatar),\n/* harmony export */   setLastProcessedCharAvatar: () => (/* binding */ setLastProcessedCharAvatar)\n/* harmony export */ });\n// 定义用于存储配置的世界书的固定名称\nconst CONFIG_LOREBOOK_NAME = 'PresetConfigManager_Data';\nconst V2_MIGRATION_KEY = 'MiaoMiaoPresetManager_AllConfigs_V2'; // 用于检测旧版合并数据的Key\nconst TOGGLE_BUTTON_NAME = '喵喵预设配置管理';\nconst UI_ID = 'preset-manager-ui';\nlet lastProcessedCharAvatar = null; // 用于跟踪上一个处理过的角色，防止重复触发\n// 小贴士列表\nconst TIPS = [\n    '如果你玩BL的话，来试试小n同人女预设吧！其他MoM系预设也可以试试哦！',\n    '当你的总token达到6w左右时，你就该总结隐藏了哦',\n    '你知道吗，聊天界面开关正则有一定可能丢失你的聊天记录',\n    '不要使用第三方/\"半公益站\"的api或云酒馆！首先你的数据会非常不安全，其次没有后台我们无法解答你的问题，最后贩子不仅收你钱还掺水！',\n];\nfunction generateUniqueId() {\n    return Date.now().toString(36) + Math.random().toString(36).substring(2);\n}\n// 生成标准的UUID v4格式，用作预设条目 identifier\nfunction generateUUID() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nfunction setLastProcessedCharAvatar(avatar) {\n    lastProcessedCharAvatar = avatar;\n}\n// 确保配置世界书存在\nasync function ensureConfigLorebookExists() {\n    try {\n        await TavernHelper.getWorldbook(CONFIG_LOREBOOK_NAME);\n    }\n    catch (error) {\n        console.log(`'${CONFIG_LOREBOOK_NAME}' not found. Creating it now.`);\n        await TavernHelper.createOrReplaceWorldbook(CONFIG_LOREBOOK_NAME, []);\n    }\n}\n// 初始化函数（将在加载时执行函数中调用）\nasync function initializePresetManager() {\n    await ensureConfigLorebookExists();\n    $(document).on('click', function (e) {\n        if (!$(e.target).is('button[name=\"more-actions\"]') && $(e.target).closest('.pm-submenu').length === 0) {\n            $('.pm-submenu').hide();\n        }\n    });\n    // 自动为所有预设创建识别条目（仅在新版用户首次使用时执行）\n    try {\n        const configs = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./配置操作功能 */ \"./src/喵喵预设配置管理/配置操作功能.ts\")).then(m => m.getStoredConfigs());\n        const hasOldConfigs = Object.values(configs).some((config) => !config.identifierId && config.presetName);\n        if (hasOldConfigs) {\n            console.log('检测到旧版配置，开始自动创建识别条目...');\n            const { autoCreateIdentifiersForAllPresets } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./配置操作功能 */ \"./src/喵喵预设配置管理/配置操作功能.ts\"));\n            await autoCreateIdentifiersForAllPresets();\n        }\n    }\n    catch (error) {\n        console.error('自动创建识别条目时出错:', error);\n    }\n}\n// 移除自动初始化，改为在加载时执行函数中调用\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMv5Za15Za16aKE6K6+6YWN572u566h55CGL+WIneWni+WMluWSjOmFjee9ri50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjtBQUNiLE1BQU0sb0JBQW9CLEdBQUcsMEJBQTBCLENBQUM7QUFDeEQsTUFBTSxnQkFBZ0IsR0FBRyxxQ0FBcUMsQ0FBQyxDQUFDLGlCQUFpQjtBQUNqRixNQUFNLGtCQUFrQixHQUFHLFVBQVUsQ0FBQztBQUN0QyxNQUFNLEtBQUssR0FBRyxtQkFBbUIsQ0FBQztBQUNsQyxJQUFJLHVCQUF1QixHQUFrQixJQUFJLENBQUMsQ0FBQyx1QkFBdUI7QUFFakYsUUFBUTtBQUNELE1BQU0sSUFBSSxHQUFHO0lBQ2xCLHNDQUFzQztJQUN0Qyw0QkFBNEI7SUFDNUIsNEJBQTRCO0lBQzVCLG9FQUFvRTtDQUNyRSxDQUFDO0FBRUssU0FBUyxnQkFBZ0I7SUFDOUIsT0FBTyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNFLENBQUM7QUFFRCxtQ0FBbUM7QUFDNUIsU0FBUyxZQUFZO0lBQzFCLE9BQU8sc0NBQXNDLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUM7UUFDeEUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ25DLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDO1FBQzFDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN4QixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFTSxTQUFTLDBCQUEwQixDQUFDLE1BQXFCO0lBQzlELHVCQUF1QixHQUFHLE1BQU0sQ0FBQztBQUNuQyxDQUFDO0FBRUQsWUFBWTtBQUNMLEtBQUssVUFBVSwwQkFBMEI7SUFDOUMsSUFBSSxDQUFDO1FBQ0gsTUFBTSxZQUFZLENBQUMsWUFBWSxDQUFDLG9CQUFvQixDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7UUFDZixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksb0JBQW9CLCtCQUErQixDQUFDLENBQUM7UUFDckUsTUFBTSxZQUFZLENBQUMsd0JBQXdCLENBQUMsb0JBQW9CLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDeEUsQ0FBQztBQUNILENBQUM7QUFFRCxzQkFBc0I7QUFDZixLQUFLLFVBQVUsdUJBQXVCO0lBQzNDLE1BQU0sMEJBQTBCLEVBQUUsQ0FBQztJQUVuQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUM7UUFDakMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLDZCQUE2QixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ3RHLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUMxQixDQUFDO0lBQ0gsQ0FBQyxDQUFDLENBQUM7SUFFSCwrQkFBK0I7SUFDL0IsSUFBSSxDQUFDO1FBQ0gsTUFBTSxPQUFPLEdBQUcsTUFBTSxnSUFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO1FBQ3pFLE1BQU0sYUFBYSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLElBQUksTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBRTlHLElBQUksYUFBYSxFQUFFLENBQUM7WUFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1lBQ3JDLE1BQU0sRUFBRSxrQ0FBa0MsRUFBRSxHQUFHLE1BQU0sZ0lBQWtCLENBQUM7WUFDeEUsTUFBTSxrQ0FBa0MsRUFBRSxDQUFDO1FBQzdDLENBQUM7SUFDSCxDQUFDO0lBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztRQUNmLE9BQU8sQ0FBQyxLQUFLLENBQUMsY0FBYyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7QUFDSCxDQUFDO0FBRUQsd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGF2ZXJuX2hlbHBlcl90ZW1wbGF0ZS8uL3NyYy/llrXllrXpooTorr7phY3nva7nrqHnkIYv5Yid5aeL5YyW5ZKM6YWN572uLnRzPyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyDlrprkuYnnlKjkuo7lrZjlgqjphY3nva7nmoTkuJbnlYzkuabnmoTlm7rlrprlkI3np7BcbmV4cG9ydCBjb25zdCBDT05GSUdfTE9SRUJPT0tfTkFNRSA9ICdQcmVzZXRDb25maWdNYW5hZ2VyX0RhdGEnO1xuZXhwb3J0IGNvbnN0IFYyX01JR1JBVElPTl9LRVkgPSAnTWlhb01pYW9QcmVzZXRNYW5hZ2VyX0FsbENvbmZpZ3NfVjInOyAvLyDnlKjkuo7mo4DmtYvml6fniYjlkIjlubbmlbDmja7nmoRLZXlcbmV4cG9ydCBjb25zdCBUT0dHTEVfQlVUVE9OX05BTUUgPSAn5Za15Za16aKE6K6+6YWN572u566h55CGJztcbmV4cG9ydCBjb25zdCBVSV9JRCA9ICdwcmVzZXQtbWFuYWdlci11aSc7XG5leHBvcnQgbGV0IGxhc3RQcm9jZXNzZWRDaGFyQXZhdGFyOiBzdHJpbmcgfCBudWxsID0gbnVsbDsgLy8g55So5LqO6Lef6Liq5LiK5LiA5Liq5aSE55CG6L+H55qE6KeS6Imy77yM6Ziy5q2i6YeN5aSN6Kem5Y+RXG5cbi8vIOWwj+i0tOWjq+WIl+ihqFxuZXhwb3J0IGNvbnN0IFRJUFMgPSBbXG4gICflpoLmnpzkvaDnjqlCTOeahOivne+8jOadpeivleivleWwj27lkIzkurrlpbPpooTorr7lkKfvvIHlhbbku5ZNb03ns7vpooTorr7kuZ/lj6/ku6Xor5Xor5Xlk6bvvIEnLFxuICAn5b2T5L2g55qE5oC7dG9rZW7ovr7liLA2d+W3puWPs+aXtu+8jOS9oOWwseivpeaAu+e7k+makOiXj+S6huWTpicsXG4gICfkvaDnn6XpgZPlkJfvvIzogYrlpKnnlYzpnaLlvIDlhbPmraPliJnmnInkuIDlrprlj6/og73kuKLlpLHkvaDnmoTogYrlpKnorrDlvZUnLFxuICAn5LiN6KaB5L2/55So56ys5LiJ5pa5L1wi5Y2K5YWs55uK56uZXCLnmoRhcGnmiJbkupHphZLppobvvIHpppblhYjkvaDnmoTmlbDmja7kvJrpnZ7luLjkuI3lronlhajvvIzlhbbmrKHmsqHmnInlkI7lj7DmiJHku6zml6Dms5Xop6PnrZTkvaDnmoTpl67popjvvIzmnIDlkI7otKnlrZDkuI3ku4XmlLbkvaDpkrHov5jmjrrmsLTvvIEnLFxuXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlVW5pcXVlSWQoKTogc3RyaW5nIHtcbiAgcmV0dXJuIERhdGUubm93KCkudG9TdHJpbmcoMzYpICsgTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDIpO1xufVxuXG4vLyDnlJ/miJDmoIflh4bnmoRVVUlEIHY05qC85byP77yM55So5L2c6aKE6K6+5p2h55uuIGlkZW50aWZpZXJcbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVVVSUQoKTogc3RyaW5nIHtcbiAgcmV0dXJuICd4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHgnLnJlcGxhY2UoL1t4eV0vZywgZnVuY3Rpb24gKGMpIHtcbiAgICBjb25zdCByID0gKE1hdGgucmFuZG9tKCkgKiAxNikgfCAwO1xuICAgIGNvbnN0IHYgPSBjID09PSAneCcgPyByIDogKHIgJiAweDMpIHwgMHg4O1xuICAgIHJldHVybiB2LnRvU3RyaW5nKDE2KTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRMYXN0UHJvY2Vzc2VkQ2hhckF2YXRhcihhdmF0YXI6IHN0cmluZyB8IG51bGwpOiB2b2lkIHtcbiAgbGFzdFByb2Nlc3NlZENoYXJBdmF0YXIgPSBhdmF0YXI7XG59XG5cbi8vIOehruS/nemFjee9ruS4lueVjOS5puWtmOWcqFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGVuc3VyZUNvbmZpZ0xvcmVib29rRXhpc3RzKCk6IFByb21pc2U8dm9pZD4ge1xuICB0cnkge1xuICAgIGF3YWl0IFRhdmVybkhlbHBlci5nZXRXb3JsZGJvb2soQ09ORklHX0xPUkVCT09LX05BTUUpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUubG9nKGAnJHtDT05GSUdfTE9SRUJPT0tfTkFNRX0nIG5vdCBmb3VuZC4gQ3JlYXRpbmcgaXQgbm93LmApO1xuICAgIGF3YWl0IFRhdmVybkhlbHBlci5jcmVhdGVPclJlcGxhY2VXb3JsZGJvb2soQ09ORklHX0xPUkVCT09LX05BTUUsIFtdKTtcbiAgfVxufVxuXG4vLyDliJ3lp4vljJblh73mlbDvvIjlsIblnKjliqDovb3ml7bmiafooYzlh73mlbDkuK3osIPnlKjvvIlcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpbml0aWFsaXplUHJlc2V0TWFuYWdlcigpOiBQcm9taXNlPHZvaWQ+IHtcbiAgYXdhaXQgZW5zdXJlQ29uZmlnTG9yZWJvb2tFeGlzdHMoKTtcblxuICAkKGRvY3VtZW50KS5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgIGlmICghJChlLnRhcmdldCkuaXMoJ2J1dHRvbltuYW1lPVwibW9yZS1hY3Rpb25zXCJdJykgJiYgJChlLnRhcmdldCkuY2xvc2VzdCgnLnBtLXN1Ym1lbnUnKS5sZW5ndGggPT09IDApIHtcbiAgICAgICQoJy5wbS1zdWJtZW51JykuaGlkZSgpO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8g6Ieq5Yqo5Li65omA5pyJ6aKE6K6+5Yib5bu66K+G5Yir5p2h55uu77yI5LuF5Zyo5paw54mI55So5oi36aaW5qyh5L2/55So5pe25omn6KGM77yJXG4gIHRyeSB7XG4gICAgY29uc3QgY29uZmlncyA9IGF3YWl0IGltcG9ydCgnLi/phY3nva7mk43kvZzlip/og70nKS50aGVuKG0gPT4gbS5nZXRTdG9yZWRDb25maWdzKCkpO1xuICAgIGNvbnN0IGhhc09sZENvbmZpZ3MgPSBPYmplY3QudmFsdWVzKGNvbmZpZ3MpLnNvbWUoKGNvbmZpZzogYW55KSA9PiAhY29uZmlnLmlkZW50aWZpZXJJZCAmJiBjb25maWcucHJlc2V0TmFtZSk7XG5cbiAgICBpZiAoaGFzT2xkQ29uZmlncykge1xuICAgICAgY29uc29sZS5sb2coJ+ajgOa1i+WIsOaXp+eJiOmFjee9ru+8jOW8gOWni+iHquWKqOWIm+W7uuivhuWIq+adoeebri4uLicpO1xuICAgICAgY29uc3QgeyBhdXRvQ3JlYXRlSWRlbnRpZmllcnNGb3JBbGxQcmVzZXRzIH0gPSBhd2FpdCBpbXBvcnQoJy4v6YWN572u5pON5L2c5Yqf6IO9Jyk7XG4gICAgICBhd2FpdCBhdXRvQ3JlYXRlSWRlbnRpZmllcnNGb3JBbGxQcmVzZXRzKCk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+iHquWKqOWIm+W7uuivhuWIq+adoeebruaXtuWHuumUmTonLCBlcnJvcik7XG4gIH1cbn1cblxuLy8g56e76Zmk6Ieq5Yqo5Yid5aeL5YyW77yM5pS55Li65Zyo5Yqg6L295pe25omn6KGM5Ye95pWw5Lit6LCD55SoXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/喵喵预设配置管理/初始化和配置.ts\n\n}");

/***/ }),

/***/ "./src/喵喵预设配置管理/加载和卸载时执行函数.ts":
/*!************************************!*\
  !*** ./src/喵喵预设配置管理/加载和卸载时执行函数.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./初始化和配置 */ \"./src/喵喵预设配置管理/初始化和配置.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./条目分组功能 */ \"./src/喵喵预设配置管理/条目分组功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./界面创建和管理 */ \"./src/喵喵预设配置管理/界面创建和管理.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./角色绑定功能 */ \"./src/喵喵预设配置管理/角色绑定功能.ts\");\n\n\n\n\n// 防止重复初始化的全局标记\nconst SCRIPT_ID = 'MIAO_MIAO_PRESET_MANAGER';\n// 等待必要的全局变量加载完成\nfunction checkReady() {\n    const win = window;\n    if (win.jQuery &&\n        win.TavernHelper &&\n        typeof TavernHelper.createOrReplaceWorldbook === 'function' &&\n        win.tavern_events &&\n        typeof getButtonEvent === 'function') {\n        initScript();\n    }\n    else {\n        setTimeout(checkReady, 100);\n    }\n}\nfunction init() {\n    // 检查是否已存在，如果存在则重新初始化（适配脚本重复加载）\n    const win = window;\n    if (win[SCRIPT_ID]) {\n        console.log('⚠️ 喵喵预设配置管理已存在，重新初始化以适配重复加载');\n        // 清理旧的事件绑定\n        cleanupOldBindings();\n    }\n    // 设置全局标记\n    win[SCRIPT_ID] = true;\n    win.miaoMiaoPresetManager = true;\n    console.log('🔥 jQuery ready 事件触发...');\n    checkReady();\n}\n// 清理旧的事件绑定\nfunction cleanupOldBindings() {\n    try {\n        // 解绑所有可能的事件\n        $('#preset-manager-close').off('click');\n        $('#preset-manager-help-btn').off('click');\n        $('#preset-manager-save-btn').off('click');\n        $('#preset-manager-import-btn').off('click');\n        $('#preset-manager-batch-export-btn').off('click');\n        $('#preset-manager-batch-delete-btn').off('click');\n        $('#preset-manager-grouping-btn').off('click');\n        $('#preset-manager-import-file').off('change');\n        // 解绑分组相关事件\n        $('.prompt-item').off('click');\n        $('.prompt-checkbox').off('change');\n        $('.dropdown-close-btn').off('click');\n        $(document).off('click', '.dropdown-close-btn');\n        console.log('✅ 旧的事件绑定已清理');\n    }\n    catch (error) {\n        console.warn('清理旧事件绑定时出错:', error);\n    }\n}\nasync function initScript() {\n    try {\n        console.log('🚀 喵喵预设配置管理开始初始化...');\n        // 初始化配置管理器\n        await (0,___WEBPACK_IMPORTED_MODULE_0__.initializePresetManager)();\n        console.log('✅ 配置管理器初始化完成');\n        // 创建UI界面\n        (0,___WEBPACK_IMPORTED_MODULE_2__.createUI)();\n        console.log('✅ UI界面创建完成');\n        // 注册按钮事件\n        const buttonEventId = getButtonEvent(___WEBPACK_IMPORTED_MODULE_0__.TOGGLE_BUTTON_NAME);\n        eventOn(buttonEventId, ___WEBPACK_IMPORTED_MODULE_2__.toggleUI);\n        console.log('✅ 按钮事件已注册:', buttonEventId);\n        // 注册角色切换事件\n        eventOn(tavern_events.CHAT_CHANGED, ___WEBPACK_IMPORTED_MODULE_3__.onChatChanged);\n        // 延迟加载非关键功能，避免阻塞UI\n        setTimeout(() => {\n            initNonCriticalFeatures();\n        }, 100);\n        console.log('✅ 喵喵预设配置管理已加载成功!');\n    }\n    catch (error) {\n        console.error('初始化喵喵预设配置管理失败:', error);\n        toastr.error('喵喵预设配置管理加载失败，请检查控制台');\n    }\n}\n// 初始化非关键功能，避免阻塞主UI\nfunction initNonCriticalFeatures() {\n    try {\n        // 恢复分组配置\n        eventOn(tavern_events.SETTINGS_LOADED, ___WEBPACK_IMPORTED_MODULE_1__.restoreGroupingFromConfig);\n        // 监听预设变化，如果存在该事件的话\n        const tavernEventsExt = tavern_events;\n        if (tavernEventsExt.PRESET_CHANGED) {\n            eventOn(tavernEventsExt.PRESET_CHANGED, ___WEBPACK_IMPORTED_MODULE_1__.restoreGroupingFromConfig);\n        }\n        // 监听预设界面变化，延迟恢复分组\n        if (tavernEventsExt.PROMPT_MANAGER_UPDATED) {\n            eventOn(tavernEventsExt.PROMPT_MANAGER_UPDATED, () => (0,___WEBPACK_IMPORTED_MODULE_1__.restoreGroupingDelayed)(150, 'dom_change'));\n        }\n        // 监听设置更新事件，这通常在条目开关后触发\n        eventOn(tavern_events.SETTINGS_UPDATED, () => {\n            console.log('检测到设置更新，准备恢复分组');\n            (0,___WEBPACK_IMPORTED_MODULE_1__.restoreGroupingDelayed)(200, 'settings');\n        });\n        // 优化DOM观察器 - 使用防抖机制\n        let restoreTimeout = null;\n        const observer = new MutationObserver(mutations => {\n            let shouldRestore = false;\n            mutations.forEach(mutation => {\n                if (mutation.type === 'childList') {\n                    const target = mutation.target;\n                    // 检查是否是预设管理器的条目变化\n                    if (target.classList?.contains('completion_prompt_manager') ||\n                        target.querySelector?.('.completion_prompt_manager_prompt') ||\n                        // 检查是否是预设条目本身的变化\n                        target.classList?.contains('completion_prompt_manager_prompt') ||\n                        // 检查是否是分组容器的变化\n                        target.classList?.contains('prompt-group-container')) {\n                        shouldRestore = true;\n                    }\n                }\n                // 检查属性变化（如开关状态变化）\n                if (mutation.type === 'attributes') {\n                    const target = mutation.target;\n                    if (target.classList?.contains('completion_prompt_manager_prompt') ||\n                        target.closest?.('.completion_prompt_manager_prompt')) {\n                        shouldRestore = true;\n                    }\n                }\n            });\n            if (shouldRestore) {\n                // 防抖处理，避免频繁触发\n                if (restoreTimeout) {\n                    clearTimeout(restoreTimeout);\n                }\n                restoreTimeout = window.setTimeout(() => {\n                    console.log('检测到预设条目变化，准备恢复分组');\n                    (0,___WEBPACK_IMPORTED_MODULE_1__.restoreGroupingDelayed)(150, 'toggle');\n                }, 50);\n            }\n        });\n        // 开始观察预设管理器区域的变化\n        const presetManagerContainer = $('.completion_prompt_manager').get(0);\n        if (presetManagerContainer) {\n            observer.observe(presetManagerContainer, {\n                childList: true,\n                subtree: true,\n                attributes: true,\n                attributeFilter: ['class', 'data-pm-identifier'],\n            });\n            console.log('✅ 预设管理器DOM观察器已启动');\n        }\n        // 延迟恢复分组，避免阻塞UI加载\n        setTimeout(() => {\n            console.log('🔄 脚本加载完成，开始强制恢复分组配置...');\n            (0,___WEBPACK_IMPORTED_MODULE_1__.forceRestoreGrouping)();\n        }, 2000);\n        console.log('✅ 非关键功能初始化完成');\n    }\n    catch (error) {\n        console.error('初始化非关键功能失败:', error);\n    }\n}\n// 在加载脚本时执行初始化\nconsole.log('🔥 喵喵预设配置管理模块开始加载...');\n$(() => init());\n// 在卸载脚本时执行清理\n$(window).on('pagehide', () => {\n    // 清理全局标记\n    const win = window;\n    delete win[SCRIPT_ID];\n    delete win.miaoMiaoPresetManager;\n    // 快速清理UI元素，避免阻塞\n    const uiElement = document.getElementById('preset-manager-ui');\n    const fileElement = document.getElementById('preset-manager-import-file');\n    if (uiElement) {\n        uiElement.remove();\n    }\n    if (fileElement) {\n        fileElement.remove();\n    }\n    // 异步清理分组效果，避免阻塞页面卸载\n    setTimeout(async () => {\n        try {\n            const { clearAllGrouping } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./条目分组功能 */ \"./src/喵喵预设配置管理/条目分组功能.ts\"));\n            clearAllGrouping();\n        }\n        catch (error) {\n            // 忽略清理错误\n        }\n    }, 0);\n    console.log('✅ 喵喵预设配置管理已卸载');\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/喵喵预设配置管理/加载和卸载时执行函数.ts\n\n}");

/***/ }),

/***/ "./src/喵喵预设配置管理/导入导出功能.ts":
/*!********************************!*\
  !*** ./src/喵喵预设配置管理/导入导出功能.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportConfig: () => (/* binding */ exportConfig),\n/* harmony export */   handleFileImport: () => (/* binding */ handleFileImport)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./初始化和配置 */ \"./src/喵喵预设配置管理/初始化和配置.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./条目分组功能 */ \"./src/喵喵预设配置管理/条目分组功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./正则绑定功能 */ \"./src/喵喵预设配置管理/正则绑定功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./配置存储和读取 */ \"./src/喵喵预设配置管理/配置存储和读取.ts\");\n\n\n\n\nasync function exportConfig(configId) {\n    try {\n        const configs = await (0,___WEBPACK_IMPORTED_MODULE_3__.getStoredConfigs)();\n        const configData = configs[configId];\n        if (!configData) {\n            toastr.error(`配置不存在，无法导出。`);\n            return;\n        }\n        const configName = configData.name;\n        let userRemark = '';\n        const addRemarkChoice = await triggerSlash(`/popup okButton=\"是\" cancelButton=\"否\" result=true \"是否要为此导出添加备注信息？\"`);\n        if (addRemarkChoice === '1') {\n            userRemark = await triggerSlash(`/input multiline=true placeholder=\"请输入备注，例如预设用途、来源等...\" \"添加备注\"`);\n        }\n        const exportBundle = {\n            type: 'MiaoMiaoPresetBundle',\n            version: 1,\n            remark: userRemark || '',\n            presetConfig: configData,\n            presetData: null,\n            regexData: null,\n            groupingConfig: null,\n        };\n        const configPresetName = configData.presetName;\n        if (configPresetName && TavernHelper.getPresetNames().includes(configPresetName)) {\n            const includePresetChoice = await triggerSlash(`/popup okButton=\"是\" cancelButton=\"否\" result=true \"此配置关联了预设 \\\\\"${configPresetName}\\\\\"。是否要将预设文件本身一起打包导出？\"`);\n            if (includePresetChoice === '1') {\n                const presetData = TavernHelper.getPreset(configPresetName);\n                if (presetData) {\n                    presetData.name = configPresetName;\n                    exportBundle.presetData = presetData;\n                    toastr.info(`已将预设 \"${configPresetName}\" 打包。`);\n                }\n                else {\n                    toastr.warning(`无法获取预设 \"${configPresetName}\" 的数据。`);\n                }\n            }\n        }\n        if (configData.regexStates && configData.regexStates.length > 0) {\n            const userChoice = await triggerSlash(`/popup okButton=\"是\" cancelButton=\"否\" result=true \"此配置绑定了正则。是否选择要一起导出的正则？\"`);\n            if (userChoice === '1') {\n                const boundRegexIds = new Set(configData.regexStates.map(r => r.id));\n                const allGlobalRegexes = await TavernHelper.getTavernRegexes({ scope: 'global' });\n                const boundRegexes = allGlobalRegexes.filter((r) => boundRegexIds.has(r.id));\n                const { showRegexExportSelectionPopup } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./辅助弹窗功能 */ \"./src/喵喵预设配置管理/辅助弹窗功能.ts\"));\n                const selectedRegexes = await showRegexExportSelectionPopup(boundRegexes);\n                if (selectedRegexes) {\n                    exportBundle.regexData = selectedRegexes;\n                    toastr.info(`已将 ${selectedRegexes.length} 条正则打包导出。`);\n                }\n                else {\n                    toastr.info('已取消导出正则。');\n                }\n            }\n        }\n        // 检查是否包含分组配置\n        const groupingPresetName = configData.presetName;\n        if (groupingPresetName) {\n            const groupingConfig = (0,___WEBPACK_IMPORTED_MODULE_1__.exportPresetGrouping)(groupingPresetName);\n            if (groupingConfig) {\n                const includeGroupingChoice = await triggerSlash(`/popup okButton=\"是\" cancelButton=\"否\" result=true \"预设 \\\\\"${groupingPresetName}\\\\\" 包含条目分组设置。是否要一起导出？\"`);\n                if (includeGroupingChoice === '1') {\n                    exportBundle.groupingConfig = groupingConfig;\n                    toastr.info('已将分组设置打包导出。');\n                }\n            }\n        }\n        const defaultFileName = `${configName}_bundle`;\n        let userFileName = await triggerSlash(`/input default=\"${defaultFileName}\" \"请输入导出的文件名（无需后缀）\"`);\n        if (!userFileName || userFileName.trim() === '') {\n            userFileName = defaultFileName;\n            toastr.info('文件名为空，已使用默认名称。');\n        }\n        userFileName = userFileName.trim().replace(/\\.json$/, '');\n        const jsonString = JSON.stringify(exportBundle, null, 2);\n        const blob = new Blob([jsonString], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `${userFileName}.json`;\n        document.body.appendChild(a);\n        a.click();\n        URL.revokeObjectURL(url);\n        a.remove();\n        toastr.success(`配置包 \"${configName}\" 已导出。`);\n    }\n    catch (error) {\n        console.error('导出配置失败:', error);\n        toastr.error('导出配置失败，请检查控制台获取更多信息。');\n    }\n}\nasync function handleFileImport(event) {\n    const file = event.target.files[0];\n    if (!file)\n        return;\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n        try {\n            const content = e.target?.result;\n            const parsedContent = JSON.parse(content);\n            if (parsedContent.entries && typeof parsedContent.entries === 'object') {\n                toastr.info('检测到世界书备份文件。');\n                const configsToImport = [];\n                for (const entry of Object.values(parsedContent.entries)) {\n                    if (entry.content) {\n                        try {\n                            const config = JSON.parse(entry.content);\n                            if (config.id && config.name && Array.isArray(config.states)) {\n                                configsToImport.push(config);\n                            }\n                        }\n                        catch (err) {\n                            // 忽略解析失败的条目\n                        }\n                    }\n                }\n                if (configsToImport.length > 0) {\n                    const { startBatchImportFlow } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./批量操作功能 */ \"./src/喵喵预设配置管理/批量操作功能.ts\"));\n                    await startBatchImportFlow(configsToImport);\n                }\n                else {\n                    toastr.warning('世界书文件中未找到有效的喵喵配置数据。');\n                }\n                return;\n            }\n            if (parsedContent.remark) {\n                const { showRemarkPopup } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./辅助弹窗功能 */ \"./src/喵喵预设配置管理/辅助弹窗功能.ts\"));\n                await showRemarkPopup(parsedContent.remark);\n            }\n            if (parsedContent.type === 'MiaoMiaoPresetMegaBundle') {\n                const { handleMegaBundleImport } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./批量操作功能 */ \"./src/喵喵预设配置管理/批量操作功能.ts\"));\n                await handleMegaBundleImport(parsedContent);\n                return;\n            }\n            let configToImport, presetToImport, regexToImport, groupingToImport;\n            if (parsedContent.type === 'MiaoMiaoPresetBundle') {\n                console.log('检测到整合包文件，版本:', parsedContent.version);\n                toastr.info('检测到整合包文件。');\n                configToImport = parsedContent.presetConfig;\n                presetToImport = parsedContent.presetData;\n                regexToImport = parsedContent.regexData;\n                groupingToImport = parsedContent.groupingConfig;\n                console.log('分组配置:', groupingToImport);\n            }\n            else {\n                configToImport = parsedContent;\n            }\n            if (!configToImport || typeof configToImport.presetName !== 'string' || !Array.isArray(configToImport.states)) {\n                toastr.error('导入失败：配置数据格式不正确。');\n                return;\n            }\n            if (presetToImport) {\n                const importPresetChoice = await triggerSlash(`/popup okButton=\"是\" cancelButton=\"否\" result=true \"此文件包含预设文件 \\\\\"${presetToImport.name}\\\\\"。是否导入/覆盖？\"`);\n                if (importPresetChoice === '1') {\n                    await TavernHelper.createOrReplacePreset(presetToImport.name, presetToImport);\n                    toastr.success(`预设文件 \"${presetToImport.name}\" 已导入。`);\n                }\n            }\n            if (regexToImport && regexToImport.length > 0) {\n                await (0,___WEBPACK_IMPORTED_MODULE_2__.importRegexLogic)(regexToImport);\n            }\n            // 处理分组配置导入\n            if (groupingToImport && Array.isArray(groupingToImport) && groupingToImport.length > 0) {\n                if (configToImport.presetName) {\n                    try {\n                        console.log('导入分组配置:', groupingToImport);\n                        (0,___WEBPACK_IMPORTED_MODULE_1__.importPresetGrouping)(configToImport.presetName, groupingToImport);\n                        toastr.success('已成功导入并应用分组设置到预设。');\n                    }\n                    catch (error) {\n                        console.error('导入分组配置失败:', error);\n                        toastr.error('导入分组配置失败：' + error.message);\n                    }\n                }\n                else {\n                    console.warn('配置中没有预设名称，无法导入分组配置');\n                }\n            }\n            const initialName = configToImport.name || file.name.replace(/_bundle\\.json$/i, '').replace(/\\.json$/i, '');\n            let configName = await triggerSlash(`/input default=\"${initialName}\" \"请输入导入配置的名称\"`);\n            configName = configName.trim();\n            if (!configName) {\n                toastr.info('导入已取消。');\n                return;\n            }\n            const configs = await (0,___WEBPACK_IMPORTED_MODULE_3__.getStoredConfigs)();\n            configToImport.name = configName;\n            configToImport.id = (0,___WEBPACK_IMPORTED_MODULE_0__.generateUniqueId)(); // Always generate new ID for single import\n            configs[configToImport.id] = configToImport;\n            await (0,___WEBPACK_IMPORTED_MODULE_3__.setStoredConfigs)(configs);\n            toastr.success(`配置 \"${configName}\" 已成功导入。`);\n            await (0,___WEBPACK_IMPORTED_MODULE_3__.renderConfigsList)();\n        }\n        catch (error) {\n            console.error('导入文件失败:', error);\n            toastr.error('导入文件失败，请检查控制台获取更多信息。');\n        }\n        finally {\n            $(event.target).val('');\n        }\n    };\n    reader.readAsText(file);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/喵喵预设配置管理/导入导出功能.ts\n\n}");

/***/ }),

/***/ "./src/喵喵预设配置管理/批量操作功能.ts":
/*!********************************!*\
  !*** ./src/喵喵预设配置管理/批量操作功能.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleMegaBundleImport: () => (/* binding */ handleMegaBundleImport),\n/* harmony export */   showBatchDeletePopup: () => (/* binding */ showBatchDeletePopup),\n/* harmony export */   showBatchExportPopup: () => (/* binding */ showBatchExportPopup),\n/* harmony export */   startBatchImportFlow: () => (/* binding */ startBatchImportFlow)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./初始化和配置 */ \"./src/喵喵预设配置管理/初始化和配置.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./正则绑定功能 */ \"./src/喵喵预设配置管理/正则绑定功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./辅助弹窗功能 */ \"./src/喵喵预设配置管理/辅助弹窗功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./配置存储和读取 */ \"./src/喵喵预设配置管理/配置存储和读取.ts\");\n\n\n\n\nasync function showBatchExportPopup() {\n    const popupId = 'preset-manager-batch-export-popup';\n    $(`#${popupId}`).remove();\n    const configs = Object.values(await (0,___WEBPACK_IMPORTED_MODULE_3__.getStoredConfigs)());\n    if (configs.length === 0) {\n        toastr.info('没有可导出的配置。');\n        return;\n    }\n    const configsHtml = configs\n        .map(config => {\n        const safeName = $('<div/>').text(config.name).html();\n        return `\n            <div style=\"padding: 8px 5px; border-bottom: 1px solid #eee; display: flex; align-items: center;\">\n                <label style=\"cursor:pointer; display:flex; align-items:center; width: 100%;\">\n                    <input type=\"checkbox\" class=\"pm-batch-export-item\" value=\"${config.id}\" style=\"margin-right: 10px; transform: scale(1.2);\">\n                    <span>${safeName}</span>\n                </label>\n            </div>\n        `;\n    })\n        .join('');\n    const popupHtml = `\n        <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10001; display: flex; align-items: center; justify-content: center;\">\n            <div style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 450px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 80vh;\">\n                <h4 style=\"margin-top:0; color:#6a4226; text-align: center;\">选择要批量导出的配置</h4>\n                <div style=\"margin: 10px 0; display: flex; justify-content: space-around;\">\n                   <button id=\"batch-export-select-all\" style=\"padding: 6px 12px; background-color:#a5d6f9; border:none; border-radius:6px; cursor:pointer;\">全选</button>\n                   <button id=\"batch-export-deselect-all\" style=\"padding: 6px 12px; background-color:#e0e0e0; border:none; border-radius:6px; cursor:pointer;\">全不选</button>\n                </div>\n                <div style=\"flex: 1; min-height: 0; overflow-y: auto; margin-bottom: 20px; border-top: 1px solid #f0e2d0; border-bottom: 1px solid #f0e2d0; padding: 5px 10px;\">\n                    ${configsHtml}\n                </div>\n                <div style=\"text-align: right; display:flex; justify-content:flex-end; gap: 10px;\">\n                    <button id=\"batch-export-cancel\" style=\"padding: 8px 16px; background-color:#e0e0e0; border:none; border-radius:6px; cursor:pointer; color:#333;\">取消</button>\n                    <button id=\"batch-export-confirm\" style=\"padding: 8px 16px; background-color:#f4c78e; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#3a2c2c;\">确认导出</button>\n                </div>\n            </div>\n        </div>\n    `;\n    $('body').append(popupHtml);\n    const mobileStyles = `<style>\n        @media (max-width: 600px) { #${popupId} > div { margin-top: 5vh; } }\n    </style>`;\n    $(`#${popupId}`).append(mobileStyles);\n    $('#batch-export-select-all').on('click', () => $('.pm-batch-export-item').prop('checked', true));\n    $('#batch-export-deselect-all').on('click', () => $('.pm-batch-export-item').prop('checked', false));\n    $('#batch-export-cancel').on('click', () => $(`#${popupId}`).remove());\n    $('#batch-export-confirm').on('click', async () => {\n        const selectedIds = new Set();\n        $('.pm-batch-export-item:checked').each(function () {\n            selectedIds.add($(this).val());\n        });\n        const allConfigs = await (0,___WEBPACK_IMPORTED_MODULE_3__.getStoredConfigs)();\n        const selectedConfigs = Object.values(allConfigs).filter(c => selectedIds.has(c.id));\n        batchExportConfigs(selectedConfigs);\n        $(`#${popupId}`).remove();\n    });\n}\nasync function batchExportConfigs(selectedConfigs) {\n    if (selectedConfigs.length === 0) {\n        toastr.info('未选择任何配置。');\n        return;\n    }\n    try {\n        let userRemark = '';\n        const addRemarkChoice = await triggerSlash(`/popup okButton=\"是\" cancelButton=\"否\" result=true \"是否要为这个批量导出的整合包添加备注信息？\"`);\n        if (addRemarkChoice === '1') {\n            userRemark = await triggerSlash(`/input multiline=true placeholder=\"请输入备注，例如这批配置的共同特点...\" \"为整合包添加备注\"`);\n        }\n        const megaBundle = {\n            type: 'MiaoMiaoPresetMegaBundle',\n            version: 1,\n            remark: userRemark || '',\n            presetConfigs: {},\n            presets: {},\n            regexData: [],\n        };\n        const uniquePresetNames = new Set();\n        for (const configData of selectedConfigs) {\n            megaBundle.presetConfigs[configData.id] = configData;\n            if (configData.presetName) {\n                uniquePresetNames.add(configData.presetName);\n            }\n        }\n        if (uniquePresetNames.size > 0) {\n            const presetList = Array.from(uniquePresetNames).join(', ');\n            const includePresetsChoice = await triggerSlash(`/popup okButton=\"是\" cancelButton=\"否\" result=true \"您选择的配置关联了以下预设：${presetList}。是否要将这些预设文件一同打包导出？\"`);\n            if (includePresetsChoice === '1') {\n                let includedCount = 0;\n                for (const presetName of uniquePresetNames) {\n                    if (TavernHelper.getPresetNames().includes(presetName)) {\n                        const presetData = TavernHelper.getPreset(presetName);\n                        if (presetData) {\n                            megaBundle.presets[presetName] = presetData;\n                            includedCount++;\n                        }\n                    }\n                }\n                toastr.info(`已将 ${includedCount} 个预设文件打包。`);\n            }\n            else {\n                toastr.info('跳过预设文件导出。');\n            }\n        }\n        const includeRegexChoice = await triggerSlash(`/popup okButton=\"是\" cancelButton=\"否\" result=true \"是否需要选择一些全局正则脚本一同打包导出？\"`);\n        if (includeRegexChoice === '1') {\n            const allGlobalRegexes = await TavernHelper.getTavernRegexes({ scope: 'global' });\n            if (allGlobalRegexes.length === 0) {\n                toastr.info('没有可供导出的全局正则脚本。');\n            }\n            else {\n                const selectedRegexes = await (0,___WEBPACK_IMPORTED_MODULE_2__.showRegexExportSelectionPopup)(allGlobalRegexes);\n                if (selectedRegexes) {\n                    megaBundle.regexData = selectedRegexes;\n                    toastr.info(`已将 ${selectedRegexes.length} 条正则打包。`);\n                }\n                else {\n                    toastr.info('已取消选择正则，将不导出任何正则脚本。');\n                }\n            }\n        }\n        else {\n            toastr.info('跳过正则导出。');\n        }\n        const defaultFileName = 'MiaoMiao_Batch_Export';\n        let userFileName = await triggerSlash(`/input default=\"${defaultFileName}\" \"请输入批量导出的文件名（无需后缀）\"`);\n        if (!userFileName || userFileName.trim() === '') {\n            userFileName = defaultFileName;\n            toastr.info('文件名为空，已使用默认名称。');\n        }\n        userFileName = userFileName.trim().replace(/\\.json$/, '');\n        const jsonString = JSON.stringify(megaBundle, null, 2);\n        const blob = new Blob([jsonString], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `${userFileName}.json`;\n        document.body.appendChild(a);\n        a.click();\n        URL.revokeObjectURL(url);\n        a.remove();\n        toastr.success(`已成功导出 ${selectedConfigs.length} 个配置的整合包。`);\n    }\n    catch (error) {\n        console.error('批量导出失败:', error);\n        toastr.error('批量导出失败，请检查控制台。');\n    }\n}\nasync function startBatchImportFlow(configsToImport) {\n    const userChoices = await (0,___WEBPACK_IMPORTED_MODULE_2__.showBatchImportConfigSelectionPopup)(configsToImport);\n    if (!userChoices) {\n        toastr.info('配置导入已取消。');\n        return;\n    }\n    const importList = userChoices.filter((choice) => choice.import);\n    if (importList.length === 0) {\n        toastr.info('未选择要导入的配置。');\n        return;\n    }\n    const storedConfigs = await (0,___WEBPACK_IMPORTED_MODULE_3__.getStoredConfigs)();\n    importList.forEach((choice) => {\n        const config = configsToImport.find(c => c.id === choice.originalId);\n        if (config) {\n            const newConfig = { ...config }; // Create a copy\n            newConfig.name = choice.newName;\n            newConfig.id = (0,___WEBPACK_IMPORTED_MODULE_0__.generateUniqueId)(); // Assign a new unique ID on import\n            storedConfigs[newConfig.id] = newConfig;\n        }\n    });\n    await (0,___WEBPACK_IMPORTED_MODULE_3__.setStoredConfigs)(storedConfigs);\n    toastr.success(`成功导入 ${importList.length} 个配置。`);\n    await (0,___WEBPACK_IMPORTED_MODULE_3__.renderConfigsList)();\n}\nasync function handleMegaBundleImport(megaBundle) {\n    // 1. 导入预设\n    const presetsToImport = megaBundle.presets;\n    if (presetsToImport && Object.keys(presetsToImport).length > 0) {\n        const presetNames = Object.keys(presetsToImport).join(', ');\n        const importPresetChoice = await triggerSlash(`/popup okButton=\"是\" cancelButton=\"否\" result=true \"此文件包含预设: ${presetNames}。是否全部导入/覆盖？\"`);\n        if (importPresetChoice === '1') {\n            for (const presetName in presetsToImport) {\n                await TavernHelper.createOrReplacePreset(presetName, presetsToImport[presetName]);\n            }\n            toastr.success(`已导入 ${Object.keys(presetsToImport).length} 个预设。`);\n        }\n    }\n    // 2. 导入正则\n    const regexToImport = megaBundle.regexData;\n    if (regexToImport && regexToImport.length > 0) {\n        const importRegexChoice = await triggerSlash(`/popup okButton=\"是\" cancelButton=\"否\" result=true \"此文件包含 ${regexToImport.length} 条正则脚本。是否导入？\"`);\n        if (importRegexChoice === '1') {\n            await (0,___WEBPACK_IMPORTED_MODULE_1__.importRegexLogic)(regexToImport);\n        }\n    }\n    // 3. 导入配置\n    const configsToImport = Object.values(megaBundle.presetConfigs);\n    await startBatchImportFlow(configsToImport);\n}\nasync function showBatchDeletePopup() {\n    const popupId = 'preset-manager-batch-delete-popup';\n    $(`#${popupId}`).remove();\n    const configs = Object.values(await (0,___WEBPACK_IMPORTED_MODULE_3__.getStoredConfigs)());\n    if (configs.length === 0) {\n        toastr.info('没有可删除的配置。');\n        return;\n    }\n    const configsHtml = configs\n        .map(config => {\n        const safeName = $('<div/>').text(config.name).html();\n        return `\n            <div style=\"padding: 8px 5px; border-bottom: 1px solid #eee; display: flex; align-items: center;\">\n                <label style=\"cursor:pointer; display:flex; align-items:center; width: 100%;\">\n                    <input type=\"checkbox\" class=\"pm-batch-delete-item\" value=\"${config.id}\" style=\"margin-right: 10px; transform: scale(1.2);\">\n                    <span title=\"${safeName}\">${safeName}</span>\n                </label>\n            </div>\n        `;\n    })\n        .join('');\n    const popupHtml = `\n        <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10001; display: flex; align-items: center; justify-content: center;\">\n            <div style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 450px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 80vh;\">\n                <h4 style=\"margin-top:0; color:#c62828; text-align: center;\">选择要批量删除的配置</h4>\n                <div style=\"margin: 10px 0; display: flex; justify-content: space-around;\">\n                   <button id=\"batch-delete-select-all\" style=\"padding: 6px 12px; background-color:#a5d6f9; border:none; border-radius:6px; cursor:pointer;\">全选</button>\n                   <button id=\"batch-delete-deselect-all\" style=\"padding: 6px 12px; background-color:#e0e0e0; border:none; border-radius:6px; cursor:pointer;\">全不选</button>\n                </div>\n                <div style=\"flex: 1; min-height: 0; overflow-y: auto; margin-bottom: 20px; border-top: 1px solid #f0e2d0; border-bottom: 1px solid #f0e2d0; padding: 5px 10px;\">\n                    ${configsHtml}\n                </div>\n                <div style=\"text-align: right; display:flex; justify-content:flex-end; gap: 10px;\">\n                    <button id=\"batch-delete-cancel\" style=\"padding: 8px 16px; background-color:#e0e0e0; border:none; border-radius:6px; cursor:pointer; color:#333;\">取消</button>\n                    <button id=\"batch-delete-confirm\" style=\"padding: 8px 16px; background-color:#f44336; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#fff;\">确认删除</button>\n                </div>\n            </div>\n        </div>\n    `;\n    $('body').append(popupHtml);\n    const mobileStyles = `<style>@media (max-width: 600px) { #${popupId} { align-items: flex-start !important; } #${popupId} > div { margin-top: 200px; } }</style>`;\n    $(`#${popupId}`).append(mobileStyles);\n    $('#batch-delete-select-all').on('click', () => $('.pm-batch-delete-item').prop('checked', true));\n    $('#batch-delete-deselect-all').on('click', () => $('.pm-batch-delete-item').prop('checked', false));\n    $('#batch-delete-cancel').on('click', () => $(`#${popupId}`).remove());\n    $('#batch-delete-confirm').on('click', () => {\n        const selectedIds = [];\n        $('.pm-batch-delete-item:checked').each(function () {\n            selectedIds.push($(this).val());\n        });\n        batchDeleteConfigs(selectedIds);\n        $(`#${popupId}`).remove();\n    });\n}\nasync function batchDeleteConfigs(configIds) {\n    if (configIds.length === 0) {\n        toastr.info('未选择任何要删除的配置。');\n        return;\n    }\n    const confirm = await triggerSlash(`/popup okButton=\"确认删除\" cancelButton=\"取消\" result=true \"警告：您确定要删除选中的 ${configIds.length} 个配置吗？此操作无法撤销。\"`);\n    if (confirm !== '1') {\n        toastr.info('批量删除操作已取消。');\n        return;\n    }\n    try {\n        const storedConfigs = await (0,___WEBPACK_IMPORTED_MODULE_3__.getStoredConfigs)();\n        const idsToDelete = new Set(configIds);\n        Object.keys(storedConfigs).forEach(id => {\n            if (idsToDelete.has(id))\n                delete storedConfigs[id];\n        });\n        await (0,___WEBPACK_IMPORTED_MODULE_3__.setStoredConfigs)(storedConfigs);\n        toastr.success(`已成功删除 ${configIds.length} 个配置。`);\n        await (0,___WEBPACK_IMPORTED_MODULE_3__.renderConfigsList)();\n    }\n    catch (error) {\n        console.error('批量删除失败:', error);\n        toastr.error('批量删除失败，请检查控制台。');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/喵喵预设配置管理/批量操作功能.ts\n\n}");

/***/ }),

/***/ "./src/喵喵预设配置管理/条目分组功能.ts":
/*!********************************!*\
  !*** ./src/喵喵预设配置管理/条目分组功能.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearAllGrouping: () => (/* binding */ clearAllGrouping),\n/* harmony export */   clearPresetGrouping: () => (/* binding */ clearPresetGrouping),\n/* harmony export */   exportPresetGrouping: () => (/* binding */ exportPresetGrouping),\n/* harmony export */   forceRestoreGrouping: () => (/* binding */ forceRestoreGrouping),\n/* harmony export */   getAllPresetGroupings: () => (/* binding */ getAllPresetGroupings),\n/* harmony export */   getCurrentPresetPrompts: () => (/* binding */ getCurrentPresetPrompts),\n/* harmony export */   importPresetGrouping: () => (/* binding */ importPresetGrouping),\n/* harmony export */   restoreGroupingDelayed: () => (/* binding */ restoreGroupingDelayed),\n/* harmony export */   restoreGroupingFromConfig: () => (/* binding */ restoreGroupingFromConfig),\n/* harmony export */   restoreGroupingImmediate: () => (/* binding */ restoreGroupingImmediate),\n/* harmony export */   showPromptGroupingUI: () => (/* binding */ showPromptGroupingUI),\n/* harmony export */   triggerGroupingRestore: () => (/* binding */ triggerGroupingRestore)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./初始化和配置 */ \"./src/喵喵预设配置管理/初始化和配置.ts\");\n// 防重复加载检查\nif (window.miaomiaoPromptGroupingLoaded) {\n    console.log('喵喵预设配置管理 - 条目分组功能已加载，跳过重复加载');\n    // 直接返回，不执行后续代码\n    throw new Error('Script already loaded');\n}\nwindow.miaomiaoPromptGroupingLoaded = true;\nconsole.log('喵喵预设配置管理 - 条目分组功能首次加载');\n\n// 分组数据存储键名（基于预设名称）\nfunction getGroupingStorageKey(presetName) {\n    return `miaomiao_preset_groups_${presetName}`;\n}\n// 获取预设的分组配置\nfunction getPresetGrouping(presetName) {\n    try {\n        const stored = localStorage.getItem(getGroupingStorageKey(presetName));\n        return stored ? JSON.parse(stored) : [];\n    }\n    catch (error) {\n        console.error('获取分组配置失败:', error);\n        return [];\n    }\n}\n// 保存预设的分组配置\nfunction savePresetGrouping(presetName, groups) {\n    try {\n        localStorage.setItem(getGroupingStorageKey(presetName), JSON.stringify(groups));\n    }\n    catch (error) {\n        console.error('保存分组配置失败:', error);\n    }\n}\n// 缓存DOM查询结果\nlet cachedPromptElements = null;\nlet lastPromptQueryTime = 0;\nconst PROMPT_CACHE_DURATION = 3000; // 3秒缓存\n// 触发一次预设保存，避免条目更改丢失\nfunction triggerPresetSave() {\n    try {\n        const $btn = $('#update_oai_preset');\n        if ($btn.length) {\n            $btn.trigger('click');\n            console.log('已触发预设保存');\n        }\n        else {\n            console.warn('未找到预设保存按钮 #update_oai_preset');\n        }\n    }\n    catch (err) {\n        console.error('触发预设保存时出错:', err);\n    }\n}\n// 获取当前预设的所有条目\nfunction getCurrentPresetPrompts() {\n    const prompts = [];\n    // 检查缓存是否有效\n    const now = Date.now();\n    if (!cachedPromptElements || now - lastPromptQueryTime > PROMPT_CACHE_DURATION) {\n        cachedPromptElements = $('.completion_prompt_manager_prompt');\n        lastPromptQueryTime = now;\n    }\n    const promptElements = cachedPromptElements;\n    promptElements.each(function () {\n        const element = $(this);\n        const id = element.data('pm-identifier') || element.find('[data-pm-identifier]').data('pm-identifier');\n        if (!id)\n            return; // 早期跳出，避免不必要的DOM查询\n        const nameElement = element.find('.completion_prompt_manager_prompt_name');\n        const name = nameElement.find('a').text().trim() || nameElement.text().trim();\n        if (!name)\n            return; // 早期跳出\n        const isEnabled = element.find('.prompt-manager-toggle-action').hasClass('fa-toggle-on');\n        prompts.push({\n            id: id,\n            name: name,\n            element: element,\n            enabled: isEnabled,\n        });\n    });\n    return prompts;\n}\n// 全局标记，防止重复绑定事件\nlet groupingEventsBound = false;\n// 显示条目分组界面\nasync function showPromptGroupingUI() {\n    const popupId = 'preset-manager-grouping-popup';\n    $(`#${popupId}`).remove();\n    const prompts = getCurrentPresetPrompts();\n    if (prompts.length === 0) {\n        toastr.warning('当前预设没有可分组的条目。');\n        return;\n    }\n    // 获取当前预设的分组信息\n    const currentPresetName = TavernHelper.getLoadedPresetName();\n    const existingGroups = getPresetGrouping(currentPresetName);\n    // 递归查找条目所在的分组路径\n    function findPromptGroupPath(promptId, groups, parentPath = '') {\n        for (const group of groups) {\n            // 检查是否在直接条目中\n            if (group.promptIds.includes(promptId)) {\n                return parentPath ? `${parentPath}/${group.name}` : group.name;\n            }\n            // 递归检查子分组\n            if (group.subGroups.length > 0) {\n                const subPath = findPromptGroupPath(promptId, group.subGroups, parentPath ? `${parentPath}/${group.name}` : group.name);\n                if (subPath) {\n                    return subPath;\n                }\n            }\n        }\n        return null;\n    }\n    const promptsHtml = prompts\n        .map((prompt, index) => {\n        const groupPath = findPromptGroupPath(prompt.id, existingGroups);\n        const isInGroup = groupPath !== null;\n        return `\n      <div class=\"prompt-item\" data-prompt-id=\"${prompt.id}\" data-index=\"${index}\" \n           style=\"display: flex; align-items: flex-start; padding: 10px; border: 1px solid #e0e0e0; margin: 3px 0; border-radius: 6px; cursor: pointer; background-color: ${isInGroup ? '#e8f5e8' : '#fff'}; min-height: 44px;\">\n        <input type=\"checkbox\" class=\"prompt-checkbox\" style=\"margin-right: 12px; transform: scale(1.3); flex-shrink: 0; margin-top: 2px;\">\n        <div class=\"prompt-text\" style=\"flex: 1; min-width: 0;\">\n          <div style=\"font-weight: ${prompt.enabled ? 'bold' : 'normal'}; color: ${prompt.enabled ? '#000' : '#666'}; font-size: 14px; line-height: 1.4; word-wrap: break-word; overflow-wrap: break-word;\">\n          ${$('<div/>').text(prompt.name).html()}\n          </div>\n          ${isInGroup ? `<div style=\"color: #666; font-size: 12px; margin-top: 4px; word-wrap: break-word; overflow-wrap: break-word;\">📁 ${groupPath}</div>` : ''}\n        </div>\n        ${isInGroup ? `<span class=\"group-tag\" style=\"background-color: #4CAF50; color: white; padding: 2px 8px; border-radius: 12px; font-size: 11px; margin-left: 8px; flex-shrink: 0; align-self: flex-start; margin-top: 2px;\">已分组</span>` : ''}\n      </div>\n    `;\n    })\n        .join('');\n    const popupHtml = `\n    <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10001; display: flex; align-items: center; justify-content: center;\">\n      <div style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 700px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 85vh; position: relative;\">\n        <button id=\"grouping-close\" style=\"position: absolute; top: 15px; right: 15px; background: none; border: none; color: #9a6b4f; font-size: 24px; cursor: pointer; z-index: 10003; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; border-radius: 50%; transition: background-color 0.2s;\">&times;</button>\n        <h4 style=\"margin-top:0; color:#6a4226; text-align: center; border-bottom: 2px solid #f0d8b6; padding-bottom: 10px; padding-right: 40px;\">预设编辑器</h4>\n        \n        <!-- 操作区域 - 并排布局 -->\n        <div class=\"操作区域\" style=\"margin: 15px 0; display: flex; gap: 12px; flex-wrap: wrap;\">\n          <!-- 分组管理区域 -->\n          <div style=\"flex: 1; min-width: 280px; padding: 12px; background-color: #f8f9fa; border-radius: 8px; border-left: 4px solid #4CAF50;\">\n            <div style=\"font-size: 14px; font-weight: bold; color: #2e7d32; margin-bottom: 8px;\">📁 分组管理</div>\n            <input type=\"text\" id=\"group-name-input\" placeholder=\"输入分组名称...\" style=\"width: 100%; padding: 8px 12px; border: 1px solid #d4b58b; border-radius: 6px; background: #fff; color: #333; font-size: 14px; margin-bottom: 10px; box-sizing: border-box;\">\n            <div style=\"position: relative; display: inline-block; width: 100%;\">\n              <button id=\"group-management-btn\" style=\"width: 100%; padding: 10px 16px; background-color:#4CAF50; border:none; border-radius:6px; color:#fff; cursor:pointer; font-weight:bold; font-size: 14px; display: flex; align-items: center; justify-content: space-between;\">\n                <span>分组操作</span>\n                <span style=\"font-size: 12px;\">▼</span>\n              </button>\n              <div id=\"group-management-menu\" style=\"display: none; position: absolute; top: 100%; left: 0; right: 0; background-color: #fff; border: 1px solid #d4b58b; border-radius: 6px; box-shadow: 0 4px 12px rgba(0,0,0,0.15); z-index: 10002; margin-top: 2px;\">\n                <button id=\"create-group-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#333; cursor:pointer; font-size: 13px; text-align: left; border-bottom: 1px solid #f0f0f0;\">创建分组</button>\n                <button id=\"add-to-group-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#9C27B0; cursor:pointer; font-size: 13px; text-align: left; border-bottom: 1px solid #f0f0f0;\">加入分组</button>\n                <button id=\"remove-from-group-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#FF5722; cursor:pointer; font-size: 13px; text-align: left; border-bottom: 1px solid #f0f0f0;\">移出分组</button>\n                <button id=\"dissolve-group-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#ff9800; cursor:pointer; font-size: 13px; text-align: left; border-bottom: 1px solid #f0f0f0;\">解散分组</button>\n                <button id=\"clear-all-groups-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#ff5722; cursor:pointer; font-size: 13px; text-align: left; border-bottom: 1px solid #f0f0f0;\">清除所有</button>\n                <div style=\"border-top: 1px solid #eee; margin: 5px 0;\"></div>\n                <button class=\"dropdown-close-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#888; cursor:pointer; font-size: 13px; text-align: center;\">关闭</button>\n              </div>\n          </div>\n        </div>\n\n          <!-- 条目操作区域 -->\n          <div style=\"flex: 1; min-width: 280px; padding: 12px; background-color: #f0f8ff; border-radius: 8px; border-left: 4px solid #2196F3;\">\n            <div style=\"font-size: 14px; font-weight: bold; color: #1976D2; margin-bottom: 8px;\">✏️ 条目操作</div>\n            <div style=\"display: flex; gap: 8px; flex-wrap: wrap;\">\n              <div style=\"position: relative; display: inline-block; flex: 1; min-width: 120px;\">\n                <button id=\"item-selection-btn\" style=\"width: 100%; padding: 10px 16px; background-color:#2196F3; border:none; border-radius:6px; color:#fff; cursor:pointer; font-weight:bold; font-size: 13px; display: flex; align-items: center; justify-content: space-between;\">\n                  <span>选择操作</span>\n                  <span style=\"font-size: 12px;\">▼</span>\n                </button>\n                <div id=\"item-selection-menu\" style=\"display: none; position: absolute; top: 100%; left: 0; right: 0; background-color: #fff; border: 1px solid #d4b58b; border-radius: 6px; box-shadow: 0 4px 12px rgba(0,0,0,0.15); z-index: 10002; margin-top: 2px;\">\n                  <button id=\"select-all-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#333; cursor:pointer; font-size: 13px; text-align: left; border-bottom: 1px solid #f0f0f0;\">全选</button>\n                  <button id=\"select-none-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#9E9E9E; cursor:pointer; font-size: 13px; text-align: left; border-bottom: 1px solid #f0f0f0;\">全不选</button>\n                  <button id=\"move-prompts-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#673AB7; cursor:pointer; font-size: 13px; text-align: left; border-bottom: 1px solid #f0f0f0;\">移动条目</button>\n                  <div style=\"border-top: 1px solid #eee; margin: 5px 0;\"></div>\n                  <button class=\"dropdown-close-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#888; cursor:pointer; font-size: 13px; text-align: center;\">关闭</button>\n                </div>\n              </div>\n              <div style=\"position: relative; display: inline-block; flex: 1; min-width: 120px;\">\n                <button id=\"item-edit-btn\" style=\"width: 100%; padding: 10px 16px; background-color:#4CAF50; border:none; border-radius:6px; color:#fff; cursor:pointer; font-weight:bold; font-size: 13px; display: flex; align-items: center; justify-content: space-between;\">\n                  <span>编辑操作</span>\n                  <span style=\"font-size: 12px;\">▼</span>\n                </button>\n                <div id=\"item-edit-menu\" style=\"display: none; position: absolute; top: 100%; left: 0; right: 0; background-color: #fff; border: 1px solid #d4b58b; border-radius: 6px; box-shadow: 0 4px 12px rgba(0,0,0,0.15); z-index: 10002; margin-top: 2px;\">\n                  <button id=\"add-prompt-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#4CAF50; cursor:pointer; font-size: 13px; text-align: left; border-bottom: 1px solid #f0f0f0;\">新增条目</button>\n                  <button id=\"edit-prompt-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#FF9800; cursor:pointer; font-size: 13px; text-align: left; border-bottom: 1px solid #f0f0f0;\">编辑条目</button>\n                  <button id=\"delete-prompts-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#F44336; cursor:pointer; font-size: 13px; text-align: left; border-bottom: 1px solid #f0f0f0;\">删除条目</button>\n                  <div style=\"border-top: 1px solid #eee; margin: 5px 0;\"></div>\n                  <button class=\"dropdown-close-btn\" style=\"width: 100%; padding: 10px 16px; border:none; background:none; color:#888; cursor:pointer; font-size: 13px; text-align: center;\">关闭</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div style=\"flex: 1; min-height: 300px; max-height: 400px; overflow-y: auto; border: 1px solid #f0e2d0; border-radius: 8px; padding: 16px; margin-bottom: 15px; background-color: #fafafa;\">\n          <div style=\"font-size: 13px; color: #666; margin-bottom: 12px; line-height: 1.4;\">💡 提示：选中条目后可以创建分组，支持多级分组。分组后的条目会在预设界面中折叠显示，便于管理</div>\n          <div id=\"prompts-container\">\n            ${promptsHtml}\n          </div>\n        </div>\n\n\n        <div style=\"display: flex; flex-wrap: wrap; justify-content: flex-start; align-items: flex-start; gap: 10px; flex-shrink: 0; margin-top: auto; padding: 8px 0; min-height: 30px;\">\n          <div id=\"existing-groups-info\" style=\"font-size: 12px; color: #666; flex: 1; min-width: 200px; word-wrap: break-word; overflow-wrap: break-word; line-height: 1.4; max-width: 100%; min-height: 20px; display: block;\"></div>\n        </div>\n      </div>\n    </div>\n  `;\n    $('body').append(popupHtml);\n    // 显示现有分组信息\n    console.log('现有分组:', existingGroups);\n    updateExistingGroupsInfo(existingGroups);\n    // 绑定事件（防止重复绑定）\n    if (!groupingEventsBound) {\n        bindGroupingEvents(prompts, existingGroups);\n        groupingEventsBound = true;\n    }\n    else {\n        console.log('分组事件已绑定，重新绑定以确保事件正确');\n        // 即使已绑定，也要重新绑定以确保事件正确（适配脚本重复加载）\n        bindGroupingEvents(prompts, existingGroups);\n    }\n    // 立即绑定关闭按钮事件，确保能正常工作\n    setTimeout(() => {\n        $('.dropdown-close-btn')\n            .off('click')\n            .on('click', function (e) {\n            e.stopPropagation();\n            e.preventDefault();\n            const menu = $(this).closest('[id$=\"-menu\"]');\n            if (menu.length > 0) {\n                menu.hide();\n                console.log('下拉菜单已关闭:', menu.attr('id'));\n            }\n            else {\n                console.warn('未找到对应的菜单元素');\n            }\n        });\n        console.log('关闭按钮事件已重新绑定');\n    }, 100);\n    // 移动端样式\n    const mobileStyles = `<style>\n    #${popupId} #grouping-close:hover {\n      background-color: rgba(154, 107, 79, 0.1) !important;\n    }\n    .dropdown-close-btn:hover {\n      background-color: rgba(153, 153, 153, 0.1) !important;\n    }\n    \n    /* 平板端适配 (768px - 1024px) */\n    @media (max-width: 1024px) {\n      #${popupId} > div {\n        width: 92% !important;\n        max-width: 650px !important;\n        max-height: 88vh !important;\n      }\n      #${popupId} .操作区域 {\n        gap: 10px !important;\n      }\n      #${popupId} .操作区域 > div {\n        min-width: 250px !important;\n      }\n    }\n    \n    /* 小屏幕适配 (600px - 768px) */\n    @media (max-width: 768px) {\n      #${popupId} { \n        align-items: flex-start !important; \n        padding: 8px !important;\n      } \n      #${popupId} > div { \n        width: 96% !important;\n        max-width: none !important;\n        margin-top: 1vh !important;\n        max-height: 96vh !important;\n        padding: 16px !important;\n      }\n      #${popupId} h4 {\n        font-size: 17px !important;\n        margin-bottom: 12px !important;\n        padding-right: 35px !important;\n      }\n      #${popupId} .操作区域 {\n        flex-direction: column !important;\n        gap: 8px !important;\n        margin: 12px 0 !important;\n      }\n      #${popupId} .操作区域 > div {\n        min-width: 100% !important;\n        flex: none !important;\n        padding: 10px !important;\n      }\n      #${popupId} #grouping-close {\n        top: 12px !important;\n        right: 12px !important;\n        font-size: 26px !important;\n        width: 32px !important;\n        height: 32px !important;\n      }\n    }\n    \n    /* 手机端适配 (480px - 600px) */\n    @media (max-width: 600px) {\n      #${popupId} {\n        padding: 5px !important;\n      }\n      #${popupId} > div {\n        width: 98% !important;\n        margin-top: 0.5vh !important;\n        max-height: 98vh !important;\n        padding: 14px !important;\n        border-radius: 12px !important;\n      }\n      #${popupId} h4 {\n        font-size: 16px !important;\n        padding-right: 30px !important;\n      }\n      #${popupId} .操作区域 {\n        margin: 10px 0 !important;\n        gap: 6px !important;\n      }\n      #${popupId} .操作区域 > div {\n        padding: 8px !important;\n        border-radius: 6px !important;\n      }\n      #${popupId} .操作区域 h5 {\n        font-size: 13px !important;\n        margin-bottom: 8px !important;\n      }\n      #${popupId} .操作区域 input {\n        font-size: 14px !important;\n        padding: 8px 10px !important;\n      }\n      #${popupId} .操作区域 button {\n        font-size: 13px !important;\n        padding: 8px 12px !important;\n      }\n      #${popupId} #grouping-close {\n        top: 8px !important;\n        right: 8px !important;\n        font-size: 24px !important;\n        width: 30px !important;\n        height: 30px !important;\n      }\n      #${popupId} #prompts-container {\n        min-height: 250px !important;\n        max-height: 350px !important;\n        padding: 12px !important;\n      }\n      #${popupId} .prompt-item {\n        padding: 8px 10px !important;\n        margin-bottom: 6px !important;\n        font-size: 13px !important;\n        word-wrap: break-word !important;\n        white-space: normal !important;\n        line-height: 1.4 !important;\n      }\n      #${popupId} .prompt-item input[type=\"checkbox\"] {\n        width: 16px !important;\n        height: 16px !important;\n        margin-right: 8px !important;\n        flex-shrink: 0 !important;\n      }\n      #${popupId} .prompt-item .prompt-text {\n        flex: 1 !important;\n        min-width: 0 !important;\n        word-wrap: break-word !important;\n        overflow-wrap: break-word !important;\n      }\n      #${popupId} [id$=\"-menu\"] {\n        position: fixed !important;\n        top: 20vh !important;\n        left: 50% !important;\n        transform: translateX(-50%) !important;\n        width: 85% !important;\n        max-width: 320px !important;\n        z-index: 10003 !important;\n        box-shadow: 0 8px 25px rgba(0,0,0,0.3) !important;\n        border-radius: 8px !important;\n        padding: 12px !important;\n        max-height: 60vh !important;\n        overflow-y: auto !important;\n      }\n      #${popupId} [id$=\"-menu\"] button {\n        padding: 10px 14px !important;\n        font-size: 13px !important;\n        min-height: 44px !important;\n        margin: 2px 0 !important;\n      }\n    }\n    \n    /* 小屏手机适配 (360px - 480px) */\n    @media (max-width: 480px) {\n      #${popupId} > div {\n        width: 99% !important;\n        margin-top: 0 !important;\n        max-height: 99vh !important;\n        padding: 12px !important;\n        border-radius: 10px !important;\n      }\n      #${popupId} h4 {\n        font-size: 15px !important;\n        padding-right: 28px !important;\n      }\n      #${popupId} .操作区域 {\n        margin: 8px 0 !important;\n        gap: 5px !important;\n      }\n      #${popupId} .操作区域 > div {\n        padding: 6px !important;\n        border-radius: 5px !important;\n      }\n      #${popupId} .操作区域 h5 {\n        font-size: 12px !important;\n        margin-bottom: 6px !important;\n      }\n      #${popupId} .操作区域 input {\n        font-size: 13px !important;\n        padding: 6px 8px !important;\n      }\n      #${popupId} .操作区域 button {\n        font-size: 12px !important;\n        padding: 6px 10px !important;\n      }\n      #${popupId} #grouping-close {\n        top: 6px !important;\n        right: 6px !important;\n        font-size: 22px !important;\n        width: 28px !important;\n        height: 28px !important;\n      }\n      #${popupId} #prompts-container {\n        min-height: 200px !important;\n        max-height: 300px !important;\n        padding: 10px !important;\n      }\n      #${popupId} .prompt-item {\n        padding: 6px 8px !important;\n        margin-bottom: 4px !important;\n        font-size: 12px !important;\n        word-wrap: break-word !important;\n        white-space: normal !important;\n        line-height: 1.3 !important;\n      }\n      #${popupId} .prompt-item input[type=\"checkbox\"] {\n        width: 14px !important;\n        height: 14px !important;\n        margin-right: 6px !important;\n        flex-shrink: 0 !important;\n      }\n      #${popupId} .prompt-item .prompt-text {\n        flex: 1 !important;\n        min-width: 0 !important;\n        word-wrap: break-word !important;\n        overflow-wrap: break-word !important;\n      }\n      #${popupId} #existing-groups-info {\n        font-size: 10px !important;\n        line-height: 1.2 !important;\n        word-wrap: break-word !important;\n        overflow-wrap: break-word !important;\n        max-width: 100% !important;\n        padding: 4px 0 !important;\n      }\n      #${popupId} [id$=\"-menu\"] {\n        position: fixed !important;\n        top: 15vh !important;\n        left: 50% !important;\n        transform: translateX(-50%) !important;\n        width: 90% !important;\n        max-width: 300px !important;\n        padding: 10px !important;\n        max-height: 70vh !important;\n        overflow-y: auto !important;\n      }\n      #${popupId} [id$=\"-menu\"] button {\n        padding: 8px 12px !important;\n        font-size: 12px !important;\n        min-height: 40px !important;\n      }\n    }\n    \n    /* 超小屏适配 (320px - 360px) */\n    @media (max-width: 360px) {\n      #${popupId} > div {\n        width: 100% !important;\n        margin: 0 !important;\n        max-height: 100vh !important;\n        padding: 10px !important;\n        border-radius: 8px !important;\n      }\n      #${popupId} h4 {\n        font-size: 14px !important;\n        padding-right: 25px !important;\n      }\n      #${popupId} .操作区域 {\n        margin: 6px 0 !important;\n        gap: 4px !important;\n      }\n      #${popupId} .操作区域 > div {\n        padding: 5px !important;\n        border-radius: 4px !important;\n      }\n      #${popupId} .操作区域 h5 {\n        font-size: 11px !important;\n        margin-bottom: 4px !important;\n      }\n      #${popupId} .操作区域 input {\n        font-size: 12px !important;\n        padding: 5px 6px !important;\n      }\n      #${popupId} .操作区域 button {\n        font-size: 11px !important;\n        padding: 5px 8px !important;\n      }\n      #${popupId} #grouping-close {\n        top: 5px !important;\n        right: 5px !important;\n        font-size: 20px !important;\n        width: 26px !important;\n        height: 26px !important;\n      }\n      #${popupId} #prompts-container {\n        min-height: 180px !important;\n        max-height: 280px !important;\n        padding: 8px !important;\n      }\n      #${popupId} .prompt-item {\n        padding: 5px 6px !important;\n        margin-bottom: 3px !important;\n        font-size: 11px !important;\n        word-wrap: break-word !important;\n        white-space: normal !important;\n        line-height: 1.2 !important;\n      }\n      #${popupId} .prompt-item input[type=\"checkbox\"] {\n        width: 12px !important;\n        height: 12px !important;\n        margin-right: 5px !important;\n        flex-shrink: 0 !important;\n      }\n      #${popupId} .prompt-item .prompt-text {\n        flex: 1 !important;\n        min-width: 0 !important;\n        word-wrap: break-word !important;\n        overflow-wrap: break-word !important;\n      }\n      #${popupId} #existing-groups-info {\n        font-size: 9px !important;\n        line-height: 1.1 !important;\n        word-wrap: break-word !important;\n        overflow-wrap: break-word !important;\n        max-width: 100% !important;\n        padding: 3px 0 !important;\n      }\n      #${popupId} [id$=\"-menu\"] {\n        position: fixed !important;\n        top: 10vh !important;\n        left: 50% !important;\n        transform: translateX(-50%) !important;\n        width: 95% !important;\n        max-width: 280px !important;\n        padding: 8px !important;\n        max-height: 80vh !important;\n        overflow-y: auto !important;\n      }\n      #${popupId} [id$=\"-menu\"] button {\n        padding: 6px 10px !important;\n        font-size: 11px !important;\n        min-height: 36px !important;\n      }\n    }\n  </style>`;\n    $(`#${popupId}`).append(mobileStyles);\n}\nfunction updateExistingGroupsInfo(groups) {\n    const infoElement = $('#existing-groups-info');\n    if (!infoElement.length) {\n        console.warn('分组信息元素未找到');\n        return;\n    }\n    if (groups.length === 0) {\n        infoElement.html('当前没有分组');\n    }\n    else {\n        const groupNames = getGroupNamesRecursively(groups);\n        const groupText = groupNames.length > 0 ? groupNames.join(', ') : '无';\n        infoElement.html(`现有分组: ${groupText}`);\n    }\n}\n// 递归获取所有分组名称（包括子分组）\nfunction getGroupNamesRecursively(groups) {\n    const names = [];\n    groups.forEach(group => {\n        names.push(group.name);\n        if (group.subGroups.length > 0) {\n            const subGroupNames = getGroupNamesRecursively(group.subGroups);\n            subGroupNames.forEach(subName => {\n                names.push(`${group.name}/${subName}`);\n            });\n        }\n    });\n    return names;\n}\nfunction bindGroupingEvents(_prompts, existingGroups) {\n    let selectedPrompts = [];\n    // 先解绑所有可能重复的事件，防止重复绑定\n    $('.prompt-item').off('click');\n    $('.prompt-checkbox').off('change');\n    $('#select-all-btn').off('click');\n    $('#select-none-btn').off('click');\n    $('#move-prompts-btn').off('click');\n    $('#add-prompt-btn').off('click');\n    $('#edit-prompt-btn').off('click');\n    $('#delete-prompts-btn').off('click');\n    $('#create-group-btn').off('click');\n    $('#remove-group-btn').off('click');\n    $('#dissolve-group-btn').off('click');\n    $('#clear-all-groups-btn').off('click');\n    $('#grouping-close').off('click');\n    // 新增的下拉菜单按钮\n    $('#group-management-btn').off('click');\n    $('#item-selection-btn').off('click');\n    $('#item-edit-btn').off('click');\n    $('#add-to-group-btn').off('click');\n    $('#remove-from-group-btn').off('click');\n    $('.dropdown-close-btn').off('click');\n    // 解绑文档级别的事件，防止重复绑定\n    $(document).off('click', '.dropdown-close-btn');\n    $(document).off('click', '[id$=\"-btn\"], [id$=\"-menu\"]');\n    // 条目选择\n    $('.prompt-item').on('click', function (e) {\n        if (e.target.type === 'checkbox')\n            return;\n        const checkbox = $(this).find('.prompt-checkbox');\n        checkbox.prop('checked', !checkbox.prop('checked'));\n        updateSelectedPrompts();\n    });\n    $('.prompt-checkbox').on('change', updateSelectedPrompts);\n    function updateSelectedPrompts() {\n        selectedPrompts = [];\n        $('.prompt-checkbox:checked').each(function () {\n            const promptId = $(this).closest('.prompt-item').data('prompt-id');\n            selectedPrompts.push(promptId);\n        });\n    }\n    // 全选/全不选\n    $('#select-all-btn').on('click', () => {\n        $('.prompt-checkbox').prop('checked', true);\n        updateSelectedPrompts();\n    });\n    $('#select-none-btn').on('click', () => {\n        $('.prompt-checkbox').prop('checked', false);\n        updateSelectedPrompts();\n    });\n    // 移动条目\n    $('#move-prompts-btn').on('click', async () => {\n        if (selectedPrompts.length === 0) {\n            toastr.error('请选择要移动的条目');\n            return;\n        }\n        // 显示目标位置选择弹窗\n        await showPositionSelectionPopup(_prompts, selectedPrompts, (targetPromptId, position) => {\n            movePromptsToPosition(selectedPrompts, targetPromptId, position);\n            // 清除选择状态\n            $('.prompt-checkbox').prop('checked', false);\n            selectedPrompts = [];\n            toastr.success('条目移动完成，将在关闭分组界面时应用到预设');\n        });\n    });\n    // 新增条目\n    $('#add-prompt-btn').on('click', async () => {\n        await showAddPromptPopup(() => {\n            // 重新加载分组界面以显示新条目\n            setTimeout(() => {\n                $('#preset-manager-grouping-popup').remove();\n                showPromptGroupingUI();\n            }, 100);\n        });\n    });\n    // 编辑条目\n    $('#edit-prompt-btn').on('click', async () => {\n        if (selectedPrompts.length !== 1) {\n            toastr.error('请选择一个条目进行编辑');\n            return;\n        }\n        const promptId = selectedPrompts[0];\n        const prompt = _prompts.find(p => p.id === promptId);\n        if (!prompt) {\n            toastr.error('未找到要编辑的条目');\n            return;\n        }\n        await showEditPromptPopup(prompt, () => {\n            // 重新加载分组界面以显示更新后的条目\n            setTimeout(() => {\n                $('#preset-manager-grouping-popup').remove();\n                showPromptGroupingUI();\n            }, 100);\n        });\n    });\n    // 删除条目\n    $('#delete-prompts-btn').on('click', async () => {\n        if (selectedPrompts.length === 0) {\n            toastr.error('请选择要删除的条目');\n            return;\n        }\n        const confirmChoice = await triggerSlash(`/popup okButton=\"确认删除\" cancelButton=\"取消\" result=true \"确定要删除选中的 ${selectedPrompts.length} 个条目吗？此操作不可撤销。\"`);\n        if (confirmChoice === '1') {\n            await deleteSelectedPrompts(selectedPrompts);\n            // 重新加载分组界面\n            setTimeout(() => {\n                $('#preset-manager-grouping-popup').remove();\n                showPromptGroupingUI();\n            }, 100);\n        }\n    });\n    // 加入分组\n    $('#add-to-group-btn').on('click', async () => {\n        if (selectedPrompts.length === 0) {\n            toastr.error('请选择要加入分组的条目');\n            return;\n        }\n        // 检查选中的条目是否已经在其他分组中\n        const alreadyGroupedPrompts = [];\n        selectedPrompts.forEach(promptId => {\n            const existingGroup = findPromptInGroups(existingGroups, promptId);\n            if (existingGroup) {\n                alreadyGroupedPrompts.push(promptId);\n            }\n        });\n        if (alreadyGroupedPrompts.length > 0) {\n            // 获取已分组条目的名称\n            const alreadyGroupedNames = alreadyGroupedPrompts.map(promptId => {\n                const promptItem = $(`.prompt-item[data-prompt-id=\"${promptId}\"]`);\n                return promptItem.find('.prompt-text div:first').text().trim();\n            });\n            toastr.error(`以下条目已在其他分组中，无法重复分组：${alreadyGroupedNames.slice(0, 3).join('、')}${alreadyGroupedNames.length > 3 ? '等' : ''}`);\n            return;\n        }\n        // 显示分组选择弹窗\n        await showGroupSelectionPopup(selectedPrompts, existingGroups);\n    });\n    // 移出分组\n    $('#remove-from-group-btn').on('click', async () => {\n        if (selectedPrompts.length === 0) {\n            toastr.error('请选择要移出分组的条目');\n            return;\n        }\n        // 检查选中的条目是否在分组中\n        const groupedPrompts = [];\n        selectedPrompts.forEach(promptId => {\n            const existingGroup = findPromptInGroups(existingGroups, promptId);\n            if (existingGroup) {\n                groupedPrompts.push(promptId);\n            }\n        });\n        if (groupedPrompts.length === 0) {\n            toastr.error('选中的条目都不在任何分组中');\n            return;\n        }\n        const confirmChoice = await triggerSlash(`/popup okButton=\"确认移出\" cancelButton=\"取消\" result=true \"确定要将选中的 ${groupedPrompts.length} 个条目移出分组吗？\"`);\n        if (confirmChoice === '1') {\n            await removePromptsFromGroups(groupedPrompts, existingGroups);\n            // 重新加载分组界面\n            setTimeout(() => {\n                $('#preset-manager-grouping-popup').remove();\n                showPromptGroupingUI();\n            }, 100);\n        }\n    });\n    // 创建分组\n    $('#create-group-btn').on('click', async () => {\n        const groupName = $('#group-name-input').val()?.toString().trim();\n        if (!groupName) {\n            toastr.error('请输入分组名称');\n            return;\n        }\n        if (selectedPrompts.length === 0) {\n            toastr.error('请选择要分组的条目');\n            return;\n        }\n        // 检测选中条目是否都属于同一个分组\n        const parentGroup = detectCommonParentGroup(selectedPrompts, existingGroups);\n        if (parentGroup) {\n            // 选中的条目都属于同一个分组，创建子分组\n            await createSubGroup(parentGroup, groupName, selectedPrompts, existingGroups);\n        }\n        else {\n            // 检查选中的条目是否已经在其他分组中\n            const alreadyGroupedPrompts = [];\n            selectedPrompts.forEach(promptId => {\n                const existingGroup = findPromptInGroups(existingGroups, promptId);\n                if (existingGroup) {\n                    alreadyGroupedPrompts.push(promptId);\n                }\n            });\n            if (alreadyGroupedPrompts.length > 0) {\n                // 获取已分组条目的名称\n                const alreadyGroupedNames = alreadyGroupedPrompts.map(promptId => {\n                    const promptItem = $(`.prompt-item[data-prompt-id=\"${promptId}\"]`);\n                    return promptItem.find('span:first').text().trim();\n                });\n                toastr.error(`以下条目已在其他分组中，无法重复分组：${alreadyGroupedNames.slice(0, 3).join('、')}${alreadyGroupedNames.length > 3 ? '等' : ''}`);\n                return;\n            }\n            // 检查是否有重名的顶级分组\n            if (existingGroups.some(g => g.name === groupName)) {\n                toastr.error('分组名称已存在');\n                return;\n            }\n            // 创建新的顶级分组\n            await createTopLevelGroup(groupName, selectedPrompts, existingGroups);\n        }\n        // 更新界面状态\n        updateExistingGroupsInfo(existingGroups);\n        $('#group-name-input').val('');\n        $('.prompt-checkbox').prop('checked', false);\n        selectedPrompts = [];\n        // 保存分组配置\n        const currentPresetName = TavernHelper.getLoadedPresetName();\n        const validGroups = existingGroups.filter(g => hasValidContent(g));\n        savePresetGrouping(currentPresetName, validGroups);\n    });\n    // 移除分组\n    $('#remove-group-btn').on('click', () => {\n        if (selectedPrompts.length === 0) {\n            toastr.error('请选择要移除分组的条目');\n            return;\n        }\n        // 递归从所有分组（包括子分组）中移除选中的条目\n        function removePromptsFromGroups(groups, promptIds) {\n            groups.forEach(group => {\n                // 从当前分组的直接条目中移除\n                group.promptIds = group.promptIds.filter(id => !promptIds.includes(id));\n                // 递归处理子分组\n                if (group.subGroups.length > 0) {\n                    removePromptsFromGroups(group.subGroups, promptIds);\n                }\n            });\n        }\n        // 从所有分组中移除选中的条目\n        removePromptsFromGroups(existingGroups, selectedPrompts);\n        // 递归移除空分组（包括子分组）\n        function removeEmptyGroups(groups) {\n            for (let i = groups.length - 1; i >= 0; i--) {\n                const group = groups[i];\n                // 递归处理子分组\n                if (group.subGroups.length > 0) {\n                    removeEmptyGroups(group.subGroups);\n                }\n                // 检查当前分组是否为空（没有直接条目且没有子分组）\n                if (group.promptIds.length === 0 && group.subGroups.length === 0) {\n                    groups.splice(i, 1);\n                }\n            }\n        }\n        removeEmptyGroups(existingGroups);\n        // 更新UI\n        selectedPrompts.forEach(promptId => {\n            const item = $(`.prompt-item[data-prompt-id=\"${promptId}\"]`);\n            item.css('background-color', '#fff');\n            item.find('.group-tag').remove();\n            // 清除分组路径显示\n            const promptText = item.find('.prompt-text');\n            if (promptText.length > 0) {\n                promptText.find('div:last-child').remove(); // 移除分组路径div\n            }\n        });\n        updateExistingGroupsInfo(existingGroups);\n        $('.prompt-checkbox').prop('checked', false);\n        selectedPrompts = [];\n        // 保存分组配置并立即应用\n        const currentPresetName = TavernHelper.getLoadedPresetName();\n        const validGroups = existingGroups.filter(g => hasValidContent(g));\n        savePresetGrouping(currentPresetName, validGroups);\n        // 立即应用分组到DOM\n        applyGroupingToDOM(validGroups);\n        // 延迟恢复以确保DOM更新完成\n        setTimeout(() => {\n            restoreGroupingImmediate();\n        }, 100);\n        toastr.success('已移除选中条目的分组');\n    });\n    // 解散分组\n    $('#dissolve-group-btn').on('click', async () => {\n        if (existingGroups.length === 0) {\n            toastr.info('当前没有分组可以解散');\n            return;\n        }\n        // 显示解散分组弹窗\n        await showDissolveGroupPopup(existingGroups);\n    });\n    // 清除所有分组\n    $('#clear-all-groups-btn').on('click', async () => {\n        if (existingGroups.length === 0) {\n            toastr.info('当前没有分组需要清除');\n            return;\n        }\n        const confirmChoice = await triggerSlash(`/popup okButton=\"确认清除\" cancelButton=\"取消\" result=true \"确定要清除当前预设的所有分组吗？此操作不可撤销。\"`);\n        if (confirmChoice === '1') {\n            // 清空分组数组\n            existingGroups.length = 0;\n            // 更新UI显示\n            $('.prompt-item').each(function () {\n                $(this).css('background-color', '#fff');\n                $(this).find('.group-tag').remove();\n                // 清除分组路径显示\n                const promptText = $(this).find('.prompt-text');\n                if (promptText.length > 0) {\n                    promptText.find('div:last-child').remove(); // 移除分组路径div\n                }\n            });\n            updateExistingGroupsInfo(existingGroups);\n            $('.prompt-checkbox').prop('checked', false);\n            selectedPrompts = [];\n            // 保存分组配置并立即应用\n            const currentPresetName = TavernHelper.getLoadedPresetName();\n            const validGroups = existingGroups.filter(g => g.promptIds.length > 0);\n            savePresetGrouping(currentPresetName, validGroups);\n            // 立即应用分组到DOM\n            applyGroupingToDOM(validGroups);\n            // 延迟恢复以确保DOM更新完成\n            setTimeout(() => {\n                restoreGroupingImmediate();\n            }, 100);\n            toastr.success('已清除所有分组');\n        }\n    });\n    // 关闭\n    $('#grouping-close').on('click', () => {\n        // 关闭前确保保存当前的分组状态\n        const currentPresetName = TavernHelper.getLoadedPresetName();\n        const validGroups = existingGroups.filter(g => hasValidContent(g));\n        savePresetGrouping(currentPresetName, validGroups);\n        // 确保分组应用到预设界面\n        applyGroupingToDOM(validGroups);\n        // 重置事件绑定标记\n        groupingEventsBound = false;\n        $('#preset-manager-grouping-popup').remove();\n        console.log('分组界面关闭，已保存并应用分组配置');\n    });\n    // 下拉菜单交互逻辑\n    $('#group-management-btn').on('click', function (e) {\n        e.stopPropagation();\n        const menu = $('#group-management-menu');\n        menu.toggle();\n        // 关闭其他菜单\n        $('#item-selection-menu, #item-edit-menu').hide();\n    });\n    $('#item-selection-btn').on('click', function (e) {\n        e.stopPropagation();\n        const menu = $('#item-selection-menu');\n        menu.toggle();\n        // 关闭其他菜单\n        $('#group-management-menu, #item-edit-menu').hide();\n    });\n    $('#item-edit-btn').on('click', function (e) {\n        e.stopPropagation();\n        const menu = $('#item-edit-menu');\n        menu.toggle();\n        // 关闭其他菜单\n        $('#group-management-menu, #item-selection-menu').hide();\n    });\n    // 关闭按钮事件 - 使用更具体的选择器避免重复绑定\n    $(document)\n        .off('click', '.dropdown-close-btn')\n        .on('click', '.dropdown-close-btn', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        const menu = $(this).closest('[id$=\"-menu\"]');\n        if (menu.length > 0) {\n            menu.hide();\n            console.log('下拉菜单已关闭:', menu.attr('id'));\n        }\n        else {\n            console.warn('未找到对应的菜单元素');\n        }\n    });\n    // 为每个具体的关闭按钮单独绑定事件，确保能正常工作\n    $('#group-management-menu .dropdown-close-btn')\n        .off('click')\n        .on('click', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        $('#group-management-menu').hide();\n        console.log('分组管理菜单已关闭');\n    });\n    $('#item-selection-menu .dropdown-close-btn')\n        .off('click')\n        .on('click', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        $('#item-selection-menu').hide();\n        console.log('条目选择菜单已关闭');\n    });\n    $('#item-edit-menu .dropdown-close-btn')\n        .off('click')\n        .on('click', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n        $('#item-edit-menu').hide();\n        console.log('条目编辑菜单已关闭');\n    });\n    // 点击其他地方关闭所有菜单\n    $(document).on('click', function (e) {\n        if (!$(e.target).closest('[id$=\"-btn\"], [id$=\"-menu\"]').length) {\n            $('#group-management-menu, #item-selection-menu, #item-edit-menu').hide();\n        }\n    });\n}\n// 应用分组到DOM\nfunction applyGroupingToDOM(groups) {\n    console.log('开始应用分组到DOM，分组数量:', groups.length);\n    // 检查是否有预设条目存在\n    const promptElements = $('.completion_prompt_manager_prompt');\n    if (promptElements.length === 0) {\n        console.warn('未找到预设条目，无法应用分组');\n        return;\n    }\n    console.log('找到预设条目数量:', promptElements.length);\n    // 先确保所有条目都从分组容器中移出，然后再移除分组容器\n    $('.prompt-group-container').each(function () {\n        const container = $(this);\n        const prompts = container.find('.completion_prompt_manager_prompt');\n        // 将条目移动到分组容器之前\n        container.before(prompts);\n    });\n    // 移除现有的分组容器\n    $('.prompt-group-container').remove();\n    // 递归应用分组\n    applyGroupsRecursively(groups, 0);\n}\n// 递归应用分组到DOM\nfunction applyGroupsRecursively(groups, level) {\n    groups.forEach(group => {\n        // 检查分组是否有内容（条目或子分组）\n        if (!hasValidContent(group))\n            return;\n        console.log('处理分组:', group.name, '层级:', level, '条目数量:', group.promptIds.length, '子分组数量:', group.subGroups.length);\n        // 获取分组中所有条目（包括子分组中的条目）\n        const allPromptIds = getAllPromptIdsFromGroup(group);\n        if (allPromptIds.length === 0) {\n            console.log('分组没有条目，跳过:', group.name);\n            return;\n        }\n        // 找到分组中的第一个条目作为插入点\n        let firstPromptElement = null;\n        for (const promptId of allPromptIds) {\n            const element = $(`.completion_prompt_manager_prompt[data-pm-identifier=\"${promptId}\"]`);\n            if (element.length > 0) {\n                firstPromptElement = element;\n                break;\n            }\n        }\n        if (!firstPromptElement || firstPromptElement.length === 0) {\n            console.log('未找到分组的任何条目:', group.name);\n            return;\n        }\n        console.log('找到第一个条目，开始创建分组容器');\n        // 统计分组内启用的条目数量（包括子分组）\n        const enabledCount = allPromptIds.filter(promptId => {\n            const promptElement = $(`.completion_prompt_manager_prompt[data-pm-identifier=\"${promptId}\"]`);\n            return promptElement.find('.prompt-manager-toggle-action').hasClass('fa-toggle-on');\n        }).length;\n        // 创建分组容器\n        const indentStyle = level > 0 ? `margin-left: ${level * 20}px;` : '';\n        const groupContainer = $(`\n      <div class=\"prompt-group-container\" data-group-id=\"${group.id}\" style=\"border: 1px solid rgba(128, 128, 128, 0.3); margin: 5px 0; background-color: rgba(0, 0, 0, 0.05); ${indentStyle} overflow: visible;\">\n        <div class=\"prompt-group-header\" style=\"padding: 6px 10px; background-color: rgba(0, 0, 0, 0.08); cursor: pointer; display: flex; align-items: center;\">\n          <span class=\"group-toggle-icon\" style=\"margin-right: 6px; font-size: 12px; color: inherit;\">${group.collapsed ? '▶' : '▼'}</span>\n          <span style=\"font-weight: bold; color: inherit;\">${$('<div/>').text(group.name).html()}</span>\n          <span style=\"margin-left: 8px; font-size: 12px; color: #666;\">(${enabledCount}/${allPromptIds.length})</span>\n        </div>\n        <div class=\"prompt-group-content\" style=\"padding: 3px; min-height: 0; overflow: visible; ${group.collapsed ? 'display: none;' : 'display: block;'}\"></div>\n      </div>\n    `);\n        // 将分组插入到第一个条目之前\n        firstPromptElement.before(groupContainer);\n        console.log('分组容器已插入到DOM');\n        // 将分组中的直接条目移动到分组容器中\n        group.promptIds.forEach(promptId => {\n            // 尝试多种选择器来查找条目\n            let promptElement = $(`.completion_prompt_manager_prompt[data-pm-identifier=\"${promptId}\"]`);\n            // 如果没找到，尝试在子元素中查找\n            if (promptElement.length === 0) {\n                promptElement = $(`.completion_prompt_manager_prompt`).filter(function () {\n                    return ($(this).data('pm-identifier') === promptId ||\n                        $(this).find('[data-pm-identifier]').data('pm-identifier') === promptId);\n                });\n            }\n            if (promptElement.length > 0) {\n                groupContainer.find('.prompt-group-content').append(promptElement);\n                console.log('移动条目到分组容器:', promptId);\n            }\n            else {\n                console.warn('未找到条目:', promptId);\n            }\n        });\n        // 递归处理子分组\n        if (group.subGroups.length > 0) {\n            // 创建子分组的容器\n            const subGroupsContainer = $('<div class=\"subgroups-container\"></div>');\n            groupContainer.find('.prompt-group-content').append(subGroupsContainer);\n            // 递归应用子分组\n            applySubGroupsToContainer(group.subGroups, subGroupsContainer, level + 1);\n        }\n        console.log('分组容器创建完成，条目数量:', groupContainer.find('.completion_prompt_manager_prompt').length);\n        // 绑定展开/折叠事件（使用立即执行函数避免闭包问题）\n        (function (currentGroup) {\n            const header = groupContainer.find('.prompt-group-header');\n            console.log('为主分组绑定事件:', currentGroup.name, '头部元素数量:', header.length);\n            // 先解绑旧事件，防止重复绑定\n            header.off('click');\n            header.on('click', function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                const content = $(this).siblings('.prompt-group-content');\n                const icon = $(this).find('.group-toggle-icon');\n                console.log('主分组点击事件触发:', currentGroup.name);\n                console.log('内容元素数量:', content.length, '图标元素数量:', icon.length);\n                console.log('当前内容可见状态:', content.is(':visible'));\n                if (content.is(':visible') && content.css('display') !== 'none') {\n                    content.css('display', 'none');\n                    icon.text('▶');\n                    currentGroup.collapsed = true;\n                    console.log('主分组已折叠:', currentGroup.name);\n                }\n                else {\n                    content.css({\n                        display: 'block',\n                        visibility: 'visible',\n                        height: 'auto',\n                        overflow: 'visible',\n                    });\n                    content.show();\n                    icon.text('▼');\n                    currentGroup.collapsed = false;\n                    console.log('主分组已展开:', currentGroup.name);\n                    console.log('主分组展开后内容区域子元素数量:', content.children().length);\n                }\n            });\n        })(group);\n    });\n}\n// 应用子分组到指定容器\nfunction applySubGroupsToContainer(subGroups, container, level) {\n    subGroups.forEach(subGroup => {\n        if (!hasValidContent(subGroup))\n            return;\n        console.log('处理子分组:', subGroup.name, '层级:', level);\n        // 获取子分组中所有条目\n        const allPromptIds = getAllPromptIdsFromGroup(subGroup);\n        // 统计启用的条目数量\n        const enabledCount = allPromptIds.filter(promptId => {\n            const promptElement = $(`.completion_prompt_manager_prompt[data-pm-identifier=\"${promptId}\"]`);\n            return promptElement.find('.prompt-manager-toggle-action').hasClass('fa-toggle-on');\n        }).length;\n        // 创建子分组容器\n        const subGroupContainer = $(`\n      <div class=\"prompt-group-container subgroup\" data-group-id=\"${subGroup.id}\" style=\"border: 1px solid rgba(128, 128, 128, 0.2); margin: 3px 0; background-color: rgba(0, 0, 0, 0.03); margin-left: 15px; overflow: visible;\">\n        <div class=\"prompt-group-header\" style=\"padding: 4px 8px; background-color: rgba(0, 0, 0, 0.05); cursor: pointer; display: flex; align-items: center;\">\n          <span class=\"group-toggle-icon\" style=\"margin-right: 6px; font-size: 11px; color: inherit;\">${subGroup.collapsed ? '▶' : '▼'}</span>\n          <span style=\"font-weight: bold; color: inherit; font-size: 13px;\">${$('<div/>').text(subGroup.name).html()}</span>\n          <span style=\"margin-left: 8px; font-size: 11px; color: #666;\">(${enabledCount}/${allPromptIds.length})</span>\n        </div>\n        <div class=\"prompt-group-content\" style=\"padding: 2px; min-height: 0; overflow: visible; ${subGroup.collapsed ? 'display: none;' : 'display: block;'}\"></div>\n      </div>\n    `);\n        container.append(subGroupContainer);\n        // 移动子分组的直接条目\n        console.log('开始移动子分组条目:', subGroup.promptIds);\n        subGroup.promptIds.forEach(promptId => {\n            let promptElement = $(`.completion_prompt_manager_prompt[data-pm-identifier=\"${promptId}\"]`);\n            if (promptElement.length === 0) {\n                promptElement = $(`.completion_prompt_manager_prompt`).filter(function () {\n                    return ($(this).data('pm-identifier') === promptId ||\n                        $(this).find('[data-pm-identifier]').data('pm-identifier') === promptId);\n                });\n            }\n            if (promptElement.length > 0) {\n                const contentContainer = subGroupContainer.find('.prompt-group-content');\n                contentContainer.append(promptElement);\n                console.log('移动条目到子分组容器:', promptId, '容器内条目数量:', contentContainer.children().length);\n            }\n            else {\n                console.warn('未找到条目元素:', promptId);\n            }\n        });\n        const finalContentCount = subGroupContainer.find('.prompt-group-content').children().length;\n        console.log('子分组最终包含的元素数量:', finalContentCount);\n        // 递归处理更深层的子分组\n        if (subGroup.subGroups.length > 0) {\n            const deeperSubGroupsContainer = $('<div class=\"subgroups-container\"></div>');\n            subGroupContainer.find('.prompt-group-content').append(deeperSubGroupsContainer);\n            applySubGroupsToContainer(subGroup.subGroups, deeperSubGroupsContainer, level + 1);\n        }\n        // 绑定展开/折叠事件（使用立即执行函数避免闭包问题）\n        (function (currentSubGroup) {\n            const header = subGroupContainer.find('.prompt-group-header');\n            console.log('为子分组绑定事件:', currentSubGroup.name, '头部元素数量:', header.length);\n            // 先解绑旧事件，防止重复绑定\n            header.off('click');\n            header.on('click', function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n                const content = $(this).siblings('.prompt-group-content');\n                const icon = $(this).find('.group-toggle-icon');\n                console.log('子分组点击事件触发:', currentSubGroup.name);\n                console.log('内容元素数量:', content.length, '图标元素数量:', icon.length);\n                console.log('当前内容可见状态:', content.is(':visible'));\n                console.log('当前内容display样式:', content.css('display'));\n                if (content.is(':visible') && content.css('display') !== 'none') {\n                    content.css('display', 'none');\n                    icon.text('▶');\n                    currentSubGroup.collapsed = true;\n                    console.log('子分组已折叠:', currentSubGroup.name);\n                }\n                else {\n                    // 强制显示，并检查内容\n                    content.css({\n                        display: 'block',\n                        visibility: 'visible',\n                        height: 'auto',\n                        overflow: 'visible',\n                    });\n                    content.show(); // 双重保险\n                    icon.text('▼');\n                    currentSubGroup.collapsed = false;\n                    console.log('子分组已展开:', currentSubGroup.name);\n                    console.log('展开后内容区域子元素数量:', content.children().length);\n                    console.log('展开后实际高度:', content.height());\n                    // 强制重新渲染\n                    setTimeout(() => {\n                        content.trigger('resize');\n                        console.log('强制重新渲染后高度:', content.height());\n                    }, 10);\n                }\n            });\n        })(subGroup);\n    });\n}\n// 获取分组中的所有条目ID（递归包括子分组）\nfunction getAllPromptIdsFromGroup(group) {\n    let allIds = [...group.promptIds];\n    group.subGroups.forEach(subGroup => {\n        allIds = allIds.concat(getAllPromptIdsFromGroup(subGroup));\n    });\n    return allIds;\n}\n// 加载时恢复分组\nfunction restoreGroupingFromConfig() {\n    try {\n        const currentPresetName = TavernHelper.getLoadedPresetName();\n        const groups = getPresetGrouping(currentPresetName);\n        if (groups.length > 0) {\n            console.log(`恢复预设 \"${currentPresetName}\" 的分组配置，共 ${groups.length} 个分组`);\n            // 检查是否有预设条目存在\n            const promptElements = $('.completion_prompt_manager_prompt');\n            if (promptElements.length === 0) {\n                console.log('⚠️ 未找到预设条目，延迟恢复分组');\n                setTimeout(() => restoreGroupingFromConfig(), 200);\n                return;\n            }\n            // 延迟一点时间确保DOM已加载\n            setTimeout(() => {\n                applyGroupingToDOM(groups);\n            }, 200);\n        }\n        else {\n            console.log(`预设 \"${currentPresetName}\" 没有分组配置`);\n        }\n    }\n    catch (error) {\n        console.error('恢复分组配置失败:', error);\n    }\n}\n// 延迟恢复分组（用于DOM变化后）\n// 防抖恢复分组\nlet restoreTimeout = null;\n// 智能延迟恢复，根据操作类型调整延迟时间\nfunction restoreGroupingDelayed(delay = 200, operation = 'unknown') {\n    if (restoreTimeout) {\n        clearTimeout(restoreTimeout);\n    }\n    // 根据操作类型调整延迟时间\n    let actualDelay = delay;\n    switch (operation) {\n        case 'toggle':\n            actualDelay = 100; // 开关操作最快\n            break;\n        case 'settings':\n            actualDelay = 200; // 设置更新中等\n            break;\n        case 'dom_change':\n            actualDelay = 150; // DOM变化较快\n            break;\n        case 'preset_change':\n            actualDelay = 100; // 预设切换最快\n            break;\n        default:\n            actualDelay = delay;\n    }\n    restoreTimeout = window.setTimeout(() => {\n        console.log(`🔄 延迟恢复分组开始... (操作: ${operation}, 延迟: ${actualDelay}ms)`);\n        restoreGroupingFromConfig();\n        restoreTimeout = null;\n    }, actualDelay);\n}\n// 立即恢复分组（用于关键操作）\nfunction restoreGroupingImmediate() {\n    console.log('⚡ 立即恢复分组...');\n    restoreGroupingFromConfig();\n}\n// 强制恢复分组（多次尝试确保成功）\nfunction forceRestoreGrouping() {\n    const tryRestore = (attempt) => {\n        const currentPresetName = TavernHelper.getLoadedPresetName();\n        const groups = getPresetGrouping(currentPresetName);\n        const promptElements = $('.completion_prompt_manager_prompt');\n        console.log(`第${attempt}次尝试恢复分组，预设: ${currentPresetName}, 分组数: ${groups.length}, 条目数: ${promptElements.length}`);\n        if (groups.length > 0 && promptElements.length > 0) {\n            applyGroupingToDOM(groups);\n            console.log('✅ 分组恢复成功');\n        }\n        else if (attempt < 5) {\n            // 如果还没有条目或分组，继续尝试\n            setTimeout(() => tryRestore(attempt + 1), 200);\n        }\n        else {\n            console.log('⚠️ 分组恢复失败，已达到最大尝试次数');\n        }\n    };\n    tryRestore(1);\n}\n// 主动触发分组恢复（用于关键操作后）\nfunction triggerGroupingRestore() {\n    console.log('🔄 主动触发分组恢复...');\n    // 先清除现有的分组效果\n    clearAllGrouping();\n    // 然后延迟恢复\n    restoreGroupingDelayed(150, 'dom_change');\n}\n// 清除所有分组\nfunction clearAllGrouping() {\n    $('.prompt-group-container').each(function () {\n        const prompts = $(this).find('.completion_prompt_manager_prompt');\n        $(this).before(prompts);\n        $(this).remove();\n    });\n}\n// 导出当前预设的分组配置\nfunction exportPresetGrouping(presetName) {\n    const groups = getPresetGrouping(presetName);\n    return groups.length > 0 ? groups : null;\n}\n// 导入分组配置到指定预设\nfunction importPresetGrouping(presetName, groups) {\n    if (!groups || !Array.isArray(groups) || groups.length === 0) {\n        console.warn('导入的分组配置为空或格式不正确');\n        return;\n    }\n    console.log('开始导入分组配置到预设:', presetName, '分组数量:', groups.length);\n    // 验证并修复分组数据结构\n    const validGroups = groups\n        .map(group => {\n        // 确保分组对象有所有必需的字段\n        const validGroup = {\n            id: group.id || Date.now().toString() + Math.random().toString(36).substr(2, 9),\n            name: group.name || '未命名分组',\n            promptIds: Array.isArray(group.promptIds) ? group.promptIds : [],\n            subGroups: Array.isArray(group.subGroups) ? group.subGroups : [],\n            collapsed: typeof group.collapsed === 'boolean' ? group.collapsed : true,\n            level: typeof group.level === 'number' ? group.level : 0,\n            parentId: group.parentId,\n        };\n        console.log('处理分组:', validGroup.name, '条目数量:', validGroup.promptIds.length);\n        return validGroup;\n    })\n        .filter(group => group.promptIds.length > 0); // 只保留有条目的分组\n    if (validGroups.length === 0) {\n        console.warn('没有有效的分组配置');\n        return;\n    }\n    console.log('有效分组数量:', validGroups.length);\n    savePresetGrouping(presetName, validGroups);\n    // 如果是当前预设，立即应用\n    const currentPresetName = TavernHelper.getLoadedPresetName();\n    console.log('当前预设:', currentPresetName, '目标预设:', presetName);\n    if (currentPresetName === presetName) {\n        console.log('立即应用分组到当前预设');\n        setTimeout(() => {\n            applyGroupingToDOM(validGroups);\n        }, 100);\n    }\n}\n// 获取所有预设的分组配置（用于批量导出）\nfunction getAllPresetGroupings() {\n    const allGroupings = {};\n    // 遍历localStorage中所有的分组配置\n    for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (key && key.startsWith('miaomiao_preset_groups_')) {\n            const presetName = key.replace('miaomiao_preset_groups_', '');\n            const groups = getPresetGrouping(presetName);\n            if (groups.length > 0) {\n                allGroupings[presetName] = groups;\n            }\n        }\n    }\n    return allGroupings;\n}\n// 清除指定预设的分组配置\nfunction clearPresetGrouping(presetName) {\n    localStorage.removeItem(getGroupingStorageKey(presetName));\n    // 如果是当前预设，清除DOM中的分组\n    const currentPresetName = TavernHelper.getLoadedPresetName();\n    if (currentPresetName === presetName) {\n        clearAllGrouping();\n    }\n}\n// 显示位置选择弹窗\nasync function showPositionSelectionPopup(allPrompts, selectedPromptIds, onConfirm) {\n    const popupId = 'position-selection-popup';\n    $(`#${popupId}`).remove();\n    // 过滤掉已选中的条目，只显示可以作为目标的条目\n    const availablePrompts = allPrompts.filter(prompt => !selectedPromptIds.includes(prompt.id));\n    if (availablePrompts.length === 0) {\n        toastr.error('没有可用的目标位置');\n        return;\n    }\n    const promptsHtml = availablePrompts\n        .map(prompt => `\n    <div class=\"position-target-item\" data-prompt-id=\"${prompt.id}\" style=\"border: 1px solid #e0e0e0; margin: 5px 0; border-radius: 6px; background-color: #fff;\">\n      <div style=\"padding: 10px; font-weight: ${prompt.enabled ? 'bold' : 'normal'}; color: ${prompt.enabled ? '#000' : '#666'}; font-size: 14px;\">\n        ${$('<div/>').text(prompt.name).html()}\n      </div>\n      <div style=\"display: flex; border-top: 1px solid #f0f0f0;\">\n        <button class=\"position-btn\" data-prompt-id=\"${prompt.id}\" data-position=\"above\" style=\"flex: 1; padding: 8px; background-color: #e3f2fd; border: none; border-right: 1px solid #f0f0f0; cursor: pointer; font-size: 13px; color: #1976d2;\">移动到上方</button>\n        <button class=\"position-btn\" data-prompt-id=\"${prompt.id}\" data-position=\"below\" style=\"flex: 1; padding: 8px; background-color: #f3e5f5; border: none; cursor: pointer; font-size: 13px; color: #7b1fa2;\">移动到下方</button>\n      </div>\n    </div>\n  `)\n        .join('');\n    const popupHtml = `\n    <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10003; display: flex; align-items: center; justify-content: center;\">\n      <div class=\"position-selection-popup-content\" style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 600px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 80vh;\">\n        <h4 style=\"margin-top:0; color:#6a4226; text-align: center; border-bottom: 2px solid #f0d8b6; padding-bottom: 10px;\">选择移动位置</h4>\n        \n        <div style=\"margin: 15px 0; padding: 12px; background-color: #e8f5e8; border-radius: 8px; border-left: 4px solid #4CAF50;\">\n          <div style=\"font-size: 13px; color: #2e7d32; font-weight: bold; margin-bottom: 6px;\">📋 移动说明</div>\n          <div style=\"font-size: 12px; color: #424242; line-height: 1.4;\">\n            已选择 ${selectedPromptIds.length} 个条目进行移动。点击目标条目的\"移动到上方\"或\"移动到下方\"按钮来设置新位置。\n          </div>\n        </div>\n\n        <div style=\"flex: 1; min-height: 0; overflow-y: auto; border: 1px solid #f0e2d0; border-radius: 8px; padding: 12px; margin-bottom: 15px;\">\n          <div style=\"font-size: 13px; color: #666; margin-bottom: 12px;\">选择要移动到哪个条目的上方或下方：</div>\n          <div id=\"position-targets-container\">\n            ${promptsHtml}\n          </div>\n        </div>\n\n        <div style=\"display: flex; justify-content: center;\">\n          <button id=\"position-selection-cancel\" style=\"padding: 10px 16px; background-color:#9E9E9E; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#fff; font-size: 14px;\">取消</button>\n        </div>\n      </div>\n    </div>\n    <style>\n      .position-btn:hover {\n        opacity: 0.8;\n        font-weight: bold;\n      }\n      @media (max-width: 600px) {\n        #${popupId} {\n          align-items: flex-start !important;\n          padding: 10px;\n        }\n        #${popupId} .position-selection-popup-content {\n          margin-top: 5vh !important;\n          max-height: 90vh !important;\n          width: 95% !important;\n          padding: 15px;\n          border-radius: 12px;\n        }\n        #${popupId} .position-btn {\n          font-size: 12px !important;\n          padding: 6px !important;\n        }\n      }\n      @media (max-width: 480px) {\n        #${popupId} .position-selection-popup-content {\n          margin-top: 2vh !important;\n          max-height: 96vh !important;\n          padding: 12px;\n        }\n        #${popupId} h4 {\n          font-size: 16px !important;\n        }\n        #${popupId} .position-btn {\n          font-size: 11px !important;\n          padding: 5px !important;\n        }\n      }\n    </style>\n  `;\n    $('body').append(popupHtml);\n    // 绑定事件\n    $('.position-btn').on('click', function () {\n        const targetPromptId = $(this).data('prompt-id');\n        const position = $(this).data('position');\n        $(`#${popupId}`).remove();\n        onConfirm(targetPromptId, position);\n    });\n    $('#position-selection-cancel').on('click', () => {\n        $(`#${popupId}`).remove();\n    });\n}\n// 移动条目到指定位置\nfunction movePromptsToPosition(selectedPromptIds, targetPromptId, position) {\n    console.log('开始移动条目:', selectedPromptIds, '到', targetPromptId, position);\n    // 通过酒馆助手获取当前预设的条目顺序\n    const currentPrompts = getCurrentPresetPrompts();\n    const promptIds = currentPrompts.map(p => p.id);\n    // 创建新的顺序数组\n    const newOrder = [...promptIds];\n    // 从原位置移除选中的条目\n    selectedPromptIds.forEach(id => {\n        const index = newOrder.indexOf(id);\n        if (index > -1) {\n            newOrder.splice(index, 1);\n        }\n    });\n    // 找到目标位置\n    const targetIndex = newOrder.indexOf(targetPromptId);\n    if (targetIndex === -1) {\n        console.error('未找到目标条目:', targetPromptId);\n        toastr.error('移动失败：未找到目标条目');\n        return;\n    }\n    // 计算插入位置\n    const insertIndex = position === 'above' ? targetIndex : targetIndex + 1;\n    // 在目标位置插入选中的条目\n    newOrder.splice(insertIndex, 0, ...selectedPromptIds);\n    console.log('新的条目顺序:', newOrder);\n    // 应用新顺序到DOM\n    applyNewPromptOrder(newOrder);\n    // 更新分组界面的显示顺序\n    updateGroupingUIOrder(newOrder);\n}\n// 应用新的条目顺序到DOM\nfunction applyNewPromptOrder(newOrder) {\n    console.log('应用新的条目顺序到DOM');\n    const container = $('.completion_prompt_manager_prompt').first().parent();\n    if (container.length === 0) {\n        console.error('未找到预设条目容器');\n        return;\n    }\n    // 按新顺序重新排列DOM元素\n    newOrder.forEach(promptId => {\n        const element = $(`.completion_prompt_manager_prompt[data-pm-identifier=\"${promptId}\"]`);\n        if (element.length === 0) {\n            // 尝试在子元素中查找\n            const fallbackElement = $(`.completion_prompt_manager_prompt`).filter(function () {\n                return $(this).find('[data-pm-identifier]').data('pm-identifier') === promptId;\n            });\n            if (fallbackElement.length > 0) {\n                container.append(fallbackElement);\n            }\n        }\n        else {\n            container.append(element);\n        }\n    });\n    console.log('DOM顺序更新完成');\n}\n// 更新分组界面的显示顺序\nfunction updateGroupingUIOrder(newOrder) {\n    console.log('更新分组界面的显示顺序');\n    const promptsContainer = $('#prompts-container');\n    if (promptsContainer.length === 0) {\n        console.log('分组界面未打开，跳过界面更新');\n        return;\n    }\n    // 按新顺序重新排列分组界面中的条目\n    newOrder.forEach(promptId => {\n        const item = $(`.prompt-item[data-prompt-id=\"${promptId}\"]`);\n        if (item.length > 0) {\n            promptsContainer.append(item);\n        }\n    });\n    console.log('分组界面顺序更新完成');\n}\n// 显示新增条目弹窗\nasync function showAddPromptPopup(onSuccess) {\n    const popupId = 'add-prompt-popup';\n    $(`#${popupId}`).remove();\n    // 获取当前所有条目用于位置选择\n    const currentPrompts = getCurrentPresetPrompts();\n    const popupHtml = `\n    <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10004; display: flex; align-items: center; justify-content: center;\">\n      <div class=\"add-prompt-popup-content\" style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 700px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 90vh; overflow: hidden;\">\n        <h4 style=\"margin-top:0; color:#6a4226; text-align: center; border-bottom: 2px solid #f0d8b6; padding-bottom: 10px; flex-shrink: 0;\">新增条目</h4>\n        \n        <div style=\"flex: 1; min-height: 0; overflow-y: auto; margin-bottom: 15px;\">\n          <div style=\"margin: 15px 0;\">\n            <label style=\"display: block; margin-bottom: 8px; font-weight: bold; color: #6a4226;\">条目名称：</label>\n            <input type=\"text\" id=\"add-prompt-name\" placeholder=\"输入条目名称...\" style=\"width: 100%; padding: 10px; border: 1px solid #d4b58b; border-radius: 6px; background: #fff; color: #333; font-size: 14px; margin-bottom: 15px; box-sizing: border-box;\">\n            \n            <label style=\"display: block; margin-bottom: 8px; font-weight: bold; color: #6a4226;\">条目内容：</label>\n            <textarea id=\"add-prompt-content\" placeholder=\"输入条目内容...\" style=\"width: 100%; height: 120px; padding: 10px; border: 1px solid #d4b58b; border-radius: 6px; background: #fff; color: #333; font-size: 14px; resize: vertical; box-sizing: border-box;\"></textarea>\n          </div>\n\n          <div style=\"margin: 15px 0;\">\n            <label style=\"display: block; margin-bottom: 8px; font-weight: bold; color: #6a4226;\">插入位置：</label>\n            <div style=\"display: flex; gap: 10px; margin-bottom: 10px;\">\n              <label style=\"display: flex; align-items: center; cursor: pointer;\">\n                <input type=\"radio\" name=\"position-type\" value=\"end\" checked style=\"margin-right: 6px;\">\n                <span style=\"font-size: 14px;\">添加到末尾</span>\n              </label>\n              <label style=\"display: flex; align-items: center; cursor: pointer;\">\n                <input type=\"radio\" name=\"position-type\" value=\"custom\" style=\"margin-right: 6px;\">\n                <span style=\"font-size: 14px;\">插入到指定位置</span>\n              </label>\n            </div>\n            \n            <div id=\"position-selection-container\" style=\"display: none; border: 1px solid #e0e0e0; border-radius: 6px; max-height: 250px; overflow-y: auto;\">\n              ${currentPrompts\n        .map(prompt => `\n                <div class=\"position-option\" data-prompt-id=\"${prompt.id}\" style=\"border-bottom: 1px solid #f0f0f0; last-child:border-bottom: none;\">\n                  <div style=\"padding: 8px 12px; font-weight: ${prompt.enabled ? 'bold' : 'normal'}; color: ${prompt.enabled ? '#000' : '#666'}; font-size: 13px; background-color: #fafafa;\">\n                    ${$('<div/>').text(prompt.name).html()}\n                  </div>\n                  <div style=\"display: flex;\">\n                    <button class=\"position-btn\" data-prompt-id=\"${prompt.id}\" data-position=\"above\" style=\"flex: 1; padding: 6px; background-color: #e3f2fd; border: none; border-right: 1px solid #f0f0f0; cursor: pointer; font-size: 12px; color: #1976d2;\">插入到上方</button>\n                    <button class=\"position-btn\" data-prompt-id=\"${prompt.id}\" data-position=\"below\" style=\"flex: 1; padding: 6px; background-color: #f3e5f5; border: none; cursor: pointer; font-size: 12px; color: #7b1fa2;\">插入到下方</button>\n                  </div>\n                </div>\n              `)\n        .join('')}\n            </div>\n            \n            <div id=\"selected-position-info\" style=\"margin-top: 10px; padding: 8px; background-color: #e8f5e8; border-radius: 4px; font-size: 13px; color: #2e7d32; display: none;\">\n              <strong>选择的位置：</strong><span id=\"position-description\"></span>\n            </div>\n          </div>\n\n          <div style=\"margin: 15px 0; padding: 12px; background-color: #e3f2fd; border-radius: 8px; border-left: 4px solid #2196F3;\">\n            <div style=\"font-size: 13px; color: #1976d2; font-weight: bold; margin-bottom: 6px;\">💡 提示</div>\n            <div style=\"font-size: 12px; color: #424242; line-height: 1.4;\">\n              选择\"添加到末尾\"会将新条目放在预设的最后。选择\"插入到指定位置\"可以精确控制新条目的位置。\n            </div>\n          </div>\n        </div>\n\n        <div style=\"display: flex; justify-content: space-between; align-items: center; gap: 10px; flex-shrink: 0; border-top: 1px solid #f0e2d0; padding-top: 15px;\">\n          <div style=\"display: flex; align-items: center;\">\n            <input type=\"checkbox\" id=\"add-prompt-enabled\" checked style=\"margin-right: 8px; transform: scale(1.2);\">\n            <label for=\"add-prompt-enabled\" style=\"font-size: 13px; color: #666;\">启用条目</label>\n          </div>\n          <div style=\"display: flex; gap: 8px;\">\n            <button id=\"add-prompt-cancel\" style=\"padding: 10px 16px; background-color:#9E9E9E; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#fff; font-size: 14px;\">取消</button>\n            <button id=\"add-prompt-confirm\" style=\"padding: 10px 16px; background-color:#4CAF50; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#fff; font-size: 14px;\">创建条目</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <style>\n      @media (max-width: 600px) {\n        #${popupId} {\n          align-items: flex-start !important;\n          padding: 10px;\n        }\n        #${popupId} .add-prompt-popup-content {\n          margin-top: 5vh !important;\n          max-height: 90vh !important;\n          width: 95% !important;\n          padding: 15px;\n          border-radius: 12px;\n        }\n        #${popupId} textarea {\n          height: 150px !important;\n        }\n      }\n      @media (max-width: 480px) {\n        #${popupId} .add-prompt-popup-content {\n          margin-top: 2vh !important;\n          max-height: 96vh !important;\n          padding: 12px;\n        }\n        #${popupId} h4 {\n          font-size: 16px !important;\n        }\n        #${popupId} textarea {\n          height: 120px !important;\n        }\n      }\n    </style>\n  `;\n    $('body').append(popupHtml);\n    // 存储选择的位置信息\n    let selectedPosition = null;\n    // 绑定事件\n    $('#add-prompt-cancel').on('click', () => {\n        $(`#${popupId}`).remove();\n    });\n    // 位置类型切换\n    $('input[name=\"position-type\"]').on('change', function () {\n        const positionType = $(this).val();\n        if (positionType === 'custom') {\n            $('#position-selection-container').show();\n        }\n        else {\n            $('#position-selection-container').hide();\n            $('#selected-position-info').hide();\n            selectedPosition = null;\n        }\n    });\n    // 位置选择按钮点击\n    $('.position-btn').on('click', function () {\n        const targetId = $(this).data('prompt-id');\n        const position = $(this).data('position');\n        // 清除之前的选择状态\n        $('.position-btn').removeClass('selected').css('font-weight', 'normal');\n        // 设置当前选择状态\n        $(this).addClass('selected').css('font-weight', 'bold');\n        selectedPosition = { targetId, position };\n        // 显示选择信息\n        const targetPrompt = currentPrompts.find(p => p.id === targetId);\n        if (targetPrompt) {\n            const positionText = position === 'above' ? '上方' : '下方';\n            $('#position-description').text(`插入到\"${targetPrompt.name}\"的${positionText}`);\n            $('#selected-position-info').show();\n        }\n    });\n    $('#add-prompt-confirm').on('click', async () => {\n        const name = $('#add-prompt-name').val()?.toString().trim();\n        const content = $('#add-prompt-content').val()?.toString().trim();\n        const enabled = $('#add-prompt-enabled').is(':checked');\n        const positionType = $('input[name=\"position-type\"]:checked').val();\n        if (!name) {\n            toastr.error('请输入条目名称');\n            return;\n        }\n        if (!content) {\n            toastr.error('请输入条目内容');\n            return;\n        }\n        if (positionType === 'custom' && !selectedPosition) {\n            toastr.error('请选择插入位置');\n            return;\n        }\n        try {\n            if (positionType === 'end' || !selectedPosition) {\n                // 添加到末尾\n                await addNewPrompt(name, content, enabled);\n            }\n            else {\n                // 插入到指定位置\n                await addNewPromptAtPosition(name, content, enabled, selectedPosition.targetId, selectedPosition.position);\n            }\n            $(`#${popupId}`).remove();\n            toastr.success(`条目 \"${name}\" 创建成功`);\n            onSuccess();\n        }\n        catch (error) {\n            console.error('创建条目失败:', error);\n            toastr.error('创建条目失败，请重试');\n        }\n    });\n}\n// 显示编辑条目弹窗\nasync function showEditPromptPopup(prompt, onSuccess) {\n    const popupId = 'edit-prompt-popup';\n    $(`#${popupId}`).remove();\n    // 获取条目的当前内容\n    const currentContent = await getPromptContent(prompt.id);\n    const popupHtml = `\n    <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10004; display: flex; align-items: center; justify-content: center;\">\n      <div class=\"edit-prompt-popup-content\" style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 600px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 80vh;\">\n        <h4 style=\"margin-top:0; color:#6a4226; text-align: center; border-bottom: 2px solid #f0d8b6; padding-bottom: 10px;\">编辑条目</h4>\n        \n        <div style=\"margin: 15px 0;\">\n          <label style=\"display: block; margin-bottom: 8px; font-weight: bold; color: #6a4226;\">条目名称：</label>\n          <input type=\"text\" id=\"edit-prompt-name\" value=\"${$('<div/>').text(prompt.name).html()}\" style=\"width: 100%; padding: 10px; border: 1px solid #d4b58b; border-radius: 6px; background: #fff; color: #333; font-size: 14px; margin-bottom: 15px; box-sizing: border-box;\">\n          \n          <label style=\"display: block; margin-bottom: 8px; font-weight: bold; color: #6a4226;\">条目内容：</label>\n          <textarea id=\"edit-prompt-content\" style=\"width: 100%; height: 200px; padding: 10px; border: 1px solid #d4b58b; border-radius: 6px; background: #fff; color: #333; font-size: 14px; resize: vertical; box-sizing: border-box;\">${$('<div/>').text(currentContent).html()}</textarea>\n        </div>\n\n        <div style=\"margin: 15px 0; padding: 12px; background-color: #fff3e0; border-radius: 8px; border-left: 4px solid #ff9800;\">\n          <div style=\"font-size: 13px; color: #f57c00; font-weight: bold; margin-bottom: 6px;\">✏️ 编辑说明</div>\n          <div style=\"font-size: 12px; color: #424242; line-height: 1.4;\">\n            修改条目名称和内容后，变更将立即应用到预设中。请确保内容格式正确。\n          </div>\n        </div>\n\n        <div style=\"display: flex; justify-content: space-between; align-items: center; gap: 10px;\">\n          <div style=\"display: flex; align-items: center;\">\n            <input type=\"checkbox\" id=\"edit-prompt-enabled\" ${prompt.enabled ? 'checked' : ''} style=\"margin-right: 8px; transform: scale(1.2);\">\n            <label for=\"edit-prompt-enabled\" style=\"font-size: 13px; color: #666;\">启用条目</label>\n          </div>\n          <div style=\"display: flex; gap: 8px;\">\n            <button id=\"edit-prompt-cancel\" style=\"padding: 10px 16px; background-color:#9E9E9E; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#fff; font-size: 14px;\">取消</button>\n            <button id=\"edit-prompt-confirm\" style=\"padding: 10px 16px; background-color:#FF9800; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#fff; font-size: 14px;\">保存修改</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <style>\n      @media (max-width: 600px) {\n        #${popupId} {\n          align-items: flex-start !important;\n          padding: 10px;\n        }\n        #${popupId} .edit-prompt-popup-content {\n          margin-top: 5vh !important;\n          max-height: 90vh !important;\n          width: 95% !important;\n          padding: 15px;\n          border-radius: 12px;\n        }\n        #${popupId} textarea {\n          height: 150px !important;\n        }\n      }\n      @media (max-width: 480px) {\n        #${popupId} .edit-prompt-popup-content {\n          margin-top: 2vh !important;\n          max-height: 96vh !important;\n          padding: 12px;\n        }\n        #${popupId} h4 {\n          font-size: 16px !important;\n        }\n        #${popupId} textarea {\n          height: 120px !important;\n        }\n      }\n    </style>\n  `;\n    $('body').append(popupHtml);\n    // 绑定事件\n    $('#edit-prompt-cancel').on('click', () => {\n        $(`#${popupId}`).remove();\n    });\n    $('#edit-prompt-confirm').on('click', async () => {\n        const name = $('#edit-prompt-name').val()?.toString().trim();\n        const content = $('#edit-prompt-content').val()?.toString().trim();\n        const enabled = $('#edit-prompt-enabled').is(':checked');\n        if (!name) {\n            toastr.error('请输入条目名称');\n            return;\n        }\n        if (!content) {\n            toastr.error('请输入条目内容');\n            return;\n        }\n        try {\n            await updatePrompt(prompt.id, name, content, enabled);\n            $(`#${popupId}`).remove();\n            toastr.success(`条目 \"${name}\" 更新成功`);\n            onSuccess();\n        }\n        catch (error) {\n            console.error('更新条目失败:', error);\n            toastr.error('更新条目失败，请重试');\n        }\n    });\n}\n// 新增条目\nasync function addNewPrompt(name, content, enabled) {\n    console.log('新增条目:', name, enabled);\n    try {\n        // 使用UUID生成函数\n        // 使用酒馆助手的预设API直接创建条目\n        await TavernHelper.updatePresetWith('in_use', preset => {\n            const newPrompt = {\n                id: (0,___WEBPACK_IMPORTED_MODULE_0__.generateUUID)(),\n                name: name,\n                enabled: enabled,\n                position: {\n                    type: 'relative',\n                },\n                role: 'system',\n                content: content,\n            };\n            // 添加到预设的prompts数组末尾\n            preset.prompts.push(newPrompt);\n            return preset;\n        }, { render: 'immediate' });\n        console.log('条目创建成功');\n        triggerPresetSave();\n    }\n    catch (error) {\n        console.error('创建条目失败:', error);\n        throw error;\n    }\n}\n// 在指定位置插入新条目\nasync function addNewPromptAtPosition(name, content, enabled, targetId, position) {\n    console.log('在指定位置插入新条目:', name, '位置:', targetId, position);\n    try {\n        // 使用UUID生成函数\n        // 直接在指定位置创建条目\n        await TavernHelper.updatePresetWith('in_use', preset => {\n            const newPrompt = {\n                id: (0,___WEBPACK_IMPORTED_MODULE_0__.generateUUID)(),\n                name: name,\n                enabled: enabled,\n                position: {\n                    type: 'relative',\n                },\n                role: 'system',\n                content: content,\n            };\n            // 找到目标条目的索引\n            const targetIndex = preset.prompts.findIndex(p => p.id === targetId);\n            if (targetIndex === -1) {\n                // 如果找不到目标条目，就添加到末尾\n                preset.prompts.push(newPrompt);\n            }\n            else {\n                // 根据位置插入条目\n                const insertIndex = position === 'above' ? targetIndex : targetIndex + 1;\n                preset.prompts.splice(insertIndex, 0, newPrompt);\n            }\n            return preset;\n        }, { render: 'immediate' });\n        console.log('条目创建并插入成功');\n        triggerPresetSave();\n    }\n    catch (error) {\n        console.error('在指定位置插入条目失败:', error);\n        throw error;\n    }\n}\n// 获取条目内容\nasync function getPromptContent(promptId) {\n    // 尝试从DOM中获取条目内容\n    const promptElement = $(`.completion_prompt_manager_prompt[data-pm-identifier=\"${promptId}\"]`);\n    if (promptElement.length === 0) {\n        console.warn('未找到条目元素:', promptId);\n        return '';\n    }\n    // 查找条目内容元素\n    const contentElement = promptElement.find('.completion_prompt_manager_prompt_content, .prompt-content, textarea');\n    if (contentElement.length > 0) {\n        return contentElement.text() || contentElement.val()?.toString() || '';\n    }\n    console.warn('未找到条目内容:', promptId);\n    return '';\n}\n// 更新条目\nasync function updatePrompt(promptId, name, content, enabled) {\n    console.log('更新条目:', promptId, name, enabled);\n    try {\n        // 使用酒馆助手的预设API直接更新条目\n        await TavernHelper.updatePresetWith('in_use', preset => {\n            // 查找要更新的条目\n            const promptToUpdate = preset.prompts.find(p => p.id === promptId);\n            if (promptToUpdate) {\n                promptToUpdate.name = name;\n                promptToUpdate.content = content;\n                promptToUpdate.enabled = enabled;\n            }\n            else {\n                // 如果在prompts中没找到，尝试在prompts_unused中查找\n                const unusedPromptToUpdate = preset.prompts_unused.find(p => p.id === promptId);\n                if (unusedPromptToUpdate) {\n                    unusedPromptToUpdate.name = name;\n                    unusedPromptToUpdate.content = content;\n                    unusedPromptToUpdate.enabled = enabled;\n                }\n            }\n            return preset;\n        }, { render: 'immediate' });\n        console.log('条目更新成功');\n        triggerPresetSave();\n    }\n    catch (error) {\n        console.error('更新条目失败:', error);\n        throw error;\n    }\n}\n// 删除选中的条目\nasync function deleteSelectedPrompts(promptIds) {\n    console.log('删除条目:', promptIds);\n    try {\n        // 使用酒馆助手的预设API直接删除条目\n        await TavernHelper.updatePresetWith('in_use', preset => {\n            // 从prompts数组中删除条目\n            preset.prompts = preset.prompts.filter(p => !promptIds.includes(p.id));\n            // 从prompts_unused数组中删除条目\n            preset.prompts_unused = preset.prompts_unused.filter(p => !promptIds.includes(p.id));\n            return preset;\n        }, { render: 'immediate' });\n        console.log('删除条目成功:', promptIds);\n        triggerPresetSave();\n        toastr.success(`成功删除 ${promptIds.length} 个条目`);\n    }\n    catch (error) {\n        console.error('删除条目失败:', promptIds, error);\n        toastr.error('删除条目失败，请重试');\n    }\n}\n// 在分组树中查找包含指定条目的分组\nfunction findPromptInGroups(groups, promptId) {\n    for (const group of groups) {\n        if (group.promptIds.includes(promptId)) {\n            return group;\n        }\n        // 递归查找子分组\n        const foundInSubGroups = findPromptInGroups(group.subGroups, promptId);\n        if (foundInSubGroups) {\n            return foundInSubGroups;\n        }\n    }\n    return null;\n}\n// 检查分组是否有有效内容（条目或子分组）\nfunction hasValidContent(group) {\n    return group.promptIds.length > 0 || group.subGroups.some(subGroup => hasValidContent(subGroup));\n}\n// 检测选中条目是否都属于同一个分组\nfunction detectCommonParentGroup(selectedPrompts, groups) {\n    if (selectedPrompts.length === 0)\n        return null;\n    // 找到第一个条目所属的分组\n    const firstPromptGroup = findPromptInGroups(groups, selectedPrompts[0]);\n    if (!firstPromptGroup)\n        return null;\n    // 检查其他条目是否都属于同一个分组\n    for (let i = 1; i < selectedPrompts.length; i++) {\n        const promptGroup = findPromptInGroups(groups, selectedPrompts[i]);\n        if (!promptGroup || promptGroup.id !== firstPromptGroup.id) {\n            return null; // 不是同一个分组\n        }\n    }\n    return firstPromptGroup;\n}\n// 创建子分组\nasync function createSubGroup(parentGroup, subGroupName, selectedPrompts, existingGroups) {\n    // 检查子分组名称是否与父分组的其他子分组重名\n    if (parentGroup.subGroups.some(sg => sg.name === subGroupName)) {\n        toastr.error(`子分组名称 \"${subGroupName}\" 已存在于分组 \"${parentGroup.name}\" 中`);\n        return;\n    }\n    // 创建新子分组\n    const newSubGroup = {\n        id: Date.now().toString(),\n        name: subGroupName,\n        promptIds: [...selectedPrompts],\n        subGroups: [],\n        collapsed: true,\n        level: parentGroup.level + 1,\n        parentId: parentGroup.id,\n    };\n    // 从父分组中移除这些条目\n    selectedPrompts.forEach(promptId => {\n        const index = parentGroup.promptIds.indexOf(promptId);\n        if (index > -1) {\n            parentGroup.promptIds.splice(index, 1);\n        }\n    });\n    // 添加子分组\n    parentGroup.subGroups.push(newSubGroup);\n    // 更新UI\n    selectedPrompts.forEach(promptId => {\n        const item = $(`.prompt-item[data-prompt-id=\"${promptId}\"]`);\n        item.css('background-color', '#e8f5e8');\n        const existingTag = item.find('.group-tag');\n        const groupPath = getGroupPath(newSubGroup, existingGroups);\n        if (existingTag.length) {\n            existingTag.text(groupPath);\n        }\n        else {\n            item\n                .find('span:last')\n                .after(`<span class=\"group-tag\" style=\"font-size: 12px; color: #4CAF50; background: #e8f5e8; padding: 2px 6px; border-radius: 3px; margin-left: 8px;\">${groupPath}</span>`);\n        }\n    });\n    toastr.success(`子分组 \"${getGroupPath(newSubGroup, existingGroups)}\" 创建成功，将在关闭分组界面时应用`);\n}\n// 创建顶级分组\nasync function createTopLevelGroup(groupName, selectedPrompts, existingGroups) {\n    // 创建新的顶级分组\n    const newGroup = {\n        id: Date.now().toString(),\n        name: groupName,\n        promptIds: [...selectedPrompts],\n        subGroups: [],\n        collapsed: true,\n        level: 0,\n    };\n    existingGroups.push(newGroup);\n    // 更新UI\n    selectedPrompts.forEach(promptId => {\n        const item = $(`.prompt-item[data-prompt-id=\"${promptId}\"]`);\n        item.css('background-color', '#e8f5e8');\n        const existingTag = item.find('.group-tag');\n        if (existingTag.length) {\n            existingTag.text(groupName);\n        }\n        else {\n            item\n                .find('span:last')\n                .after(`<span class=\"group-tag\" style=\"font-size: 12px; color: #4CAF50; background: #e8f5e8; padding: 2px 6px; border-radius: 3px; margin-left: 8px;\">${groupName}</span>`);\n        }\n    });\n    toastr.success(`分组 \"${groupName}\" 创建成功，将在关闭分组界面时应用`);\n}\n// 获取分组的完整路径\nfunction getGroupPath(group, allGroups) {\n    const path = [];\n    let currentGroup = group;\n    while (currentGroup) {\n        path.unshift(currentGroup.name);\n        if (currentGroup.parentId) {\n            currentGroup = findGroupById(allGroups, currentGroup.parentId);\n        }\n        else {\n            break;\n        }\n    }\n    return path.join('/');\n}\n// 根据ID查找分组（递归查找）\nfunction findGroupById(groups, groupId) {\n    for (const group of groups) {\n        if (group.id === groupId) {\n            return group;\n        }\n        const foundInSubGroups = findGroupById(group.subGroups, groupId);\n        if (foundInSubGroups) {\n            return foundInSubGroups;\n        }\n    }\n    return null;\n}\n// 显示分组选择弹窗\nasync function showGroupSelectionPopup(selectedPrompts, existingGroups) {\n    const popupId = 'group-selection-popup';\n    $(`#${popupId}`).remove();\n    if (existingGroups.length === 0) {\n        toastr.warning('当前没有可用的分组，请先创建分组');\n        return;\n    }\n    // 生成分组列表HTML\n    const groupsHtml = generateGroupsListHtml(existingGroups, 0);\n    const popupHtml = `\n    <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10002; display: flex; align-items: center; justify-content: center; padding: 20px; box-sizing: border-box;\">\n      <div style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 100%; max-width: 500px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 80vh; position: relative;\">\n        <h4 style=\"margin-top:0; color:#6a4226; text-align: center; border-bottom: 2px solid #f0d8b6; padding-bottom: 10px;\">选择目标分组</h4>\n        <div style=\"flex: 1; min-height: 0; overflow-y: auto; margin: 15px 0;\">\n          <div style=\"font-size: 13px; color: #666; margin-bottom: 12px; line-height: 1.4;\">\n            请选择要将 ${selectedPrompts.length} 个条目加入的分组：\n          </div>\n          <div id=\"groups-list\" style=\"max-height: 300px; overflow-y: auto;\">\n            ${groupsHtml}\n          </div>\n        </div>\n        <div style=\"text-align: right; margin-top: 15px; flex-shrink: 0;\">\n          <div id=\"selected-group-info\" style=\"font-size: 12px; color: #666; margin-bottom: 10px; text-align: left; display: none;\">\n            已选择分组: <span id=\"selected-group-name\" style=\"font-weight: bold; color: #4CAF50;\"></span>\n          </div>\n          <div style=\"display: flex; gap: 10px; justify-content: flex-end;\">\n            <button id=\"group-selection-cancel\" style=\"padding: 8px 16px; background-color:#bcaaa4; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#3a2c2c;\">取消</button>\n            <button id=\"group-selection-confirm\" style=\"padding: 8px 16px; background-color:#4CAF50; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#fff; display: none;\">加入此分组</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <style>\n      .group-option.selected-group {\n        background-color: #e8f5e8 !important;\n        border-color: #4CAF50 !important;\n        border-width: 2px !important;\n        box-shadow: 0 2px 8px rgba(76, 175, 80, 0.3) !important;\n      }\n      .group-option.selected-group:hover {\n        background-color: #d4edda !important;\n      }\n      @media (max-width: 768px) {\n        #${popupId} {\n          align-items: flex-start !important;\n          padding: 10px !important;\n        }\n        #${popupId} > div {\n          margin-top: 5vh !important;\n          max-height: 85vh !important;\n          width: 100% !important;\n          padding: 15px !important;\n        }\n      }\n      @media (max-width: 480px) {\n        #${popupId} {\n          padding: 5px !important;\n        }\n        #${popupId} > div {\n          margin-top: 2vh !important;\n          max-height: 90vh !important;\n          padding: 12px !important;\n        }\n      }\n    </style>\n  `;\n    $('body').append(popupHtml);\n    let selectedGroup = null;\n    // 先解绑所有可能重复的事件，防止脚本重复加载导致的问题\n    $('#group-selection-cancel').off('click');\n    $('#group-selection-confirm').off('click');\n    $(document).off('click', '.group-option');\n    // 绑定事件\n    $('#group-selection-cancel').on('click', () => {\n        $(`#${popupId}`).remove();\n    });\n    // 确认加入分组\n    $('#group-selection-confirm').on('click', async () => {\n        if (!selectedGroup) {\n            toastr.error('请先选择一个分组');\n            return;\n        }\n        try {\n            await addPromptsToGroup(selectedPrompts, selectedGroup, existingGroups);\n            $(`#${popupId}`).remove();\n            // 重新加载分组界面\n            setTimeout(() => {\n                $('#preset-manager-grouping-popup').remove();\n                showPromptGroupingUI();\n            }, 100);\n        }\n        catch (error) {\n            console.error('加入分组失败:', error);\n            toastr.error('加入分组失败，请重试');\n        }\n    });\n    // 延迟绑定事件，确保DOM完全加载\n    setTimeout(() => {\n        console.log('开始绑定分组选择事件');\n        console.log('现有分组列表:', existingGroups.map(g => ({ id: g.id, name: g.name, type: typeof g.id })));\n        // 直接绑定到弹窗内的元素\n        $(`#${popupId} .group-option`)\n            .off('click')\n            .on('click', function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            const groupId = $(this).data('group-id');\n            console.log('点击分组选项:', groupId, '类型:', typeof groupId, '元素:', this);\n            // 确保groupId是字符串类型\n            const groupIdStr = String(groupId);\n            console.log('转换后的groupId:', groupIdStr, '类型:', typeof groupIdStr);\n            const group = findGroupById(existingGroups, groupIdStr);\n            console.log('找到分组:', group);\n            if (group) {\n                // 清除之前的选择\n                $(`#${popupId} .group-option`).removeClass('selected-group');\n                // 标记当前选择\n                $(this).addClass('selected-group');\n                selectedGroup = group;\n                // 显示选择信息和确认按钮\n                const nameElement = $(`#${popupId} #selected-group-name`);\n                const infoElement = $(`#${popupId} #selected-group-info`);\n                const confirmButton = $(`#${popupId} #group-selection-confirm`);\n                console.log('更新UI元素:', {\n                    nameElement: nameElement.length,\n                    infoElement: infoElement.length,\n                    confirmButton: confirmButton.length,\n                });\n                nameElement.text(group.name);\n                infoElement.show();\n                confirmButton.show();\n                console.log('已选择分组:', group.name, 'UI已更新');\n            }\n            else {\n                console.error('未找到分组:', groupId);\n                toastr.error('未找到选中的分组');\n            }\n        });\n        console.log('分组选择事件绑定完成，找到元素数量:', $(`#${popupId} .group-option`).length);\n    }, 100);\n    // 添加调试信息\n    console.log('分组选择弹窗已创建，分组数量:', existingGroups.length);\n    console.log('确认按钮元素:', $('#group-selection-confirm').length);\n    console.log('选择信息元素:', $('#selected-group-info').length);\n}\n// 生成分组列表HTML\nfunction generateGroupsListHtml(groups, level) {\n    let html = '';\n    groups.forEach(group => {\n        const hasContent = group.promptIds.length > 0 || group.subGroups.length > 0;\n        if (hasContent) {\n            html += `\n        <div class=\"group-option\" data-group-id=\"${group.id}\" \n             style=\"padding: 12px; margin: 8px 0; border: 1px solid #e0e0e0; border-radius: 8px; cursor: pointer; background-color: #f9f9f9; transition: all 0.2s ease; margin-left: ${level * 20}px; user-select: none;\"\n             onmouseover=\"this.style.backgroundColor='#e8f5e8'; this.style.borderColor='#4CAF50';\"\n             onmouseout=\"this.style.backgroundColor='#f9f9f9'; this.style.borderColor='#e0e0e0';\">\n          <div style=\"font-weight: bold; color: #333; font-size: 14px; margin-bottom: 4px;\">\n            ${$('<div/>').text(group.name).html()}\n          </div>\n          <div style=\"font-size: 12px; color: #666; display: flex; gap: 12px;\">\n            <span>📄 条目: ${group.promptIds.length}</span>\n            <span>📁 子分组: ${group.subGroups.length}</span>\n          </div>\n        </div>\n      `;\n        }\n        // 递归处理子分组\n        if (group.subGroups.length > 0) {\n            html += generateGroupsListHtml(group.subGroups, level + 1);\n        }\n    });\n    return html;\n}\n// 将条目加入指定分组\nasync function addPromptsToGroup(selectedPrompts, targetGroup, existingGroups) {\n    // 检查条目是否已经在目标分组中\n    const alreadyInGroup = selectedPrompts.filter(promptId => targetGroup.promptIds.includes(promptId));\n    if (alreadyInGroup.length > 0) {\n        toastr.warning(`有 ${alreadyInGroup.length} 个条目已在该分组中，将跳过`);\n    }\n    // 将条目添加到目标分组\n    const newPrompts = selectedPrompts.filter(promptId => !targetGroup.promptIds.includes(promptId));\n    targetGroup.promptIds.push(...newPrompts);\n    // 更新UI\n    newPrompts.forEach(promptId => {\n        const item = $(`.prompt-item[data-prompt-id=\"${promptId}\"]`);\n        item.css('background-color', '#e8f5e8');\n        // 更新或添加分组标签\n        const existingTag = item.find('.group-tag');\n        const groupPath = getGroupPath(targetGroup, existingGroups);\n        if (existingTag.length) {\n            existingTag.text(groupPath);\n        }\n        else {\n            item\n                .find('.prompt-text')\n                .append(`<div style=\"color: #666; font-size: 12px; margin-top: 4px; word-wrap: break-word; overflow-wrap: break-word;\">📁 ${groupPath}</div>`);\n            item.append(`<span class=\"group-tag\" style=\"background-color: #4CAF50; color: white; padding: 2px 8px; border-radius: 12px; font-size: 11px; margin-left: 8px; flex-shrink: 0; align-self: flex-start; margin-top: 2px;\">已分组</span>`);\n        }\n    });\n    // 保存分组配置\n    const currentPresetName = TavernHelper.getLoadedPresetName();\n    savePresetGrouping(currentPresetName, existingGroups);\n    // 立即应用分组到DOM\n    applyGroupingToDOM(existingGroups);\n    // 延迟恢复以确保DOM更新完成\n    setTimeout(() => {\n        restoreGroupingImmediate();\n    }, 100);\n    toastr.success(`已将 ${newPrompts.length} 个条目加入分组 \"${getGroupPath(targetGroup, existingGroups)}\"，已立即应用`);\n}\n// 将条目从分组中移除\nasync function removePromptsFromGroups(selectedPrompts, existingGroups) {\n    selectedPrompts.forEach(promptId => {\n        const group = findPromptInGroups(existingGroups, promptId);\n        if (group) {\n            // 从分组中移除条目\n            const index = group.promptIds.indexOf(promptId);\n            if (index > -1) {\n                group.promptIds.splice(index, 1);\n            }\n            // 更新UI\n            const item = $(`.prompt-item[data-prompt-id=\"${promptId}\"]`);\n            item.css('background-color', '#fff');\n            item.find('.group-tag').remove();\n            item.find('.prompt-text div:last-child').remove(); // 移除分组路径显示\n        }\n    });\n    // 保存分组配置\n    const currentPresetName = TavernHelper.getLoadedPresetName();\n    savePresetGrouping(currentPresetName, existingGroups);\n    // 立即应用分组到DOM\n    applyGroupingToDOM(existingGroups);\n    // 延迟恢复以确保DOM更新完成\n    setTimeout(() => {\n        restoreGroupingImmediate();\n    }, 100);\n    toastr.success(`已将 ${selectedPrompts.length} 个条目移出分组，已立即应用`);\n}\n// 显示解散分组弹窗\nasync function showDissolveGroupPopup(existingGroups) {\n    const popupId = 'dissolve-group-popup';\n    $(`#${popupId}`).remove();\n    const groupsHtml = existingGroups\n        .map(group => `\n    <div class=\"group-selection-item\" style=\"display: flex; align-items: center; padding: 10px; border: 1px solid #e0e0e0; margin: 5px 0; border-radius: 6px; cursor: pointer; background-color: #fff;\">\n      <input type=\"checkbox\" class=\"group-checkbox\" data-group-name=\"${$('<div/>').text(group.name).html()}\" style=\"margin-right: 12px; transform: scale(1.3);\">\n      <div style=\"flex: 1;\">\n        <div style=\"font-weight: bold; color: #333; font-size: 14px;\">${$('<div/>').text(group.name).html()}</div>\n        <div style=\"font-size: 12px; color: #666; margin-top: 2px;\">包含 ${group.promptIds.length} 个条目</div>\n      </div>\n    </div>\n  `)\n        .join('');\n    const popupHtml = `\n    <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10002; display: flex; align-items: center; justify-content: center;\">\n      <div class=\"group-selection-popup-content\" style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 500px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 70vh;\">\n        <h4 style=\"margin-top:0; color:#6a4226; text-align: center; border-bottom: 2px solid #f0d8b6; padding-bottom: 10px;\">选择要解散的分组</h4>\n        \n        <div style=\"margin: 15px 0; display: flex; gap: 8px; flex-wrap: wrap;\">\n          <button id=\"select-all-groups-btn\" style=\"padding: 6px 12px; background-color:#2196F3; border:none; border-radius:6px; color:#fff; cursor:pointer; font-size:13px;\">全选</button>\n          <button id=\"select-none-groups-btn\" style=\"padding: 6px 12px; background-color:#9E9E9E; border:none; border-radius:6px; color:#fff; cursor:pointer; font-size:13px;\">全不选</button>\n        </div>\n\n        <div style=\"flex: 1; min-height: 0; overflow-y: auto; border: 1px solid #f0e2d0; border-radius: 8px; padding: 12px; margin-bottom: 15px;\">\n          <div style=\"font-size: 13px; color: #666; margin-bottom: 12px;\">选择要解散的分组，解散后分组内的条目将变为独立条目</div>\n          <div id=\"groups-container\">\n            ${groupsHtml}\n          </div>\n        </div>\n\n        <div style=\"display: flex; justify-content: space-between; align-items: center; gap: 10px;\">\n          <div style=\"font-size: 12px; color: #666;\">⚠️ 解散操作不可撤销</div>\n          <div style=\"display: flex; gap: 8px;\">\n            <button id=\"group-selection-cancel\" style=\"padding: 10px 16px; background-color:#9E9E9E; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#fff; font-size: 14px;\">取消</button>\n            <button id=\"group-selection-confirm\" style=\"padding: 10px 16px; background-color:#ff9800; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#fff; font-size: 14px;\">解散选中</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n    $('body').append(popupHtml);\n    // 绑定事件\n    $('.group-selection-item').on('click', function (e) {\n        if (e.target.type === 'checkbox')\n            return;\n        const checkbox = $(this).find('.group-checkbox');\n        checkbox.prop('checked', !checkbox.prop('checked'));\n    });\n    $('#select-all-groups-btn').on('click', () => {\n        $('.group-checkbox').prop('checked', true);\n    });\n    $('#select-none-groups-btn').on('click', () => {\n        $('.group-checkbox').prop('checked', false);\n    });\n    $('#group-selection-cancel').on('click', () => {\n        $(`#${popupId}`).remove();\n    });\n    $('#group-selection-confirm').on('click', () => {\n        const selectedGroupNames = [];\n        $('.group-checkbox:checked').each(function () {\n            selectedGroupNames.push($(this).data('group-name'));\n        });\n        if (selectedGroupNames.length === 0) {\n            toastr.error('请选择要解散的分组');\n            return;\n        }\n        // 解散选中的分组\n        selectedGroupNames.forEach(groupName => {\n            const groupIndex = existingGroups.findIndex(g => g.name === groupName);\n            if (groupIndex > -1) {\n                const group = existingGroups[groupIndex];\n                // 更新UI - 移除分组标签和背景色\n                group.promptIds.forEach(promptId => {\n                    const item = $(`.prompt-item[data-prompt-id=\"${promptId}\"]`);\n                    item.css('background-color', '#fff');\n                    item.find('.group-tag').remove();\n                    // 清除分组路径显示\n                    const promptText = item.find('.prompt-text');\n                    if (promptText.length > 0) {\n                        const lastDiv = promptText.find('div:last-child');\n                        if (lastDiv.text().includes('📁')) {\n                            lastDiv.remove();\n                        }\n                    }\n                });\n                // 递归处理子分组\n                const processSubGroups = (subGroups) => {\n                    subGroups.forEach(subGroup => {\n                        subGroup.promptIds.forEach(promptId => {\n                            const item = $(`.prompt-item[data-prompt-id=\"${promptId}\"]`);\n                            item.css('background-color', '#fff');\n                            item.find('.group-tag').remove();\n                            const promptText = item.find('.prompt-text');\n                            if (promptText.length > 0) {\n                                const lastDiv = promptText.find('div:last-child');\n                                if (lastDiv.text().includes('📁')) {\n                                    lastDiv.remove();\n                                }\n                            }\n                        });\n                        if (subGroup.subGroups.length > 0) {\n                            processSubGroups(subGroup.subGroups);\n                        }\n                    });\n                };\n                if (group.subGroups.length > 0) {\n                    processSubGroups(group.subGroups);\n                }\n                existingGroups.splice(groupIndex, 1);\n            }\n        });\n        // 保存更新后的分组配置\n        const currentPresetName = TavernHelper.getLoadedPresetName();\n        const validGroups = existingGroups.filter(g => hasValidContent(g));\n        savePresetGrouping(currentPresetName, validGroups);\n        // 立即应用分组到DOM\n        applyGroupingToDOM(validGroups);\n        // 延迟恢复以确保DOM更新完成\n        setTimeout(() => {\n            restoreGroupingImmediate();\n        }, 100);\n        $(`#${popupId}`).remove();\n        toastr.success(`已解散 ${selectedGroupNames.length} 个分组`);\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/喵喵预设配置管理/条目分组功能.ts\n\n}");

/***/ }),

/***/ "./src/喵喵预设配置管理/正则绑定功能.ts":
/*!********************************!*\
  !*** ./src/喵喵预设配置管理/正则绑定功能.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   importRegexLogic: () => (/* binding */ importRegexLogic),\n/* harmony export */   showRegexBindingPopup: () => (/* binding */ showRegexBindingPopup),\n/* harmony export */   sortRegexes: () => (/* binding */ sortRegexes)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./辅助弹窗功能 */ \"./src/喵喵预设配置管理/辅助弹窗功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./配置存储和读取 */ \"./src/喵喵预设配置管理/配置存储和读取.ts\");\n\n\nasync function showRegexBindingPopup(configId) {\n    const popupId = 'preset-manager-regex-popup';\n    $(`#${popupId}`).remove();\n    try {\n        const allRegexes = await TavernHelper.getTavernRegexes({ scope: 'global' });\n        if (allRegexes.length === 0) {\n            toastr.info('没有可绑定的全局正则。');\n            return;\n        }\n        const configs = await (0,___WEBPACK_IMPORTED_MODULE_1__.getStoredConfigs)();\n        const currentConfig = configs[configId];\n        if (!currentConfig)\n            return;\n        const savedStates = new Map(currentConfig.regexStates?.map(r => [r.id, r.enabled]) ?? []);\n        const regexesHtml = allRegexes\n            .map((regex) => {\n            const isChecked = savedStates.has(regex.id) ? savedStates.get(regex.id) : regex.enabled;\n            const safeName = $('<div/>').text(regex.script_name).html();\n            return `\n                <div style=\"display: flex; justify-content: space-between; align-items: center; padding: 10px 5px; border-bottom: 1px solid #eee;\">\n                    <label for=\"regex-toggle-${regex.id}\" style=\"cursor: pointer; flex: 1; margin-right: 10px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;\" title=\"${safeName}\">${safeName}</label>\n                    <label class=\"pm-switch\">\n                       <input type=\"checkbox\" id=\"regex-toggle-${regex.id}\" data-id=\"${regex.id}\" ${isChecked ? 'checked' : ''}/>\n                       <span class=\"pm-slider\"></span>\n                    </label>\n                </div>\n            `;\n        })\n            .join('');\n        const popupHtml = `\n            <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10001; display: flex; align-items: center; justify-content: center;\">\n                <div style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 450px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 80vh;\">\n                    <h4 style=\"margin-top:0; color:#c62828; text-align: center;\">请选择绑定正则</h4>\n                    <div style=\"flex: 1; min-height: 0; overflow-y: auto; margin: 15px 0; border-top: 1px solid #f0e2d0; border-bottom: 1px solid #f0e2d0; padding: 5px 10px;\">\n                        ${regexesHtml}\n                    </div>\n                    <div style=\"text-align: right; display:flex; justify-content:flex-end; gap: 10px;\">\n                        <button id=\"regex-bind-clear\" style=\"padding: 8px 16px; background-color:#f5a8a0; border:none; border-radius:6px; cursor:pointer; color:#fff;\">清除绑定</button>\n                        <button id=\"regex-bind-cancel\" style=\"padding: 8px 16px; background-color:#e0e0e0; border:none; border-radius:6px; cursor:pointer; color:#333;\">取消</button>\n                        <button id=\"regex-bind-save\" style=\"padding: 8px 16px; background-color:#f4c78e; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#3a2c2c;\">保存</button>\n                    </div>\n                </div>\n            </div>\n        `;\n        $('body').append(popupHtml);\n        const mobileStyles = `<style>@media (max-width: 600px) { #${popupId} { align-items: flex-start !important; } #${popupId} > div { margin-top: 5vh; } }</style>`;\n        $(`#${popupId}`).append(mobileStyles);\n        $('#regex-bind-cancel').on('click', () => $(`#${popupId}`).remove());\n        $('#regex-bind-clear').on('click', async () => {\n            const configs = await (0,___WEBPACK_IMPORTED_MODULE_1__.getStoredConfigs)();\n            if (configs[configId] && configs[configId].regexStates) {\n                delete configs[configId].regexStates;\n                await (0,___WEBPACK_IMPORTED_MODULE_1__.setStoredConfigs)(configs);\n                toastr.success(`配置 \"${configs[configId].name}\" 的正则绑定已清除。`);\n            }\n            else {\n                toastr.info(`配置没有正则绑定。`);\n            }\n            $(`#${popupId}`).remove();\n            (0,___WEBPACK_IMPORTED_MODULE_1__.renderConfigsList)();\n        });\n        $('#regex-bind-save').on('click', async () => {\n            const newRegexStates = allRegexes.map((regex) => ({\n                id: regex.id,\n                enabled: $(`#regex-toggle-${regex.id}`).is(':checked'),\n            }));\n            const configs = await (0,___WEBPACK_IMPORTED_MODULE_1__.getStoredConfigs)();\n            if (!configs[configId])\n                return;\n            configs[configId].regexStates = newRegexStates;\n            await (0,___WEBPACK_IMPORTED_MODULE_1__.setStoredConfigs)(configs);\n            toastr.success(`配置 \"${configs[configId].name}\" 的正则绑定已保存。`);\n            $(`#${popupId}`).remove();\n            (0,___WEBPACK_IMPORTED_MODULE_1__.renderConfigsList)();\n            const currentPresetName = configs[configId].presetName;\n            if (!currentPresetName)\n                return;\n            const otherConfigIds = Object.keys(configs).filter(id => id !== configId && configs[id].presetName === currentPresetName);\n            if (otherConfigIds.length > 0) {\n                const confirmMessage = `是否要将此正则绑定应用到其他使用预设 \"${currentPresetName}\" 的 ${otherConfigIds.length} 个配置上？`;\n                const userChoice = await triggerSlash(`/popup okButton=\"应用\" cancelButton=\"取消\" result=true \"${confirmMessage}\"`);\n                if (userChoice === '1') {\n                    otherConfigIds.forEach(id => {\n                        configs[id].regexStates = newRegexStates;\n                    });\n                    await (0,___WEBPACK_IMPORTED_MODULE_1__.setStoredConfigs)(configs);\n                    toastr.success(`已成功将正则绑定应用到 ${otherConfigIds.length} 个同名预设配置上。`);\n                }\n            }\n        });\n    }\n    catch (error) {\n        console.error('打开正则绑定界面失败:', error);\n        toastr.error('无法加载全局正则列表。');\n    }\n}\nfunction sortRegexes(regexes) {\n    const getSortNumber = (name) => {\n        const match = name.trim().match(/^(?:\\[|【|\\(|（)?(\\d+)(?:\\]|】|\\)|）|\\.|-|_|\\s)?/);\n        if (match && match[1]) {\n            return parseInt(match[1], 10);\n        }\n        return Infinity;\n    };\n    return regexes.sort((a, b) => {\n        const numA = getSortNumber(a.script_name);\n        const numB = getSortNumber(b.script_name);\n        if (numA !== numB) {\n            return numA - numB;\n        }\n        return a.script_name.localeCompare(b.script_name);\n    });\n}\nasync function importRegexLogic(regexToImport) {\n    const currentRegexes = await TavernHelper.getTavernRegexes({ scope: 'global' });\n    let remainingRegexes = currentRegexes;\n    if (currentRegexes && currentRegexes.length > 0) {\n        remainingRegexes = await (0,___WEBPACK_IMPORTED_MODULE_0__.showRegexDeletionPopup)(currentRegexes);\n    }\n    const combinedRegexes = [...regexToImport, ...remainingRegexes];\n    const sortedRegexes = sortRegexes(combinedRegexes);\n    await TavernHelper.replaceTavernRegexes(sortedRegexes, { scope: 'global' });\n    toastr.success(`成功导入 ${regexToImport.length} 条正则，并重新排序。`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/喵喵预设配置管理/正则绑定功能.ts\n\n}");

/***/ }),

/***/ "./src/喵喵预设配置管理/界面创建和管理.ts":
/*!*********************************!*\
  !*** ./src/喵喵预设配置管理/界面创建和管理.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUI: () => (/* binding */ createUI),\n/* harmony export */   toggleUI: () => (/* binding */ toggleUI),\n/* harmony export */   updateConfigListCache: () => (/* binding */ updateConfigListCache)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./初始化和配置 */ \"./src/喵喵预设配置管理/初始化和配置.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./导入导出功能 */ \"./src/喵喵预设配置管理/导入导出功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./批量操作功能 */ \"./src/喵喵预设配置管理/批量操作功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./条目分组功能 */ \"./src/喵喵预设配置管理/条目分组功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./辅助弹窗功能 */ \"./src/喵喵预设配置管理/辅助弹窗功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./配置存储和读取 */ \"./src/喵喵预设配置管理/配置存储和读取.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./配置操作功能 */ \"./src/喵喵预设配置管理/配置操作功能.ts\");\n\n\n\n\n\n\n\nfunction createUI() {\n    if ($(`#${___WEBPACK_IMPORTED_MODULE_0__.UI_ID}`).length > 0) {\n        // UI已存在，只需重新绑定事件\n        bindUIEvents();\n        return;\n    }\n    const uiContainer = $(`\n        <div id=\"${___WEBPACK_IMPORTED_MODULE_0__.UI_ID}\">\n            <style>\n                #${___WEBPACK_IMPORTED_MODULE_0__.UI_ID}{display:none;position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);z-index:10000;background-color:#fff8f0;color:#3a2c2c;border:1px solid #e0c9a6;border-radius:16px;padding:20px;box-shadow:0 4px 25px rgba(120,90,60,.25);width:90%;max-width:550px;max-height:80vh;font-family:'Segoe UI',sans-serif;display:flex;flex-direction:column}#${___WEBPACK_IMPORTED_MODULE_0__.UI_ID} h4{margin-top:0;border-bottom:2px solid #f0d8b6;padding-bottom:10px;color:#6a4226}#${___WEBPACK_IMPORTED_MODULE_0__.UI_ID} h5{margin:8px 0;color:#7a5235}#${___WEBPACK_IMPORTED_MODULE_0__.UI_ID} button{transition:all .2s ease}#${___WEBPACK_IMPORTED_MODULE_0__.UI_ID} button:hover{opacity:.85}#${___WEBPACK_IMPORTED_MODULE_0__.UI_ID} #preset-manager-list-section{flex:1;overflow-y:auto}@media (max-width:600px){#${___WEBPACK_IMPORTED_MODULE_0__.UI_ID}{top:0;left:0;transform:none;width:100%;height:100vh;max-width:none;max-height:none;border-radius:0;padding:10px;box-shadow:none;display:flex;flex-direction:column}#${___WEBPACK_IMPORTED_MODULE_0__.UI_ID} h4{font-size:18px;text-align:center;padding:12px 0;margin:0;border-bottom:2px solid #f0d8b6}#${___WEBPACK_IMPORTED_MODULE_0__.UI_ID} #preset-manager-close{top:10px;right:10px;font-size:28px}#${___WEBPACK_IMPORTED_MODULE_0__.UI_ID} #preset-manager-save-section{flex-wrap:wrap}#${___WEBPACK_IMPORTED_MODULE_0__.UI_ID} #preset-manager-name-input{width:100%;margin-left:0;margin-bottom:10px}}\n                .pm-switch{position:relative;display:inline-block;width:40px;height:20px;flex-shrink:0}.pm-switch input{opacity:0;width:0;height:0}.pm-slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;transition:.4s;border-radius:20px}.pm-slider:before{position:absolute;content:\"\";height:16px;width:16px;left:2px;bottom:2px;background-color:#fff;transition:.4s;border-radius:50%}input:checked+.pm-slider{background-color:#4CAF50}input:checked+.pm-slider:before{transform:translateX(20px)}\n                #preset-manager-tips-section { margin-top: 15px; padding: 10px; background-color: #f9f3ea; border-radius: 8px; font-size: 12px; color: #7a5235; text-align: center; flex-shrink: 0; }\n                .pm-config-group summary { cursor: pointer; padding: 8px; background-color: #f7f0e4; border-radius: 6px; margin-top: 5px; font-weight: bold; } .pm-config-group summary:hover { background-color: #f0e2d0; } .pm-config-count { color: #888; font-weight: normal; margin-left: 5px; } .pm-config-sublist { list-style: none; padding-left: 15px; border-left: 2px solid #f0e2d0; margin-left: 8px; }\n                .pm-actions-container { display: flex; align-items: center; gap: 5px; justify-content: flex-end; }\n                .pm-actions-container > button, .pm-more-btn-wrapper > button { flex-shrink: 0; padding: 6px 12px; font-size: 13px; font-weight: 500; border-radius: 6px; cursor: pointer; border: none; }\n                .pm-more-btn-wrapper { position: relative; }\n                .pm-submenu { display: none; position: absolute; right: 0; top: calc(100% + 5px); background-color: #fff; border: 1px solid #e0c9a6; border-radius: 8px; box-shadow: 0 3px 15px rgba(120,90,60,.15); z-index: 10003; padding: 5px; min-width: 100px; }\n                .pm-submenu button { display: block; width: 100%; text-align: left; padding: 8px 12px; border: none; background: none; font-size: 13px; border-radius: 4px; color: #3a2c2c; cursor: pointer; }\n                .pm-submenu button:hover { background-color: #f0e2d0; }\n            </style>\n\n            <h4>喵喵预设配置管理by小n</h4>\n            <button id=\"preset-manager-close\" style=\"position:absolute; top:12px; right:16px; background:none; border:none; color:#9a6b4f; font-size:24px; cursor:pointer;\">&times;</button>\n            \n            <div id=\"preset-manager-save-section\" style=\"margin-bottom: 20px; margin-top:15px;\">\n                <div style=\"display:flex; flex-wrap: wrap; align-items:center;\">\n                    <label for=\"preset-manager-name-input\" style=\"font-weight:bold; flex-shrink:0;\">配置名称:</label>\n                    <input type=\"text\" id=\"preset-manager-name-input\" placeholder=\"例如：仅破限\" style=\"flex:1; min-width: 100px; margin-left: 10px; background-color: #fff; border: 1px solid #d4b58b; color:#3a2c2c; padding: 6px 8px; border-radius: 6px; font-size:14px;\" />\n                    <button id=\"preset-manager-save-btn\" style=\"margin-left: 10px; padding:6px 12px; background-color:#f4c78e; border:none; border-radius:6px; color:#3a2c2c; cursor:pointer; font-weight:bold;\">保存</button>\n                </div>\n                <div style=\"margin-top: 10px; display:flex; align-items:center; padding-left: 5px;\">\n                   <label for=\"preset-manager-bind-char\" style=\"cursor:pointer;\">绑定到当前角色</label>\n                   <label class=\"pm-switch\" style=\"margin-left: auto;\">\n                      <input type=\"checkbox\" id=\"preset-manager-bind-char\"/>\n                      <span class=\"pm-slider\"></span>\n                   </label>\n                </div>\n                <!-- 分割线 -->\n                <hr style=\"margin: 15px 0; border: none; border-top: 1px solid #e0c9a6; opacity: 0.6;\">\n                <div style=\"display:flex; flex-wrap: wrap; gap: 10px; align-items:center;\">\n                    <button id=\"preset-manager-help-btn\" style=\"padding:6px 12px; background-color:#bcaaa4; border:none; border-radius:6px; color:#3a2c2c; cursor:pointer; font-weight:bold;\">使用说明</button>\n                    <button id=\"preset-manager-import-btn\" style=\"padding:6px 12px; background-color:#a5d6f9; border:none; border-radius:6px; color:#3a2c2c; cursor:pointer; font-weight:bold;\">导入</button>\n                    <button id=\"preset-manager-batch-export-btn\" style=\"padding:6px 12px; background-color:#81c784; border:none; border-radius:6px; color:#3a2c2c; cursor:pointer; font-weight:bold;\">批量导出</button>\n                    <button id=\"preset-manager-batch-delete-btn\" style=\"padding:6px 12px; background-color:#ef9a9a; border:none; border-radius:6px; color:#fff; cursor:pointer; font-weight:bold;\">批量删除</button>\n                    <button id=\"preset-manager-grouping-btn\" style=\"padding:6px 12px; background-color:#9c27b0; border:none; border-radius:6px; color:#fff; cursor:pointer; font-weight:bold;\">预设编辑器</button>\n                </div>\n            </div>\n\n            <div id=\"preset-manager-list-section\">\n                <h5>已保存的配置:</h5>\n                <ul id=\"preset-manager-list\" style=\"list-style:none; padding:0; margin:0;\"></ul>\n            </div>\n\n            <div id=\"preset-manager-tips-section\"></div>\n        </div>\n    `);\n    $('body').append(uiContainer);\n    $('body').append('<input type=\"file\" id=\"preset-manager-import-file\" accept=\".json\" style=\"display:none;\">');\n    $(`#${___WEBPACK_IMPORTED_MODULE_0__.UI_ID}`).hide();\n    // 绑定事件处理器\n    bindUIEvents();\n}\nfunction bindUIEvents() {\n    console.log('🔗 开始绑定UI事件...');\n    // 先解绑所有事件，避免重复绑定\n    $('#preset-manager-close').off('click');\n    $('#preset-manager-help-btn').off('click');\n    $('#preset-manager-save-btn').off('click');\n    $('#preset-manager-import-btn').off('click');\n    $('#preset-manager-batch-export-btn').off('click');\n    $('#preset-manager-batch-delete-btn').off('click');\n    $('#preset-manager-grouping-btn').off('click');\n    $('#preset-manager-import-file').off('change');\n    $('#preset-manager-close').on('click', () => {\n        console.log('🖱️ 关闭按钮被点击');\n        toggleUI();\n    });\n    $('#preset-manager-help-btn').on('click', () => {\n        console.log('🖱️ 帮助按钮被点击');\n        (0,___WEBPACK_IMPORTED_MODULE_4__.showHelpPopup)();\n    });\n    $('#preset-manager-save-btn').on('click', () => {\n        console.log('🖱️ 保存按钮被点击');\n        (0,___WEBPACK_IMPORTED_MODULE_6__.saveCurrentConfig)();\n    });\n    $('#preset-manager-import-btn').on('click', () => {\n        console.log('🖱️ 导入按钮被点击');\n        $('#preset-manager-import-file').click();\n    });\n    $('#preset-manager-batch-export-btn').on('click', () => {\n        console.log('🖱️ 批量导出按钮被点击');\n        (0,___WEBPACK_IMPORTED_MODULE_2__.showBatchExportPopup)();\n    });\n    $('#preset-manager-batch-delete-btn').on('click', () => {\n        console.log('🖱️ 批量删除按钮被点击');\n        (0,___WEBPACK_IMPORTED_MODULE_2__.showBatchDeletePopup)();\n    });\n    $('#preset-manager-grouping-btn').on('click', () => {\n        console.log('🖱️ 条目分组按钮被点击');\n        (0,___WEBPACK_IMPORTED_MODULE_3__.showPromptGroupingUI)();\n    });\n    $('#preset-manager-import-file').on('change', event => {\n        console.log('🖱️ 文件选择发生变化');\n        (0,___WEBPACK_IMPORTED_MODULE_1__.handleFileImport)(event);\n    });\n    console.log('✅ UI事件绑定完成');\n}\n// 缓存配置列表，避免重复渲染\nlet configListCache = null;\nlet lastConfigUpdateTime = 0;\nconst CACHE_DURATION = 5000; // 5秒缓存\nfunction toggleUI() {\n    const ui = $(`#${___WEBPACK_IMPORTED_MODULE_0__.UI_ID}`);\n    if (ui.is(':visible')) {\n        ui.fadeOut(200); // 减少动画时间\n    }\n    else {\n        // 检查缓存是否有效\n        const now = Date.now();\n        if (!configListCache || now - lastConfigUpdateTime > CACHE_DURATION) {\n            (0,___WEBPACK_IMPORTED_MODULE_5__.renderConfigsList)();\n            lastConfigUpdateTime = now;\n        }\n        else {\n            // 使用缓存的配置列表\n            $('#preset-manager-list').html(configListCache);\n        }\n        const randomTip = ___WEBPACK_IMPORTED_MODULE_0__.TIPS[Math.floor(Math.random() * ___WEBPACK_IMPORTED_MODULE_0__.TIPS.length)];\n        $('#preset-manager-tips-section').text('小贴士：' + randomTip);\n        ui.fadeIn(200); // 减少动画时间\n    }\n}\n// 更新缓存\nfunction updateConfigListCache() {\n    configListCache = $('#preset-manager-list').html();\n    lastConfigUpdateTime = Date.now();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/喵喵预设配置管理/界面创建和管理.ts\n\n}");

/***/ }),

/***/ "./src/喵喵预设配置管理/角色绑定功能.ts":
/*!********************************!*\
  !*** ./src/喵喵预设配置管理/角色绑定功能.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onChatChanged: () => (/* binding */ onChatChanged)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./初始化和配置 */ \"./src/喵喵预设配置管理/初始化和配置.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./配置存储和读取 */ \"./src/喵喵预设配置管理/配置存储和读取.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./配置操作功能 */ \"./src/喵喵预设配置管理/配置操作功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./条目分组功能 */ \"./src/喵喵预设配置管理/条目分组功能.ts\");\n\n\n\n\nasync function onChatChanged() {\n    try {\n        await new Promise(resolve => setTimeout(resolve, 250));\n        const charData = await TavernHelper.getCharData('current');\n        if (!charData || !charData.avatar || charData.avatar === ___WEBPACK_IMPORTED_MODULE_0__.lastProcessedCharAvatar) {\n            if (!charData || !charData.avatar)\n                (0,___WEBPACK_IMPORTED_MODULE_0__.setLastProcessedCharAvatar)(null);\n            return;\n        }\n        (0,___WEBPACK_IMPORTED_MODULE_0__.setLastProcessedCharAvatar)(charData.avatar);\n        const configs = await (0,___WEBPACK_IMPORTED_MODULE_1__.getStoredConfigs)();\n        const boundConfigs = Object.values(configs).filter(config => config.boundCharAvatar === charData.avatar);\n        if (boundConfigs.length === 0)\n            return;\n        let configIdToLoad = null;\n        if (boundConfigs.length === 1) {\n            const singleConfig = boundConfigs[0];\n            const popupText = `角色 \"${charData.name}\" 拥有绑定的配置 \"${singleConfig.name}\"。是否要加载此配置？`;\n            const userChoice = await triggerSlash(`/popup okButton=\"加载\" cancelButton=\"取消\" result=true \"${popupText}\"`);\n            if (userChoice === '1')\n                configIdToLoad = singleConfig.id;\n        }\n        else {\n            const { showConfigSelectionPopup } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./辅助弹窗功能 */ \"./src/喵喵预设配置管理/辅助弹窗功能.ts\"));\n            configIdToLoad = await showConfigSelectionPopup(boundConfigs, charData.name);\n        }\n        if (configIdToLoad) {\n            await (0,___WEBPACK_IMPORTED_MODULE_2__.loadConfig)(configIdToLoad, false);\n            // 角色切换后触发分组恢复\n            setTimeout(() => {\n                (0,___WEBPACK_IMPORTED_MODULE_3__.triggerGroupingRestore)();\n            }, 800);\n        }\n    }\n    catch (error) {\n        console.error('检查绑定配置时出错:', error);\n        toastr.error('检查角色绑定配置时出错。');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMv5Za15Za16aKE6K6+6YWN572u566h55CGL+inkuiJsue7keWumuWKn+iDvS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUErRTtBQUNsQztBQUNQO0FBQ1k7QUFFM0MsS0FBSyxVQUFVLGFBQWE7SUFDakMsSUFBSSxDQUFDO1FBQ0gsTUFBTSxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUN2RCxNQUFNLFFBQVEsR0FBRyxNQUFNLFlBQVksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFM0QsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLElBQUksUUFBUSxDQUFDLE1BQU0sS0FBSyxzREFBdUIsRUFBRSxDQUFDO1lBQ2pGLElBQUksQ0FBQyxRQUFRLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTTtnQkFBRSw2REFBMEIsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNwRSxPQUFPO1FBQ1QsQ0FBQztRQUVELDZEQUEwQixDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUU1QyxNQUFNLE9BQU8sR0FBRyxNQUFNLG1EQUFnQixFQUFFLENBQUM7UUFDekMsTUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsZUFBZSxLQUFLLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUV6RyxJQUFJLFlBQVksQ0FBQyxNQUFNLEtBQUssQ0FBQztZQUFFLE9BQU87UUFFdEMsSUFBSSxjQUFjLEdBQWtCLElBQUksQ0FBQztRQUV6QyxJQUFJLFlBQVksQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDOUIsTUFBTSxZQUFZLEdBQUcsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3JDLE1BQU0sU0FBUyxHQUFHLE9BQU8sUUFBUSxDQUFDLElBQUksY0FBYyxZQUFZLENBQUMsSUFBSSxhQUFhLENBQUM7WUFDbkYsTUFBTSxVQUFVLEdBQUcsTUFBTSxZQUFZLENBQUMsdURBQXVELFNBQVMsR0FBRyxDQUFDLENBQUM7WUFDM0csSUFBSSxVQUFVLEtBQUssR0FBRztnQkFBRSxjQUFjLEdBQUcsWUFBWSxDQUFDLEVBQUUsQ0FBQztRQUMzRCxDQUFDO2FBQU0sQ0FBQztZQUNOLE1BQU0sRUFBRSx3QkFBd0IsRUFBRSxHQUFHLE1BQU0sZ0lBQWtCLENBQUM7WUFDOUQsY0FBYyxHQUFHLE1BQU0sd0JBQXdCLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvRSxDQUFDO1FBRUQsSUFBSSxjQUFjLEVBQUUsQ0FBQztZQUNuQixNQUFNLDZDQUFVLENBQUMsY0FBYyxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ3hDLGNBQWM7WUFDZCxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUNkLHlEQUFzQixFQUFFLENBQUM7WUFDM0IsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ1YsQ0FBQztJQUNILENBQUM7SUFBQyxPQUFPLEtBQUssRUFBRSxDQUFDO1FBQ2YsT0FBTyxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDbkMsTUFBTSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUMvQixDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3RhdmVybl9oZWxwZXJfdGVtcGxhdGUvLi9zcmMv5Za15Za16aKE6K6+6YWN572u566h55CGL+inkuiJsue7keWumuWKn+iDvS50cz8iXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbGFzdFByb2Nlc3NlZENoYXJBdmF0YXIsIHNldExhc3RQcm9jZXNzZWRDaGFyQXZhdGFyIH0gZnJvbSAnLi/liJ3lp4vljJblkozphY3nva4nO1xuaW1wb3J0IHsgZ2V0U3RvcmVkQ29uZmlncyB9IGZyb20gJy4v6YWN572u5a2Y5YKo5ZKM6K+75Y+WJztcbmltcG9ydCB7IGxvYWRDb25maWcgfSBmcm9tICcuL+mFjee9ruaTjeS9nOWKn+iDvSc7XG5pbXBvcnQgeyB0cmlnZ2VyR3JvdXBpbmdSZXN0b3JlIH0gZnJvbSAnLi/mnaHnm67liIbnu4Tlip/og70nO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gb25DaGF0Q2hhbmdlZCgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMjUwKSk7XG4gICAgY29uc3QgY2hhckRhdGEgPSBhd2FpdCBUYXZlcm5IZWxwZXIuZ2V0Q2hhckRhdGEoJ2N1cnJlbnQnKTtcblxuICAgIGlmICghY2hhckRhdGEgfHwgIWNoYXJEYXRhLmF2YXRhciB8fCBjaGFyRGF0YS5hdmF0YXIgPT09IGxhc3RQcm9jZXNzZWRDaGFyQXZhdGFyKSB7XG4gICAgICBpZiAoIWNoYXJEYXRhIHx8ICFjaGFyRGF0YS5hdmF0YXIpIHNldExhc3RQcm9jZXNzZWRDaGFyQXZhdGFyKG51bGwpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHNldExhc3RQcm9jZXNzZWRDaGFyQXZhdGFyKGNoYXJEYXRhLmF2YXRhcik7XG5cbiAgICBjb25zdCBjb25maWdzID0gYXdhaXQgZ2V0U3RvcmVkQ29uZmlncygpO1xuICAgIGNvbnN0IGJvdW5kQ29uZmlncyA9IE9iamVjdC52YWx1ZXMoY29uZmlncykuZmlsdGVyKGNvbmZpZyA9PiBjb25maWcuYm91bmRDaGFyQXZhdGFyID09PSBjaGFyRGF0YS5hdmF0YXIpO1xuXG4gICAgaWYgKGJvdW5kQ29uZmlncy5sZW5ndGggPT09IDApIHJldHVybjtcblxuICAgIGxldCBjb25maWdJZFRvTG9hZDogc3RyaW5nIHwgbnVsbCA9IG51bGw7XG5cbiAgICBpZiAoYm91bmRDb25maWdzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgY29uc3Qgc2luZ2xlQ29uZmlnID0gYm91bmRDb25maWdzWzBdO1xuICAgICAgY29uc3QgcG9wdXBUZXh0ID0gYOinkuiJsiBcIiR7Y2hhckRhdGEubmFtZX1cIiDmi6XmnInnu5HlrprnmoTphY3nva4gXCIke3NpbmdsZUNvbmZpZy5uYW1lfVwi44CC5piv5ZCm6KaB5Yqg6L295q2k6YWN572u77yfYDtcbiAgICAgIGNvbnN0IHVzZXJDaG9pY2UgPSBhd2FpdCB0cmlnZ2VyU2xhc2goYC9wb3B1cCBva0J1dHRvbj1cIuWKoOi9vVwiIGNhbmNlbEJ1dHRvbj1cIuWPlua2iFwiIHJlc3VsdD10cnVlIFwiJHtwb3B1cFRleHR9XCJgKTtcbiAgICAgIGlmICh1c2VyQ2hvaWNlID09PSAnMScpIGNvbmZpZ0lkVG9Mb2FkID0gc2luZ2xlQ29uZmlnLmlkO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB7IHNob3dDb25maWdTZWxlY3Rpb25Qb3B1cCB9ID0gYXdhaXQgaW1wb3J0KCcuL+i+heWKqeW8ueeql+WKn+iDvScpO1xuICAgICAgY29uZmlnSWRUb0xvYWQgPSBhd2FpdCBzaG93Q29uZmlnU2VsZWN0aW9uUG9wdXAoYm91bmRDb25maWdzLCBjaGFyRGF0YS5uYW1lKTtcbiAgICB9XG5cbiAgICBpZiAoY29uZmlnSWRUb0xvYWQpIHtcbiAgICAgIGF3YWl0IGxvYWRDb25maWcoY29uZmlnSWRUb0xvYWQsIGZhbHNlKTtcbiAgICAgIC8vIOinkuiJsuWIh+aNouWQjuinpuWPkeWIhue7hOaBouWkjVxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRyaWdnZXJHcm91cGluZ1Jlc3RvcmUoKTtcbiAgICAgIH0sIDgwMCk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+ajgOafpee7keWumumFjee9ruaXtuWHuumUmTonLCBlcnJvcik7XG4gICAgdG9hc3RyLmVycm9yKCfmo4Dmn6Xop5LoibLnu5HlrprphY3nva7ml7blh7rplJnjgIInKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/喵喵预设配置管理/角色绑定功能.ts\n\n}");

/***/ }),

/***/ "./src/喵喵预设配置管理/辅助弹窗功能.ts":
/*!********************************!*\
  !*** ./src/喵喵预设配置管理/辅助弹窗功能.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   showBatchImportConfigSelectionPopup: () => (/* binding */ showBatchImportConfigSelectionPopup),\n/* harmony export */   showConfigSelectionPopup: () => (/* binding */ showConfigSelectionPopup),\n/* harmony export */   showHelpPopup: () => (/* binding */ showHelpPopup),\n/* harmony export */   showNewEntriesPopup: () => (/* binding */ showNewEntriesPopup),\n/* harmony export */   showRegexDeletionPopup: () => (/* binding */ showRegexDeletionPopup),\n/* harmony export */   showRegexExportSelectionPopup: () => (/* binding */ showRegexExportSelectionPopup),\n/* harmony export */   showRemarkPopup: () => (/* binding */ showRemarkPopup),\n/* harmony export */   showViewConfigPopup: () => (/* binding */ showViewConfigPopup)\n/* harmony export */ });\nfunction showHelpPopup() {\n    const popupId = 'preset-manager-help-popup';\n    $(`#${popupId}`).remove();\n    const helpContent = `\n        <div style=\"padding: 0 10px; font-size: 14px; line-height: 1.6;\">\n            <h5>主要功能</h5>\n            <ul style=\"list-style: none; padding: 0; margin: 0;\">\n                <li style=\"margin-bottom: 16px; padding: 12px; background-color: #f8f9fa; border-radius: 8px; border-left: 4px solid #4CAF50;\">\n                    <b>保存/更新配置:</b> 保存或更新当前预设中所有\"条目\"的启用/禁用状态。更新时可选择是否同步正则状态。\n                </li>\n                <li style=\"margin-bottom: 16px; padding: 12px; background-color: #f8f9fa; border-radius: 8px; border-left: 4px solid #2196F3;\">\n                    <b>加载配置:</b> 一键切换到指定的预设并将所有\"条目\"恢复到已保存的状态。\n                </li>\n                <li style=\"margin-bottom: 16px; padding: 12px; background-color: #f8f9fa; border-radius: 8px; border-left: 4px solid #FF9800;\">\n                    <b>查看配置:</b> 在\"更多\"菜单中点击\"查看\"，可详细查看配置的基本信息、条目状态统计、启用/禁用的具体条目列表和绑定的正则信息。\n                </li>\n                <li style=\"margin-bottom: 16px; padding: 12px; background-color: #f8f9fa; border-radius: 8px; border-left: 4px solid #9C27B0;\">\n                    <b>预设编辑器:</b> 强大的条目管理工具，支持创建、编辑、删除条目，以及多级分组管理。所有修改会实时保存到浏览器本地存储，分组设置与当前预设绑定。\n                </li>\n                <li style=\"margin-bottom: 16px; padding: 12px; background-color: #f8f9fa; border-radius: 8px; border-left: 4px solid #00BCD4;\">\n                    <b>导入/导出:</b> 以 .json 文件的形式分享单个配置。导出时可以为配置包添加备注，方便分享和识别。整合包可以附带预设本身、绑定的正则和分组配置。\n                </li>\n                <li style=\"margin-bottom: 16px; padding: 12px; background-color: #f8f9fa; border-radius: 8px; border-left: 4px solid #795548;\">\n                    <b>兼容世界书导入:</b> 支持直接导入通过酒馆世界书功能导出的、含有本插件数据的备份文件。\n                </li>\n                <li style=\"margin-bottom: 16px; padding: 12px; background-color: #f8f9fa; border-radius: 8px; border-left: 4px solid #607D8B;\">\n                    <b>批量导入/导出:</b> 一次性分享多个配置、关联的预设和正则脚本，方便备份和迁移。\n                </li>\n                <li style=\"margin-bottom: 16px; padding: 12px; background-color: #f8f9fa; border-radius: 8px; border-left: 4px solid #F44336;\">\n                    <b>批量删除:</b> 在主界面勾选多个配置进行一次性删除，方便清理。\n                </li>\n                <li style=\"margin-bottom: 16px; padding: 12px; background-color: #f8f9fa; border-radius: 8px; border-left: 4px solid #E91E63;\">\n                    <b>角色绑定:</b> 将配置与特定角色关联，切换到该角色时会自动提示加载。\n                </li>\n                <li style=\"margin-bottom: 16px; padding: 12px; background-color: #f8f9fa; border-radius: 8px; border-left: 4px solid #3F51B5;\">\n                    <b>正则绑定:</b> 将配置与一组全局正则的开关状态关联，加载配置时会自动应用。\n                </li>\n                <li style=\"margin-bottom: 16px; padding: 12px; background-color: #f8f9fa; border-radius: 8px; border-left: 4px solid #FF5722;\">\n                    <b>重命名与分组:</b> 您可以重命名任何配置，同名预设的配置会自动折叠在一个分组下，使界面更清晰。\n                </li>\n            </ul>\n        </div>\n    `;\n    const usageNotice = `\n        <div style=\"padding: 12px; font-size: 14px; line-height: 1.6; background-color: #f9f3ea; border-radius: 8px; margin-top: 15px;\">\n            <h5 style=\"color: #c62828; margin-top:0;\">使用须知</h5>\n            <p style=\"font-weight: bold; margin-bottom: 0;\">\n                本脚本免费在旅程、喵喵电波服务器发布，作者MoM小n，不允许某个虐男char预设与该作者另一个梦女预设使用，也不支持鉴抄MoM那位的预设使用。\n            </p>\n        </div>\n    `;\n    const popupHtml = `\n        <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10002; display: flex; align-items: center; justify-content: center;\">\n            <div style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 500px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 80vh;\">\n                <h4 style=\"margin-top:0; color:#6a4226; text-align: center; border-bottom: 2px solid #f0d8b6; padding-bottom: 10px; flex-shrink: 0;\">喵喵预设配置管理 - 使用说明</h4>\n                <div style=\"flex: 1; min-height: 0; overflow-y: auto; margin: 15px 0;\">\n                    ${helpContent}\n                </div>\n                ${usageNotice}\n                <div style=\"text-align: right; margin-top: 15px; flex-shrink: 0;\">\n                    <button id=\"help-popup-close\" style=\"padding: 8px 16px; background-color:#f4c78e; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#3a2c2c;\">关闭</button>\n                </div>\n            </div>\n        </div>\n    `;\n    $('body').append(popupHtml);\n    const mobileStyles = `<style>@media (max-width: 600px) { #${popupId} { align-items: flex-start !important; } #${popupId} > div { margin-top: 10vh; max-height: 75vh !important; } }</style>`;\n    $(`#${popupId}`).append(mobileStyles);\n    $('#help-popup-close').on('click', () => $(`#${popupId}`).remove());\n}\nfunction showRemarkPopup(remarkText) {\n    return new Promise(resolve => {\n        const popupId = 'preset-manager-remark-popup';\n        $(`#${popupId}`).remove();\n        // Simple Markdown to HTML converter\n        function convertMarkdown(text) {\n            const sanitize = (s) => $('<div/>').text(s).html();\n            const lines = text.split('\\n');\n            let html = '';\n            let inList = false;\n            const processInline = (line) => {\n                return sanitize(line)\n                    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n                    .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n                    .replace(/`(.*?)`/g, '<code>$1</code>');\n            };\n            for (const line of lines) {\n                const trimmedLine = line.trim();\n                const isList = trimmedLine.startsWith('* ') || trimmedLine.startsWith('- ');\n                if (inList && !isList && trimmedLine) {\n                    html += '</ul>';\n                    inList = false;\n                }\n                if (trimmedLine.startsWith('# ')) {\n                    html += `<h1>${processInline(trimmedLine.substring(2))}</h1>`;\n                }\n                else if (trimmedLine.startsWith('## ')) {\n                    html += `<h2>${processInline(trimmedLine.substring(3))}</h2>`;\n                }\n                else if (trimmedLine.startsWith('### ')) {\n                    html += `<h3>${processInline(trimmedLine.substring(4))}</h3>`;\n                }\n                else if (isList) {\n                    if (!inList) {\n                        html += '<ul>';\n                        inList = true;\n                    }\n                    html += `<li>${processInline(trimmedLine.substring(2))}</li>`;\n                }\n                else if (trimmedLine) {\n                    html += `<p>${processInline(line)}</p>`;\n                }\n            }\n            if (inList)\n                html += '</ul>';\n            return html;\n        }\n        const contentHtml = convertMarkdown(remarkText);\n        const popupHtml = `\n            <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10002; display: flex; align-items: center; justify-content: center;\">\n                <div style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 600px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 80vh;\">\n                    <style>\n                        #${popupId} .remark-content h1, #${popupId} .remark-content h2, #${popupId} .remark-content h3 { margin: 12px 0 6px 0; padding-bottom: 6px; border-bottom: 1px solid #e0c9a6; }\n                        #${popupId} .remark-content h1 { font-size: 1.4em; color: #6a4226; }\n                        #${popupId} .remark-content h2 { font-size: 1.2em; color: #7a5235; }\n                        #${popupId} .remark-content h3 { font-size: 1.1em; color: #7a5235; }\n                        #${popupId} .remark-content p { margin: 0 0 10px 0; }\n                        #${popupId} .remark-content ul { margin: 10px 0; padding-left: 25px; }\n                        #${popupId} .remark-content li { margin-bottom: 5px; }\n                        #${popupId} .remark-content code { background-color: #e0d8cd; padding: 2px 5px; border-radius: 4px; font-family: monospace; color: #3a2c2c; font-size: 0.9em; }\n                    </style>\n                    <h4 style=\"margin-top:0; color:#6a4226; text-align: center; border-bottom: 2px solid #f0d8b6; padding-bottom: 10px;\">导入备注</h4>\n                    <div class=\"remark-content\" style=\"flex: 1; min-height: 200px; overflow-y: auto; margin: 15px 0; background-color: #fdfaf5; border: 1px solid #f0e2d0; border-radius: 8px; padding: 15px; line-height: 1.6; word-wrap: break-word;\">\n                        ${contentHtml}\n                    </div>\n                    <div style=\"text-align: right;\">\n                        <button id=\"remark-popup-continue\" style=\"padding: 8px 16px; background-color:#f4c78e; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#3a2c2c;\">继续导入</button>\n                    </div>\n                </div>\n            </div>\n        `;\n        $('body').append(popupHtml);\n        const mobileStyles = `<style>@media (max-width: 600px) { #${popupId} { align-items: flex-start !important; } #${popupId} > div { margin-top: 5vh; max-height: 85vh !important; } }</style>`;\n        $(`#${popupId}`).append(mobileStyles);\n        $('#remark-popup-continue').on('click', () => {\n            $(`#${popupId}`).remove();\n            resolve(true);\n        });\n    });\n}\nfunction showNewEntriesPopup(newEntries, promptIdToNameMap) {\n    return new Promise(resolve => {\n        const popupId = 'preset-manager-new-entries-popup';\n        $(`#${popupId}`).remove();\n        const entriesHtml = newEntries\n            .map((entry, index) => {\n            const entryName = promptIdToNameMap.get(entry.id) || `未知条目 (ID: ${entry.id})`;\n            const isChecked = entry.enabled ? 'checked' : '';\n            const safeEntryName = $('<div/>').text(entryName).html();\n            return `\n                <div class=\"entry-item\" style=\"display: flex; justify-content: space-between; align-items: center; padding: 8px 0; border-bottom: 1px solid #eee;\">\n                    <label for=\"new-entry-toggle-${index}\" style=\"cursor: pointer; flex: 1; margin-right: 10px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;\" title=\"${safeEntryName}\">${safeEntryName}</label>\n                    <label class=\"pm-switch\">\n                       <input type=\"checkbox\" id=\"new-entry-toggle-${index}\" data-id=\"${entry.id}\" ${isChecked}/>\n                       <span class=\"pm-slider\"></span>\n                    </label>\n                </div>\n            `;\n        })\n            .join('');\n        const popupHtml = `\n            <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10001; display: flex; align-items: center; justify-content: center;\">\n                <div style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 450px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 90vh; box-sizing: border-box;\">\n                    <h4 style=\"margin-top:0; color:#6a4226; text-align: center;\">检测到新条目</h4>\n                    <p style=\"font-size: 14px; color: #6a4226; margin: 10px 0; flex-shrink: 0;\">请选择以下新增条目的默认启用状态(勾选为需要启用)：</p>\n                    <div style=\"flex: 1; min-height: 0; overflow-y: auto; margin-bottom: 20px; border-top: 1px solid #f0e2d0; border-bottom: 1px solid #f0e2d0; padding: 5px 10px;\">\n                        ${entriesHtml}\n                    </div>\n                    <div class=\"button-container\" style=\"text-align: right; margin-top: auto; flex-shrink: 0; display:flex; justify-content:flex-end;\">\n                        <button id=\"new-entries-cancel\" style=\"padding: 8px 16px; background-color:#e0e0e0; border:none; border-radius:6px; cursor:pointer; color:#333; margin-right: 10px;\">取消</button>\n                        <button id=\"new-entries-confirm\" style=\"padding: 8px 16px; background-color:#f4c78e; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#3a2c2c;\">确认</button>\n                    </div>\n                </div>\n            </div>\n        `;\n        $('body').append(popupHtml);\n        const mobileStyles = `<style>@media (max-width: 600px) {#${popupId} { align-items: flex-start !important; } #${popupId} > div{ margin-top: 5vh; width: 95% !important;max-width: none !important;height: auto !important;max-height: 85vh !important;border-radius: 12px !important;padding: 15px !important;}#${popupId} h4{font-size: 18px !important;margin-bottom: 10px !important;}#${popupId} p{font-size: 14px !important;margin: 5px 0 15px 0 !important;}#${popupId} .entry-item{padding: 10px 0 !important;}#${popupId} .button-container{flex-direction: row !important;gap: 10px !important;justify-content: flex-end;}#${popupId} .button-container button{width: auto !important;margin: 0 !important;flex-grow: 1;}}</style>`;\n        $(`#${popupId}`).append(mobileStyles);\n        $('#new-entries-confirm').on('click', () => {\n            const updatedEntries = newEntries.map((entry, index) => ({\n                ...entry,\n                enabled: $(`#new-entry-toggle-${index}`).is(':checked'),\n            }));\n            $(`#${popupId}`).remove();\n            resolve(updatedEntries);\n        });\n        $('#new-entries-cancel').on('click', () => {\n            $(`#${popupId}`).remove();\n            resolve(null);\n        });\n    });\n}\nfunction showConfigSelectionPopup(configs, charName) {\n    return new Promise(resolve => {\n        const popupId = 'preset-manager-config-selection-popup';\n        $(`#${popupId}`).remove();\n        const configsHtml = configs\n            .map((config, index) => {\n            const safeName = $('<div/>').text(config.name).html();\n            return `\n                <div class=\"config-item\" style=\"padding: 10px 5px; border-bottom: 1px solid #eee; cursor: pointer; border-radius: 4px; display: flex; align-items: center;\">\n                    <input type=\"radio\" id=\"config-select-${index}\" name=\"config-selection\" value=\"${config.id}\" style=\"margin-right: 10px; transform: scale(1.2);\">\n                    <label for=\"config-select-${index}\" style=\"cursor: pointer; width: 100%;\">${safeName}</label>\n                </div>\n            `;\n        })\n            .join('');\n        const popupHtml = `\n            <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10001; display: flex; align-items: center; justify-content: center;\">\n                <div style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 400px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 90vh;\">\n                    <h4 style=\"margin-top:0; color:#6a4226; text-align: center; border-bottom: 2px solid #f0d8b6; padding-bottom: 10px;\">选择配置</h4>\n                    <p style=\"font-size: 14px; color: #6a4226; margin: 15px 0; text-align: center;\">角色 \"${$('<div/>').text(charName).html()}\" 绑定了多个配置，请选择一个进行加载：</p>\n                    <div style=\"flex: 1; min-height: 0; overflow-y: auto; margin-bottom: 20px; padding: 5px;\">\n                        ${configsHtml}\n                    </div>\n                    <div style=\"text-align: right; display:flex; justify-content:flex-end; gap: 10px;\">\n                        <button id=\"config-select-cancel\" style=\"padding: 8px 16px; background-color:#e0e0e0; border:none; border-radius:6px; cursor:pointer; color:#333;\">取消</button>\n                        <button id=\"config-select-confirm\" style=\"padding: 8px 16px; background-color:#f4c78e; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#3a2c2c;\">加载</button>\n                    </div>\n                </div>\n            </div>\n        `;\n        $('body').append(popupHtml);\n        const mobileStyles = `<style> @media (max-width: 600px) { #${popupId} { align-items: flex-start !important; } #${popupId} > div { margin-top: 5vh; max-height: 85vh !important; } }</style>`;\n        $(`#${popupId}`).append(mobileStyles);\n        if (configs.length > 0)\n            $(`#config-select-0`).prop('checked', true);\n        $(`#${popupId} .config-item`).on('click', function () {\n            $(this).find('input[type=\"radio\"]').prop('checked', true);\n        });\n        $('#config-select-confirm').on('click', () => {\n            const selectedId = $('input[name=\"config-selection\"]:checked').val();\n            if (selectedId) {\n                $(`#${popupId}`).remove();\n                resolve(selectedId);\n            }\n            else {\n                toastr.warning('请选择一个配置。');\n            }\n        });\n        $('#config-select-cancel').on('click', () => {\n            $(`#${popupId}`).remove();\n            resolve(null);\n        });\n    });\n}\nfunction showRegexExportSelectionPopup(boundRegexes) {\n    return new Promise(resolve => {\n        const popupId = 'preset-manager-regex-export-popup';\n        $(`#${popupId}`).remove();\n        const regexesHtml = boundRegexes\n            .map(regex => {\n            const safeName = $('<div/>').text(regex.script_name).html();\n            return `\n                <div style=\"display: flex; justify-content: space-between; align-items: center; padding: 10px 5px; border-bottom: 1px solid #eee;\">\n                    <label for=\"regex-export-toggle-${regex.id}\" style=\"cursor: pointer; flex: 1; margin-right: 10px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;\" title=\"${safeName}\">${safeName}</label>\n                    <label class=\"pm-switch\">\n                       <input type=\"checkbox\" class=\"regex-export-checkbox\" id=\"regex-export-toggle-${regex.id}\" data-id=\"${regex.id}\" checked/>\n                       <span class=\"pm-slider\"></span>\n                    </label>\n                </div>\n            `;\n        })\n            .join('');\n        const popupHtml = `\n            <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10001; display: flex; align-items: center; justify-content: center;\">\n                <div style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 450px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 80vh;\">\n                    <h4 style=\"margin-top:0; color:#6a4226; text-align: center;\">选择要导出的正则</h4>\n                    <div style=\"margin: 10px 0; display: flex; justify-content: space-around;\">\n                       <button id=\"regex-export-select-all\" style=\"padding: 6px 12px; background-color:#a5d6f9; border:none; border-radius:6px; cursor:pointer;\">全选</button>\n                       <button id=\"regex-export-deselect-all\" style=\"padding: 6px 12px; background-color:#e0e0e0; border:none; border-radius:6px; cursor:pointer;\">全不选</button>\n                    </div>\n                    <div style=\"flex: 1; min-height: 0; overflow-y: auto; margin-bottom: 20px; border-top: 1px solid #f0e2d0; border-bottom: 1px solid #f0e2d0; padding: 5px 10px;\">\n                        ${regexesHtml}\n                    </div>\n                    <div style=\"text-align: right; display:flex; justify-content:flex-end; gap: 10px;\">\n                        <button id=\"regex-export-cancel\" style=\"padding: 8px 16px; background-color:#e0e0e0; border:none; border-radius:6px; cursor:pointer; color:#333;\">取消</button>\n                        <button id=\"regex-export-confirm\" style=\"padding: 8px 16px; background-color:#f4c78e; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#3a2c2c;\">确认导出</button>\n                    </div>\n                </div>\n            </div>\n        `;\n        $('body').append(popupHtml);\n        const mobileStyles = `<style>@media (max-width: 600px) { #${popupId} { align-items: flex-start !important; } #${popupId} > div { margin-top: 5vh; } }</style>`;\n        $(`#${popupId}`).append(mobileStyles);\n        $('#regex-export-select-all').on('click', () => $('.regex-export-checkbox').prop('checked', true));\n        $('#regex-export-deselect-all').on('click', () => $('.regex-export-checkbox').prop('checked', false));\n        $('#regex-export-cancel').on('click', () => {\n            $(`#${popupId}`).remove();\n            resolve(null);\n        });\n        $('#regex-export-confirm').on('click', () => {\n            const selectedIds = new Set();\n            $('.regex-export-checkbox:checked').each(function () {\n                selectedIds.add($(this).data('id'));\n            });\n            const selectedRegexes = boundRegexes.filter(r => selectedIds.has(r.id));\n            $(`#${popupId}`).remove();\n            resolve(selectedRegexes);\n        });\n    });\n}\nfunction showRegexDeletionPopup(existingRegexes) {\n    return new Promise(resolve => {\n        const popupId = 'preset-manager-regex-delete-popup';\n        $(`#${popupId}`).remove();\n        const regexesHtml = existingRegexes\n            .map(regex => {\n            const safeName = $('<div/>').text(regex.script_name).html();\n            return `\n                <div style=\"display: flex; align-items: center; padding: 10px 5px; border-bottom: 1px solid #eee;\">\n                    <input type=\"checkbox\" class=\"regex-delete-checkbox\" id=\"regex-delete-toggle-${regex.id}\" data-id=\"${regex.id}\" style=\"margin-right: 15px; transform: scale(1.3);\">\n                    <label for=\"regex-delete-toggle-${regex.id}\" style=\"cursor: pointer; flex: 1; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;\" title=\"${safeName}\">${safeName}</label>\n                </div>\n            `;\n        })\n            .join('');\n        const popupHtml = `\n            <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10002; display: flex; align-items: center; justify-content: center;\">\n                <div style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 450px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 80vh;\">\n                    <h4 style=\"margin-top:0; color:#c62828; text-align: center;\">删除已有正则 (可选)</h4>\n                    <p style=\"font-size: 13px; color: #777; text-align: center; margin-bottom: 15px;\">在导入新正则前，你可以选择删除一些不再需要的旧正则。</p>\n                    <div style=\"flex: 1; min-height: 0; overflow-y: auto; margin-bottom: 20px; border-top: 1px solid #f0e2d0; border-bottom: 1px solid #f0e2d0; padding: 5px 10px;\">\n                        ${regexesHtml}\n                    </div>\n                    <div style=\"text-align: right; display:flex; justify-content:flex-end; gap: 10px;\">\n                        <button id=\"regex-delete-skip\" style=\"padding: 8px 16px; background-color:#e0e0e0; border:none; border-radius:6px; cursor:pointer; color:#333;\">跳过并导入</button>\n                        <button id=\"regex-delete-confirm\" style=\"padding: 8px 16px; background-color:#f5a8a0; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#fff;\">删除选中并导入</button>\n                    </div>\n                </div>\n            </div>\n        `;\n        $('body').append(popupHtml);\n        const mobileStyles = `<style>@media (max-width: 600px) { #${popupId} { align-items: flex-start !important; } #${popupId} > div { margin-top: 5vh; } }</style>`;\n        $(`#${popupId}`).append(mobileStyles);\n        $('#regex-delete-skip').on('click', () => {\n            $(`#${popupId}`).remove();\n            resolve(existingRegexes);\n        });\n        $('#regex-delete-confirm').on('click', () => {\n            const idsToDelete = new Set();\n            $('.regex-delete-checkbox:checked').each(function () {\n                idsToDelete.add($(this).data('id'));\n            });\n            const remainingRegexes = existingRegexes.filter(r => !idsToDelete.has(r.id));\n            if (idsToDelete.size > 0) {\n                toastr.info(`已删除 ${idsToDelete.size} 条旧正则。`);\n            }\n            $(`#${popupId}`).remove();\n            resolve(remainingRegexes);\n        });\n    });\n}\nfunction showBatchImportConfigSelectionPopup(configsToImport) {\n    return new Promise(resolve => {\n        const popupId = 'preset-manager-batch-import-popup';\n        $(`#${popupId}`).remove();\n        const configsHtml = configsToImport\n            .map(config => {\n            const safeName = $('<div/>').text(config.name).html();\n            return `\n                <div style=\"padding: 8px 5px; border-bottom: 1px solid #eee; display: flex; align-items: center; gap: 10px;\">\n                    <input type=\"checkbox\" class=\"pm-batch-import-checkbox\" data-original-id=\"${config.id}\" checked style=\"transform: scale(1.2);\">\n                    <label style=\"font-weight: bold; flex-shrink: 0;\" title=\"${safeName}\">${safeName}</label>\n                    <input type=\"text\" class=\"pm-batch-import-newname\" value=\"${safeName}\" style=\"flex: 1; min-width: 100px; background-color: #fff; border: 1px solid #d4b58b; color:#3a2c2c; padding: 4px 6px; border-radius: 4px; font-size:13px;\">\n                </div>\n            `;\n        })\n            .join('');\n        const popupHtml = `\n             <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10001; display: flex; align-items: center; justify-content: center;\">\n                <div style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 500px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 80vh;\">\n                    <h4 style=\"margin-top:0; color:#6a4226; text-align: center;\">选择要导入的配置</h4>\n                    <p style=\"font-size: 13px; color: #777; text-align: center; margin-bottom: 15px;\">勾选要导入的配置，可修改导入后的名称。</p>\n                    <div style=\"flex: 1; min-height: 0; overflow-y: auto; margin-bottom: 20px; border-top: 1px solid #f0e2d0; border-bottom: 1px solid #f0e2d0; padding: 5px 10px;\">\n                        ${configsHtml}\n                    </div>\n                    <div style=\"text-align: right; display:flex; justify-content:flex-end; gap: 10px;\">\n                        <button id=\"batch-import-cancel\" style=\"padding: 8px 16px; background-color:#e0e0e0; border:none; border-radius:6px; cursor:pointer; color:#333;\">取消</button>\n                        <button id=\"batch-import-confirm\" style=\"padding: 8px 16px; background-color:#f4c78e; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#3a2c2c;\">导入选中项</button>\n                    </div>\n                </div>\n            </div>\n        `;\n        $('body').append(popupHtml);\n        const mobileStyles = `<style>\n            @media (max-width: 600px) { #${popupId} > div { margin-top: 600px; } }\n        </style>`;\n        $(`#${popupId}`).append(mobileStyles);\n        $('#batch-import-cancel').on('click', () => {\n            $(`#${popupId}`).remove();\n            resolve(null);\n        });\n        $('#batch-import-confirm').on('click', () => {\n            const choices = [];\n            let hasError = false;\n            $('#preset-manager-batch-import-popup .pm-batch-import-checkbox').each(function () {\n                const checkbox = $(this);\n                const newName = checkbox.siblings('.pm-batch-import-newname').val()?.toString().trim();\n                if (!newName && checkbox.is(':checked')) {\n                    toastr.error(`有已勾选的配置新名称为空。`);\n                    hasError = true;\n                    return false;\n                }\n                choices.push({\n                    originalId: checkbox.data('original-id'),\n                    newName: newName,\n                    import: checkbox.is(':checked'),\n                });\n            });\n            if (!hasError) {\n                $(`#${popupId}`).remove();\n                resolve(choices);\n            }\n        });\n    });\n}\n// 显示查看配置弹窗\nasync function showViewConfigPopup(configId) {\n    const { getStoredConfigs } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./配置存储和读取 */ \"./src/喵喵预设配置管理/配置存储和读取.ts\"));\n    const configs = await getStoredConfigs();\n    const configData = configs[configId];\n    if (!configData) {\n        toastr.error('配置不存在');\n        return;\n    }\n    // 获取所有正则信息，用于显示名称\n    let allRegexes = [];\n    try {\n        allRegexes = await TavernHelper.getTavernRegexes({ scope: 'global' });\n    }\n    catch (error) {\n        console.warn('获取正则信息失败:', error);\n    }\n    const popupId = 'preset-manager-view-config-popup';\n    $(`#${popupId}`).remove();\n    // 统计配置信息\n    const totalStates = configData.states.length;\n    const enabledStates = configData.states.filter((state) => state.enabled).length;\n    const disabledStates = totalStates - enabledStates;\n    // 分组显示状态\n    const enabledStatesHtml = configData.states\n        .filter((state) => state.enabled)\n        .map((state) => `<div style=\"padding: 4px 8px; margin: 2px; background-color: #e8f5e8; border-radius: 4px; font-size: 12px;\">${$('<div/>').text(state.name).html()}</div>`)\n        .join('');\n    const disabledStatesHtml = configData.states\n        .filter((state) => !state.enabled)\n        .map((state) => `<div style=\"padding: 4px 8px; margin: 2px; background-color: #ffebee; border-radius: 4px; font-size: 12px;\">${$('<div/>').text(state.name).html()}</div>`)\n        .join('');\n    // 正则绑定信息\n    const regexInfo = configData.regexStates && configData.regexStates.length > 0\n        ? `<div style=\"margin-top: 15px;\">\n         <h5 style=\"color: #6a4226; margin-bottom: 8px;\">绑定正则 (${configData.regexStates.length}个)</h5>\n         <div class=\"item-list\" style=\"max-height: 100px; overflow-y: auto; border: 1px solid #e0c9a6; border-radius: 4px; padding: 8px;\">\n           ${configData.regexStates\n            .map((regex) => {\n            // 从所有正则中查找对应的正则信息\n            const fullRegexInfo = allRegexes.find(r => r.id === regex.id);\n            const regexName = fullRegexInfo?.script_name ||\n                fullRegexInfo?.scriptName ||\n                regex.scriptName ||\n                regex.script_name ||\n                regex.name ||\n                `正则ID: ${regex.id}`;\n            return `<div style=\"padding: 4px 8px; margin: 2px; background-color: ${regex.enabled ? '#e3f2fd' : '#fafafa'}; border-radius: 4px; font-size: 12px;\">\n                ${$('<div/>').text(regexName).html()} ${regex.enabled ? '(启用)' : '(禁用)'}\n              </div>`;\n        })\n            .join('')}\n         </div>\n       </div>`\n        : '';\n    const popupHtml = `\n    <div id=\"${popupId}\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5); z-index: 10002; display: flex; align-items: center; justify-content: center;\">\n      <div style=\"background-color: #fff8f0; color: #3a2c2c; border-radius: 16px; padding: 20px; width: 90%; max-width: 600px; box-shadow: 0 4px 25px rgba(120,90,60,.25); display: flex; flex-direction: column; max-height: 80vh;\">\n        <h4 style=\"margin-top:0; color:#6a4226; text-align: center; border-bottom: 2px solid #f0d8b6; padding-bottom: 10px;\">查看配置详情</h4>\n        \n        <div style=\"flex: 1; min-height: 0; overflow-y: auto; margin: 15px 0;\">\n          <div style=\"margin-bottom: 15px;\">\n            <h5 style=\"color: #6a4226; margin-bottom: 8px;\">基本信息</h5>\n            <div style=\"background-color: #f9f3ea; padding: 10px; border-radius: 6px;\">\n              <div><strong>配置名称:</strong> ${$('<div/>').text(configData.name).html()}</div>\n              <div><strong>关联预设:</strong> ${$('<div/>').text(configData.presetName).html()}</div>\n              <div><strong>创建时间:</strong> ${new Date(configData.id).toLocaleString()}</div>\n              ${configData.boundCharName ? `<div><strong>绑定角色:</strong> <span style=\"color: #4CAF50;\">${$('<div/>').text(configData.boundCharName).html()}</span></div>` : ''}\n            </div>\n          </div>\n\n          <div style=\"margin-bottom: 15px;\">\n            <h5 style=\"color: #6a4226; margin-bottom: 8px;\">条目状态统计</h5>\n            <div class=\"stats-container\" style=\"display: flex; gap: 10px; margin-bottom: 10px;\">\n              <div class=\"stats-item\" style=\"background-color: #e8f5e8; padding: 8px; border-radius: 6px; flex: 1; text-align: center;\">\n                <div style=\"font-weight: bold; color: #2e7d32;\">启用</div>\n                <div style=\"font-size: 18px; font-weight: bold;\">${enabledStates}</div>\n              </div>\n              <div class=\"stats-item\" style=\"background-color: #ffebee; padding: 8px; border-radius: 6px; flex: 1; text-align: center;\">\n                <div style=\"font-weight: bold; color: #c62828;\">禁用</div>\n                <div style=\"font-size: 18px; font-weight: bold;\">${disabledStates}</div>\n              </div>\n              <div class=\"stats-item\" style=\"background-color: #f0f4f8; padding: 8px; border-radius: 6px; flex: 1; text-align: center;\">\n                <div style=\"font-weight: bold; color: #546e7a;\">总计</div>\n                <div style=\"font-size: 18px; font-weight: bold;\">${totalStates}</div>\n              </div>\n            </div>\n          </div>\n\n          ${enabledStates > 0\n        ? `\n          <div style=\"margin-bottom: 15px;\">\n            <h5 style=\"color: #6a4226; margin-bottom: 8px;\">启用的条目 (${enabledStates}个)</h5>\n            <div class=\"item-list\" style=\"max-height: 150px; overflow-y: auto; border: 1px solid #e0c9a6; border-radius: 4px; padding: 8px;\">\n              ${enabledStatesHtml}\n            </div>\n          </div>\n          `\n        : ''}\n\n          ${disabledStates > 0\n        ? `\n          <div style=\"margin-bottom: 15px;\">\n            <h5 style=\"color: #6a4226; margin-bottom: 8px;\">禁用的条目 (${disabledStates}个)</h5>\n            <div class=\"item-list\" style=\"max-height: 150px; overflow-y: auto; border: 1px solid #e0c9a6; border-radius: 4px; padding: 8px;\">\n              ${disabledStatesHtml}\n            </div>\n          </div>\n          `\n        : ''}\n\n          ${regexInfo}\n        </div>\n\n        <div style=\"text-align: right; margin-top: 15px; display: flex; gap: 10px; justify-content: flex-end;\">\n          <button id=\"view-config-load\" data-id=\"${configId}\" style=\"padding: 8px 16px; background-color:#4CAF50; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#fff;\">加载此配置</button>\n          <button id=\"view-config-close\" style=\"padding: 8px 16px; background-color:#f4c78e; border:none; border-radius:6px; cursor:pointer; font-weight:bold; color:#3a2c2c;\">关闭</button>\n        </div>\n      </div>\n    </div>\n  `;\n    $('body').append(popupHtml);\n    // 绑定事件\n    $('#view-config-close').on('click', () => {\n        $(`#${popupId}`).remove();\n    });\n    $('#view-config-load').on('click', async () => {\n        const configId = $('#view-config-load').data('id');\n        $(`#${popupId}`).remove();\n        const { loadConfig } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./配置操作功能 */ \"./src/喵喵预设配置管理/配置操作功能.ts\"));\n        await loadConfig(configId);\n    });\n    // 移动端样式\n    const mobileStyles = `<style>\n    @media (max-width: 600px) { \n      #${popupId} { \n        align-items: flex-start !important; \n        padding: 10px;\n      } \n      #${popupId} > div { \n        margin-top: 5vh; \n        max-height: 90vh !important; \n        width: 95% !important;\n        padding: 15px;\n        border-radius: 12px;\n      }\n      #${popupId} h4 {\n        font-size: 18px !important;\n        margin-bottom: 15px !important;\n      }\n      #${popupId} h5 {\n        font-size: 15px !important;\n        margin-bottom: 10px !important;\n      }\n      #${popupId} button {\n        font-size: 14px !important;\n        padding: 10px 16px !important;\n        min-height: 44px;\n      }\n      #${popupId} .stats-container {\n        flex-direction: column !important;\n        gap: 8px !important;\n      }\n      #${popupId} .stats-item {\n        flex: none !important;\n        padding: 12px !important;\n      }\n      #${popupId} .item-list {\n        max-height: 120px !important;\n        font-size: 13px !important;\n      }\n      #${popupId} .item-list div {\n        padding: 6px 10px !important;\n        margin: 3px !important;\n        font-size: 12px !important;\n      }\n    }\n    @media (max-width: 480px) {\n      #${popupId} > div {\n        margin-top: 2vh !important;\n        max-height: 96vh !important;\n        padding: 12px;\n      }\n      #${popupId} h4 {\n        font-size: 16px !important;\n      }\n      #${popupId} .stats-item {\n        padding: 10px !important;\n      }\n      #${popupId} .stats-item div:first-child {\n        font-size: 13px !important;\n      }\n      #${popupId} .stats-item div:last-child {\n        font-size: 16px !important;\n      }\n    }\n  </style>`;\n    $(`#${popupId}`).append(mobileStyles);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/喵喵预设配置管理/辅助弹窗功能.ts\n\n}");

/***/ }),

/***/ "./src/喵喵预设配置管理/配置存储和读取.ts":
/*!*********************************!*\
  !*** ./src/喵喵预设配置管理/配置存储和读取.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearConfigCache: () => (/* binding */ clearConfigCache),\n/* harmony export */   getPresetNameByIdentifier: () => (/* binding */ getPresetNameByIdentifier),\n/* harmony export */   getStoredConfigs: () => (/* binding */ getStoredConfigs),\n/* harmony export */   renderConfigsList: () => (/* binding */ renderConfigsList),\n/* harmony export */   setStoredConfigs: () => (/* binding */ setStoredConfigs)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./初始化和配置 */ \"./src/喵喵预设配置管理/初始化和配置.ts\");\n\n// 添加配置缓存\nlet configCache = null;\nlet lastCacheTime = 0;\nconst CONFIG_CACHE_DURATION = 10000; // 10秒缓存\nasync function getStoredConfigs() {\n    // 检查缓存是否有效\n    const now = Date.now();\n    if (configCache && now - lastCacheTime < CONFIG_CACHE_DURATION) {\n        return configCache;\n    }\n    let worldbookEntries;\n    try {\n        worldbookEntries = await TavernHelper.getWorldbook(___WEBPACK_IMPORTED_MODULE_0__.CONFIG_LOREBOOK_NAME);\n    }\n    catch (error) {\n        return {};\n    }\n    const v2Entry = worldbookEntries.find((entry) => entry.strategy?.keys?.includes(___WEBPACK_IMPORTED_MODULE_0__.V2_MIGRATION_KEY));\n    if (v2Entry) {\n        console.log('喵喵预设配置管理: 检测到旧版合并数据，正在迁移...');\n        try {\n            const configsArray = JSON.parse(v2Entry.content);\n            const migratedEntries = configsArray.map((config) => ({\n                name: config.name || config.id,\n                strategy: { type: 'constant', keys: [config.id] },\n                content: JSON.stringify(config),\n                enabled: false,\n            }));\n            const otherEntries = worldbookEntries.filter((entry) => !entry.strategy?.keys?.includes(___WEBPACK_IMPORTED_MODULE_0__.V2_MIGRATION_KEY));\n            await TavernHelper.createOrReplaceWorldbook(___WEBPACK_IMPORTED_MODULE_0__.CONFIG_LOREBOOK_NAME, [...otherEntries, ...migratedEntries]);\n            toastr.info('喵喵预设配置管理：已自动升级数据格式。');\n            worldbookEntries = await TavernHelper.getWorldbook(___WEBPACK_IMPORTED_MODULE_0__.CONFIG_LOREBOOK_NAME);\n        }\n        catch (e) {\n            console.error('迁移配置失败:', e);\n            toastr.error('自动迁移配置数据失败，请检查控制台。');\n        }\n    }\n    const configs = {};\n    for (const entry of worldbookEntries) {\n        try {\n            const configData = JSON.parse(entry.content);\n            if (configData.id && configData.name && Array.isArray(configData.states)) {\n                configs[configData.id] = configData;\n            }\n        }\n        catch (e) {\n            // 忽略解析失败的条目\n        }\n    }\n    // 更新缓存\n    configCache = configs;\n    lastCacheTime = now;\n    return configs;\n}\n// 清除配置缓存\nfunction clearConfigCache() {\n    configCache = null;\n    lastCacheTime = 0;\n}\n// 通过识别条目ID获取预设名称\nasync function getPresetNameByIdentifier(identifierId) {\n    try {\n        console.log(`正在查找识别条目ID: ${identifierId}`);\n        const presetNames = TavernHelper.getPresetNames();\n        console.log(`可用预设列表:`, presetNames);\n        for (const presetName of presetNames) {\n            const preset = TavernHelper.getPreset(presetName);\n            if (preset && preset.prompts) {\n                // 检查 prompts 和 prompts_unused 两个数组\n                const allPrompts = [...preset.prompts, ...(preset.prompts_unused || [])];\n                const hasIdentifier = allPrompts.some((p) => p.id === identifierId);\n                if (hasIdentifier) {\n                    console.log(`在预设 \"${presetName}\" 中找到识别条目ID: ${identifierId}`);\n                    return presetName;\n                }\n            }\n        }\n        console.warn(`未找到识别条目ID: ${identifierId}`);\n        return null;\n    }\n    catch (error) {\n        console.error('通过识别条目获取预设名称失败:', error);\n        return null;\n    }\n}\nasync function setStoredConfigs(configsObject) {\n    try {\n        const nameCounts = {};\n        const entries = Object.values(configsObject).map(config => {\n            let entryName = config.name;\n            nameCounts[entryName] = (nameCounts[entryName] || 0) + 1;\n            if (nameCounts[entryName] > 1) {\n                entryName = `${entryName} (${config.id.slice(-5)})`;\n            }\n            return {\n                name: entryName,\n                strategy: { type: 'constant', keys: [config.id] },\n                content: JSON.stringify(config),\n                enabled: false,\n                comment: `MiaoMiao Preset Config: ${config.name} (ID: ${config.id})`,\n            };\n        });\n        await TavernHelper.createOrReplaceWorldbook(___WEBPACK_IMPORTED_MODULE_0__.CONFIG_LOREBOOK_NAME, entries);\n    }\n    catch (error) {\n        console.error('写入配置到世界书失败:', error);\n        toastr.error('配置保存/更新失败，请检查控制台日志。');\n    }\n}\nasync function renderConfigsList() {\n    const configsObject = await getStoredConfigs();\n    const configs = Object.values(configsObject);\n    const listElement = $('#preset-manager-list');\n    listElement.empty();\n    if (configs.length === 0) {\n        listElement.append('<li style=\"color:#888; padding:10px;\">暂无已保存的配置。</li>');\n        return;\n    }\n    // 使用异步分组，优先通过识别条目ID获取预设名称\n    const groupedConfigs = {};\n    for (const config of configs) {\n        let groupName = '未分类';\n        if (config.identifierId) {\n            // 优先使用识别条目ID获取预设名称\n            const presetName = await getPresetNameByIdentifier(config.identifierId);\n            if (presetName) {\n                // 如果找到的是\"in_use\"，需要转换为当前正在使用的实际预设名称\n                if (presetName === 'in_use') {\n                    const currentPresetName = TavernHelper.getLoadedPresetName();\n                    groupName = currentPresetName !== 'in_use' ? currentPresetName : 'in_use';\n                    console.log(`配置 \"${config.name}\" 找到in_use，转换为当前预设: ${groupName}`);\n                }\n                else {\n                    groupName = presetName;\n                    console.log(`配置 \"${config.name}\" 通过识别条目ID找到预设: ${presetName}`);\n                }\n            }\n            else if (config.presetName && config.presetName !== 'in_use') {\n                // 回退到预设名称，但排除\"in_use\"\n                groupName = config.presetName;\n                console.log(`配置 \"${config.name}\" 使用预设名称: ${config.presetName}`);\n            }\n            else {\n                console.warn(`配置 \"${config.name}\" 无法找到有效预设名称，使用默认分组`);\n            }\n        }\n        else if (config.presetName && config.presetName !== 'in_use') {\n            // 向后兼容：使用预设名称，但排除\"in_use\"\n            groupName = config.presetName;\n            console.log(`配置 \"${config.name}\" 使用预设名称（向后兼容）: ${config.presetName}`);\n        }\n        else {\n            console.warn(`配置 \"${config.name}\" 没有有效的预设信息，使用默认分组`);\n        }\n        if (!groupedConfigs[groupName])\n            groupedConfigs[groupName] = [];\n        groupedConfigs[groupName].push(config);\n    }\n    const sortedGroupNames = Object.keys(groupedConfigs).sort((a, b) => {\n        if (a === '未分类')\n            return 1;\n        if (b === '未分类')\n            return -1;\n        return a.localeCompare(b);\n    });\n    for (const groupName of sortedGroupNames) {\n        const configsInGroup = groupedConfigs[groupName];\n        const safeGroupName = $('<div/>').text(groupName).html();\n        const isUncategorized = groupName === '未分类';\n        const groupElement = $(`\n            <details class=\"pm-config-group\" ${isUncategorized ? 'open' : ''}>\n                <summary class=\"pm-config-group-summary\">${safeGroupName} <span class=\"pm-config-count\">(${configsInGroup.length})</span></summary>\n                <ul class=\"pm-config-sublist\"></ul>\n            </details>\n        `);\n        const sublist = groupElement.find('.pm-config-sublist');\n        for (const configData of configsInGroup) {\n            const boundCharDisplay = configData.boundCharName\n                ? `<span style=\"color:#4CAF50; margin-left: 8px; font-weight:bold;\">(绑定: ${configData.boundCharName})</span>`\n                : '';\n            const listItem = $(`\n                <li style=\"display:flex; justify-content:space-between; align-items:center; padding:10px; border-bottom: 1px solid #f0e2d0; font-size:14px;\">\n                    <div style=\"display:flex; flex-direction:column; align-items:flex-start; overflow:hidden; margin-right: 10px; flex: 1; min-width: 0;\">\n                        <span style=\"font-weight:bold; white-space:nowrap; overflow:hidden; text-overflow:ellipsis; max-width: 100%;\" title=\"${$('<div/>').text(configData.name).html()}\">${$('<div/>').text(configData.name).html()}${boundCharDisplay}</span>\n                    </div>\n                    <div class=\"pm-actions-container\">\n                        <button data-id=\"${configData.id}\" name=\"load-config\" style=\"background-color:#f9d6a5; color:#3a2c2c;\">加载</button>\n                        <button data-id=\"${configData.id}\" name=\"delete-config\" style=\"background-color:#f5a8a0; color:#fff;\">删除</button>\n                        <div class=\"pm-more-btn-wrapper\">\n                            <button name=\"more-actions\" style=\"background-color:#b0bec5; color:#fff;\">更多</button>\n                            <div class=\"pm-submenu\">\n                                <button data-id=\"${configData.id}\" name=\"view-config\">查看</button>\n                                <button data-id=\"${configData.id}\" name=\"update-config\">更新</button>\n                                <button data-id=\"${configData.id}\" name=\"rename-config\">重命名</button>\n                                <button data-id=\"${configData.id}\" name=\"bind-regex\">正则</button>\n                                <button data-id=\"${configData.id}\" name=\"export-config\">导出</button>\n                                <div style=\"border-top: 1px solid #eee; margin: 5px 0;\"></div>\n                                <button name=\"close-submenu\" style=\"color: #888; text-align: center;\">关闭</button>\n                            </div>\n                        </div>\n                    </div>\n                </li>\n            `);\n            sublist.append(listItem);\n        }\n        listElement.append(groupElement);\n    }\n    // 绑定按钮事件\n    // 使用动态导入避免循环引用，添加延迟确保DOM完全更新\n    setTimeout(() => {\n        Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./事件绑定 */ \"./src/喵喵预设配置管理/事件绑定.ts\"))\n            .then(({ bindConfigListEvents }) => {\n            bindConfigListEvents();\n        })\n            .catch(error => {\n            console.error('绑定按钮事件失败:', error);\n        });\n    }, 100);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/喵喵预设配置管理/配置存储和读取.ts\n\n}");

/***/ }),

/***/ "./src/喵喵预设配置管理/配置操作功能.ts":
/*!********************************!*\
  !*** ./src/喵喵预设配置管理/配置操作功能.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autoCreateIdentifiersForAllPresets: () => (/* binding */ autoCreateIdentifiersForAllPresets),\n/* harmony export */   createIdentifierForCurrentPreset: () => (/* binding */ createIdentifierForCurrentPreset),\n/* harmony export */   deleteConfig: () => (/* binding */ deleteConfig),\n/* harmony export */   loadConfig: () => (/* binding */ loadConfig),\n/* harmony export */   renameConfig: () => (/* binding */ renameConfig),\n/* harmony export */   saveCurrentConfig: () => (/* binding */ saveCurrentConfig),\n/* harmony export */   updateConfig: () => (/* binding */ updateConfig)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./初始化和配置 */ \"./src/喵喵预设配置管理/初始化和配置.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./条目分组功能 */ \"./src/喵喵预设配置管理/条目分组功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./界面创建和管理 */ \"./src/喵喵预设配置管理/界面创建和管理.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./辅助弹窗功能 */ \"./src/喵喵预设配置管理/辅助弹窗功能.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./配置存储和读取 */ \"./src/喵喵预设配置管理/配置存储和读取.ts\");\n\n\n\n\n\n// 特殊识别条目的名称和内容\nconst IDENTIFIER_PROMPT_NAME = '*喵喵脚本识别*';\nconst IDENTIFIER_PROMPT_CONTENT = '';\n// 触发一次预设保存，避免条目更改丢失\nfunction triggerPresetSave() {\n    try {\n        const $btn = $('#update_oai_preset');\n        if ($btn.length) {\n            $btn.trigger('click');\n            console.log('已触发预设保存');\n        }\n        else {\n            console.warn('未找到预设保存按钮 #update_oai_preset');\n        }\n    }\n    catch (err) {\n        console.error('触发预设保存时出错:', err);\n    }\n}\n// 创建或获取识别条目\nasync function createOrGetIdentifierPrompt() {\n    try {\n        // 获取当前预设的所有条目\n        const preset = TavernHelper.getPreset('in_use');\n        const prompts = [...preset.prompts, ...preset.prompts_unused];\n        // 查找是否已存在识别条目\n        const existingPrompt = prompts.find(p => p.name === IDENTIFIER_PROMPT_NAME);\n        if (existingPrompt) {\n            console.log('找到现有识别条目:', existingPrompt.id);\n            return existingPrompt.id;\n        }\n        // 创建新的识别条目\n        console.log('创建新的识别条目...');\n        await TavernHelper.updatePresetWith('in_use', preset => {\n            const newPrompt = {\n                id: (0,___WEBPACK_IMPORTED_MODULE_0__.generateUniqueId)(),\n                name: IDENTIFIER_PROMPT_NAME,\n                enabled: false, // 不启用\n                position: {\n                    type: 'relative',\n                },\n                role: 'system',\n                content: IDENTIFIER_PROMPT_CONTENT,\n            };\n            // 添加到预设的prompts数组末尾\n            preset.prompts.push(newPrompt);\n            return preset;\n        }, { render: 'immediate' });\n        // 触发保存\n        triggerPresetSave();\n        // 重新获取条目列表以获取新创建的ID\n        const updatedPreset = TavernHelper.getPreset('in_use');\n        const updatedPrompts = [...updatedPreset.prompts, ...updatedPreset.prompts_unused];\n        const newPrompt = updatedPrompts.find(p => p.name === IDENTIFIER_PROMPT_NAME);\n        if (newPrompt) {\n            console.log('识别条目创建成功，ID:', newPrompt.id);\n            return newPrompt.id;\n        }\n        else {\n            console.error('无法找到新创建的识别条目');\n            return null;\n        }\n    }\n    catch (error) {\n        console.error('创建识别条目失败:', error);\n        return null;\n    }\n}\n// 确保当前预设中有指定的识别条目\nasync function ensureIdentifierInCurrentPreset(identifierId) {\n    try {\n        const preset = TavernHelper.getPreset('in_use');\n        const prompts = [...preset.prompts, ...preset.prompts_unused];\n        // 检查是否已存在该识别条目\n        const existingPrompt = prompts.find(p => p.id === identifierId);\n        if (existingPrompt) {\n            console.log('当前预设中已存在识别条目:', identifierId);\n            return;\n        }\n        // 如果不存在，创建该识别条目\n        console.log('在当前预设中创建识别条目:', identifierId);\n        await TavernHelper.updatePresetWith('in_use', preset => {\n            const newPrompt = {\n                id: identifierId,\n                name: IDENTIFIER_PROMPT_NAME,\n                enabled: false, // 不启用\n                position: {\n                    type: 'relative',\n                },\n                role: 'system',\n                content: IDENTIFIER_PROMPT_CONTENT,\n            };\n            // 添加到预设的prompts数组末尾\n            preset.prompts.push(newPrompt);\n            return preset;\n        }, { render: 'immediate' });\n        // 触发保存\n        triggerPresetSave();\n        console.log('识别条目已添加到当前预设');\n    }\n    catch (error) {\n        console.error('确保识别条目存在失败:', error);\n    }\n}\n// 为指定预设创建识别条目\nasync function createIdentifierForPreset(presetName) {\n    try {\n        // 切换到目标预设\n        if (!TavernHelper.loadPreset(presetName)) {\n            console.warn(`无法加载预设: ${presetName}`);\n            return null;\n        }\n        // 等待预设切换完成\n        await new Promise(resolve => setTimeout(resolve, 500));\n        // 检查预设是否已有识别条目\n        const preset = TavernHelper.getPreset('in_use');\n        const prompts = [...preset.prompts, ...preset.prompts_unused];\n        const existingIdentifier = prompts.find(p => p.name === IDENTIFIER_PROMPT_NAME);\n        if (existingIdentifier) {\n            console.log(`预设 \"${presetName}\" 已存在识别条目:`, existingIdentifier.id);\n            return existingIdentifier.id;\n        }\n        // 创建新的识别条目\n        const identifierId = (0,___WEBPACK_IMPORTED_MODULE_0__.generateUniqueId)();\n        console.log(`为预设 \"${presetName}\" 创建识别条目，ID:`, identifierId);\n        await TavernHelper.updatePresetWith('in_use', preset => {\n            const newPrompt = {\n                id: identifierId,\n                name: IDENTIFIER_PROMPT_NAME,\n                enabled: false, // 不启用\n                position: {\n                    type: 'relative',\n                },\n                role: 'system',\n                content: IDENTIFIER_PROMPT_CONTENT,\n            };\n            // 添加到预设的prompts数组末尾\n            preset.prompts.push(newPrompt);\n            return preset;\n        }, { render: 'immediate' });\n        // 触发保存\n        triggerPresetSave();\n        console.log(`预设 \"${presetName}\" 识别条目创建完成，ID:`, identifierId);\n        return identifierId;\n    }\n    catch (error) {\n        console.error(`为预设 \"${presetName}\" 创建识别条目失败:`, error);\n        return null;\n    }\n}\n// 为当前预设创建识别条目并更新所有相关配置\nasync function createIdentifierForCurrentPreset() {\n    try {\n        // 检查当前预设是否已有识别条目\n        const preset = TavernHelper.getPreset('in_use');\n        const prompts = [...preset.prompts, ...preset.prompts_unused];\n        const existingIdentifier = prompts.find(p => p.name === IDENTIFIER_PROMPT_NAME);\n        if (existingIdentifier) {\n            toastr.warning('当前预设已存在识别条目，无需重复创建');\n            return;\n        }\n        // 创建新的识别条目\n        const identifierId = (0,___WEBPACK_IMPORTED_MODULE_0__.generateUniqueId)();\n        console.log('为当前预设创建识别条目，ID:', identifierId);\n        await TavernHelper.updatePresetWith('in_use', preset => {\n            const newPrompt = {\n                id: identifierId,\n                name: IDENTIFIER_PROMPT_NAME,\n                enabled: false, // 不启用\n                position: {\n                    type: 'relative',\n                },\n                role: 'system',\n                content: IDENTIFIER_PROMPT_CONTENT,\n            };\n            // 添加到预设的prompts数组末尾\n            preset.prompts.push(newPrompt);\n            return preset;\n        }, { render: 'immediate' });\n        // 触发保存\n        triggerPresetSave();\n        // 获取当前预设名称\n        const currentPresetName = TavernHelper.getLoadedPresetName();\n        console.log('当前预设名称:', currentPresetName);\n        // 更新所有使用当前预设名称的旧配置，添加识别条目ID\n        const configs = await (0,___WEBPACK_IMPORTED_MODULE_4__.getStoredConfigs)();\n        let updatedCount = 0;\n        for (const configId in configs) {\n            const config = configs[configId];\n            // 如果配置没有identifierId且presetName匹配当前预设\n            if (!config.identifierId && config.presetName === currentPresetName) {\n                config.identifierId = identifierId;\n                updatedCount++;\n                console.log(`更新配置 \"${config.name}\" 添加识别条目ID`);\n            }\n        }\n        if (updatedCount > 0) {\n            // 保存更新后的配置\n            await (0,___WEBPACK_IMPORTED_MODULE_4__.setStoredConfigs)(configs);\n            // 清除缓存并重新渲染\n            (0,___WEBPACK_IMPORTED_MODULE_4__.clearConfigCache)();\n            await (0,___WEBPACK_IMPORTED_MODULE_4__.renderConfigsList)();\n            toastr.success(`已为当前预设创建识别条目，并更新了 ${updatedCount} 个相关配置`);\n        }\n        else {\n            toastr.success('已为当前预设创建识别条目');\n        }\n        console.log('识别条目创建完成，ID:', identifierId);\n    }\n    catch (error) {\n        console.error('创建识别条目失败:', error);\n        toastr.error('创建识别条目失败，请检查控制台日志');\n    }\n}\n// 自动为所有预设创建识别条目并更新配置\nasync function autoCreateIdentifiersForAllPresets() {\n    try {\n        console.log('开始自动为所有预设创建识别条目...');\n        // 获取所有预设名称\n        const presetNames = TavernHelper.getPresetNames();\n        console.log('找到预设列表:', presetNames);\n        // 获取所有配置\n        const configs = await (0,___WEBPACK_IMPORTED_MODULE_4__.getStoredConfigs)();\n        console.log('找到配置数量:', Object.keys(configs).length);\n        // 统计需要处理的预设\n        const presetToProcess = new Set();\n        for (const configId in configs) {\n            const config = configs[configId];\n            if (!config.identifierId && config.presetName) {\n                presetToProcess.add(config.presetName);\n            }\n        }\n        console.log('需要处理的预设:', Array.from(presetToProcess));\n        if (presetToProcess.size === 0) {\n            console.log('所有配置都已有关联的识别条目，无需处理');\n            return;\n        }\n        // 记录当前预设，稍后恢复\n        const originalPreset = TavernHelper.getLoadedPresetName();\n        console.log('当前预设:', originalPreset);\n        let totalUpdated = 0;\n        const presetIdentifierMap = new Map();\n        // 为每个需要处理的预设创建识别条目\n        for (const presetName of presetToProcess) {\n            if (presetNames.includes(presetName)) {\n                console.log(`处理预设: ${presetName}`);\n                const identifierId = await createIdentifierForPreset(presetName);\n                if (identifierId) {\n                    presetIdentifierMap.set(presetName, identifierId);\n                    console.log(`预设 \"${presetName}\" 识别条目ID: ${identifierId}`);\n                }\n            }\n            else {\n                console.warn(`预设 \"${presetName}\" 不存在，跳过`);\n            }\n        }\n        // 更新所有相关配置\n        for (const configId in configs) {\n            const config = configs[configId];\n            if (!config.identifierId && config.presetName && presetIdentifierMap.has(config.presetName)) {\n                config.identifierId = presetIdentifierMap.get(config.presetName);\n                totalUpdated++;\n                console.log(`更新配置 \"${config.name}\" 关联预设 \"${config.presetName}\"`);\n            }\n        }\n        // 保存更新后的配置\n        if (totalUpdated > 0) {\n            await (0,___WEBPACK_IMPORTED_MODULE_4__.setStoredConfigs)(configs);\n            console.log(`已更新 ${totalUpdated} 个配置`);\n        }\n        // 恢复原始预设\n        if (originalPreset && presetNames.includes(originalPreset)) {\n            TavernHelper.loadPreset(originalPreset);\n            console.log(`已恢复原始预设: ${originalPreset}`);\n        }\n        // 清除缓存并重新渲染\n        (0,___WEBPACK_IMPORTED_MODULE_4__.clearConfigCache)();\n        await (0,___WEBPACK_IMPORTED_MODULE_4__.renderConfigsList)();\n        toastr.success(`自动创建完成！为 ${presetIdentifierMap.size} 个预设创建了识别条目，更新了 ${totalUpdated} 个配置`);\n        console.log('自动创建识别条目完成');\n    }\n    catch (error) {\n        console.error('自动创建识别条目失败:', error);\n        toastr.error('自动创建识别条目失败，请检查控制台日志');\n    }\n}\nasync function renameConfig(configId) {\n    const configs = await (0,___WEBPACK_IMPORTED_MODULE_4__.getStoredConfigs)();\n    const configToRename = configs[configId];\n    if (!configToRename) {\n        toastr.error('找不到要重命名的配置。');\n        return;\n    }\n    const oldName = configToRename.name;\n    const newName = await triggerSlash(`/input default=\"${oldName}\" \"请输入新的配置名称\"`);\n    if (newName && newName.trim() !== '') {\n        configs[configId].name = newName.trim();\n        await (0,___WEBPACK_IMPORTED_MODULE_4__.setStoredConfigs)(configs);\n        (0,___WEBPACK_IMPORTED_MODULE_4__.clearConfigCache)(); // 清除配置缓存\n        toastr.success(`配置已从 \"${oldName}\" 重命名为 \"${newName.trim()}\"。`);\n        await (0,___WEBPACK_IMPORTED_MODULE_4__.renderConfigsList)();\n        (0,___WEBPACK_IMPORTED_MODULE_2__.updateConfigListCache)(); // 更新UI缓存\n    }\n    else {\n        toastr.info('重命名操作已取消。');\n    }\n}\nasync function updateConfig(configId) {\n    try {\n        const configs = await (0,___WEBPACK_IMPORTED_MODULE_4__.getStoredConfigs)();\n        const oldConfig = configs[configId];\n        if (!oldConfig) {\n            toastr.error(`配置不存在，无法更新。`);\n            return;\n        }\n        const loadedPresetName = TavernHelper.getLoadedPresetName();\n        const preset = TavernHelper.getPreset('in_use');\n        const allPrompts = [...preset.prompts, ...preset.prompts_unused];\n        const currentPromptStates = allPrompts.map((p) => ({\n            id: p.id,\n            enabled: p.enabled,\n            name: p.name,\n        }));\n        const configToSave = {\n            ...oldConfig,\n            presetName: loadedPresetName,\n            states: currentPromptStates,\n        };\n        const updateRegexChoice = await triggerSlash(`/popup okButton=\"是\" cancelButton=\"否\" result=true \"是否要同时更新此配置的正则开关状态？\"`);\n        if (updateRegexChoice === '1') {\n            const allRegexes = await TavernHelper.getTavernRegexes({ scope: 'global' });\n            const newRegexStates = allRegexes.map((regex) => ({\n                id: regex.id,\n                enabled: regex.enabled,\n            }));\n            configToSave.regexStates = newRegexStates;\n            toastr.info('已同步更新正则状态。');\n        }\n        const oldStateIds = new Set(oldConfig.states.map(s => s.id));\n        const newEntries = configToSave.states.filter(s => !oldStateIds.has(s.id));\n        if (newEntries.length > 0) {\n            const promptIdToNameMap = new Map(currentPromptStates.map((p) => [p.id, p.name]));\n            const userChoices = await (0,___WEBPACK_IMPORTED_MODULE_3__.showNewEntriesPopup)(newEntries, promptIdToNameMap);\n            if (userChoices !== null) {\n                const choicesMap = new Map(userChoices.map((choice) => [choice.id, choice.enabled]));\n                configToSave.states.forEach(state => {\n                    if (choicesMap.has(state.id))\n                        state.enabled = choicesMap.get(state.id);\n                });\n            }\n            else {\n                toastr.info('已为新条目保留默认状态。');\n            }\n        }\n        configs[configId] = configToSave;\n        await (0,___WEBPACK_IMPORTED_MODULE_4__.setStoredConfigs)(configs);\n        (0,___WEBPACK_IMPORTED_MODULE_4__.clearConfigCache)(); // 清除配置缓存\n        toastr.success(`配置 \"${configToSave.name}\" 已更新。`);\n        await (0,___WEBPACK_IMPORTED_MODULE_4__.renderConfigsList)();\n        (0,___WEBPACK_IMPORTED_MODULE_2__.updateConfigListCache)(); // 更新UI缓存\n    }\n    catch (error) {\n        console.error('更新预设配置失败:', error);\n        toastr.error('更新预设配置失败，请检查控制台获取更多信息。');\n    }\n}\nasync function saveCurrentConfig() {\n    // 先创建识别条目，然后通过识别条目ID获取正确的预设名称\n    const identifierId = await createOrGetIdentifierPrompt();\n    if (!identifierId) {\n        toastr.error('无法创建识别条目，配置保存失败');\n        return;\n    }\n    // 获取当前预设名称（用于显示和向后兼容）\n    const currentPresetName = await (0,___WEBPACK_IMPORTED_MODULE_4__.getPresetNameByIdentifier)(identifierId);\n    if (!currentPresetName) {\n        toastr.error('无法识别当前预设，配置保存失败');\n        return;\n    }\n    const blacklist = ['恶灵低语', 'deepspay', 'spaymale', '深阉', '小骡之神', '小猫之神', 'kemini'];\n    if (blacklist.some(keyword => currentPresetName.toLowerCase().includes(keyword))) {\n        toastr.warning('*你使用了作者黑名单的预设哦（盯）*');\n        return;\n    }\n    const nameInput = $('#preset-manager-name-input');\n    const configName = nameInput.val()?.toString().trim();\n    if (!configName) {\n        toastr.error('请输入配置名称。');\n        return;\n    }\n    try {\n        console.log('当前预设名称:', currentPresetName);\n        console.log('识别条目ID:', identifierId);\n        const preset = TavernHelper.getPreset('in_use');\n        const allPrompts = [...preset.prompts, ...preset.prompts_unused];\n        const promptStates = allPrompts.map((p) => ({\n            id: p.id,\n            enabled: p.enabled,\n            name: p.name,\n        }));\n        const configToSave = {\n            id: (0,___WEBPACK_IMPORTED_MODULE_0__.generateUniqueId)(),\n            name: configName,\n            presetName: currentPresetName, // 使用实际的预设名称而不是\"in_use\"\n            identifierId: identifierId, // 使用识别条目ID进行可靠的预设识别\n            states: promptStates,\n        };\n        if ($('#preset-manager-bind-char').is(':checked')) {\n            const charData = await TavernHelper.getCharData('current');\n            if (charData && charData.avatar) {\n                configToSave.boundCharAvatar = charData.avatar;\n                configToSave.boundCharName = charData.name;\n            }\n            else {\n                toastr.warning('无法获取当前角色信息，配置未绑定。');\n            }\n        }\n        const configs = await (0,___WEBPACK_IMPORTED_MODULE_4__.getStoredConfigs)();\n        configs[configToSave.id] = configToSave;\n        await (0,___WEBPACK_IMPORTED_MODULE_4__.setStoredConfigs)(configs);\n        (0,___WEBPACK_IMPORTED_MODULE_4__.clearConfigCache)(); // 清除配置缓存\n        toastr.success(`配置 \"${configName}\" 已保存。`);\n        nameInput.val('');\n        $('#preset-manager-bind-char').prop('checked', false);\n        await (0,___WEBPACK_IMPORTED_MODULE_4__.renderConfigsList)();\n        (0,___WEBPACK_IMPORTED_MODULE_2__.updateConfigListCache)(); // 更新UI缓存\n    }\n    catch (error) {\n        console.error('保存预设配置失败:', error);\n        toastr.error('保存预设配置失败，请检查控制台获取更多信息。');\n    }\n}\nasync function loadConfig(configId, shouldToggleUI = true) {\n    try {\n        const configs = await (0,___WEBPACK_IMPORTED_MODULE_4__.getStoredConfigs)();\n        const configToLoad = configs[configId];\n        if (!configToLoad) {\n            toastr.error(`配置不存在。`);\n            return;\n        }\n        // 优先使用识别条目ID查找预设，如果没有则回退到预设名称\n        let targetPresetName = null;\n        if (configToLoad.identifierId) {\n            // 使用识别条目ID查找预设\n            targetPresetName = await (0,___WEBPACK_IMPORTED_MODULE_4__.getPresetNameByIdentifier)(configToLoad.identifierId);\n            if (targetPresetName) {\n                // 如果找到的是\"in_use\"，需要转换为当前正在使用的实际预设名称\n                if (targetPresetName === 'in_use') {\n                    const currentPresetName = TavernHelper.getLoadedPresetName();\n                    targetPresetName = currentPresetName !== 'in_use' ? currentPresetName : 'in_use';\n                    console.log('通过识别条目ID找到in_use，转换为当前预设:', targetPresetName);\n                }\n                else {\n                    console.log('通过识别条目ID找到预设:', targetPresetName);\n                }\n            }\n            else {\n                console.warn('无法通过识别条目ID找到预设，尝试使用预设名称');\n            }\n        }\n        // 如果通过识别条目ID没找到，尝试使用预设名称（向后兼容）\n        if (!targetPresetName && configToLoad.presetName) {\n            if (TavernHelper.getPresetNames().includes(configToLoad.presetName)) {\n                targetPresetName = configToLoad.presetName;\n                console.log('通过预设名称找到预设:', targetPresetName);\n            }\n            else {\n                console.warn(`预设 \"${configToLoad.presetName}\" 不存在，尝试扫描所有预设查找识别条目`);\n                // 如果预设名称也不存在，尝试扫描所有预设查找识别条目\n                if (configToLoad.identifierId) {\n                    targetPresetName = await (0,___WEBPACK_IMPORTED_MODULE_4__.getPresetNameByIdentifier)(configToLoad.identifierId);\n                }\n            }\n        }\n        if (targetPresetName) {\n            // 加载预设\n            if (TavernHelper.loadPreset(targetPresetName)) {\n                toastr.info(`已切换到预设 \"${targetPresetName}\"。`);\n                await new Promise(resolve => setTimeout(resolve, 500));\n                // 确保目标预设中有识别条目\n                if (configToLoad.identifierId) {\n                    await ensureIdentifierInCurrentPreset(configToLoad.identifierId);\n                }\n            }\n            else {\n                toastr.error(`加载预设 \"${targetPresetName}\" 失败。`);\n                return;\n            }\n        }\n        else {\n            toastr.warning(`无法找到对应的预设，将仅对当前预设应用条目状态。`);\n        }\n        const promptStates = configToLoad.states;\n        if (!promptStates || !Array.isArray(promptStates)) {\n            toastr.error(`配置 \"${configToLoad.name}\" 数据格式不正确或为空。`);\n            return;\n        }\n        const statesMap = new Map(promptStates.map(s => [s.id, s.enabled]));\n        await TavernHelper.updatePresetWith('in_use', preset => {\n            [...preset.prompts, ...preset.prompts_unused].forEach((prompt) => {\n                if (statesMap.has(prompt.id))\n                    prompt.enabled = statesMap.get(prompt.id);\n            });\n            return preset;\n        });\n        if (configToLoad.regexStates && Array.isArray(configToLoad.regexStates)) {\n            const statesToApply = new Map(configToLoad.regexStates.map(r => [r.id, r.enabled]));\n            if (statesToApply.size > 0) {\n                await TavernHelper.updateTavernRegexesWith(regexes => {\n                    regexes.forEach((regex) => {\n                        if (regex.scope === 'global' && statesToApply.has(regex.id)) {\n                            regex.enabled = statesToApply.get(regex.id);\n                        }\n                    });\n                    return regexes;\n                }, { scope: 'global' });\n                toastr.success(`已应用配置 \"${configToLoad.name}\" 绑定的全局正则。`);\n            }\n        }\n        toastr.success(`已加载配置 \"${configToLoad.name}\"。`);\n        // 加载配置后触发分组恢复\n        setTimeout(() => {\n            (0,___WEBPACK_IMPORTED_MODULE_1__.triggerGroupingRestore)();\n        }, 500);\n        if (shouldToggleUI) {\n            (0,___WEBPACK_IMPORTED_MODULE_2__.toggleUI)();\n        }\n    }\n    catch (error) {\n        console.error('加载预设配置失败:', error);\n        toastr.error('加载预设配置失败，请检查控制台获取更多信息。');\n    }\n}\nasync function deleteConfig(configId) {\n    try {\n        const configs = await (0,___WEBPACK_IMPORTED_MODULE_4__.getStoredConfigs)();\n        const configToDelete = configs[configId];\n        if (configToDelete) {\n            delete configs[configId];\n            await (0,___WEBPACK_IMPORTED_MODULE_4__.setStoredConfigs)(configs);\n            (0,___WEBPACK_IMPORTED_MODULE_4__.clearConfigCache)(); // 清除配置缓存\n            toastr.success(`已删除配置 \"${configToDelete.name}\"。`);\n            await (0,___WEBPACK_IMPORTED_MODULE_4__.renderConfigsList)();\n            (0,___WEBPACK_IMPORTED_MODULE_2__.updateConfigListCache)(); // 更新UI缓存\n        }\n        else {\n            toastr.warning(`配置不存在。`);\n        }\n    }\n    catch (error) {\n        console.error('删除配置失败:', error);\n        toastr.error('删除配置失败，请检查控制台获取更多信息。');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/喵喵预设配置管理/配置操作功能.ts\n\n}");

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
/******/ 
/******/ // startup
/******/ // Load entry module and return exports
/******/ // This entry module can't be inlined because the eval-source-map devtool is used.
/******/ var __webpack_exports__ = __webpack_require__("./src/喵喵预设配置管理/index.ts");
/******/ 
